{
    "sourceFile": "src/layouts/Dashboard/Header/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1744507388198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744508065013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -377,9 +377,10 @@\n \t\t\tnavigation: true,\r\n \t\t\torder_by: 14,\r\n \t\t\tchildren:[],\r\n \t\t\tchildRoute: [],\r\n-\t\t  },{\r\n+\t\t  }\r\n+      ,{\r\n \t\t\tid: 14,\r\n \t\t\tname: \"Service Categories\",\r\n \t\t\ticon: \"customer\",\r\n \t\t\tparent_id: null,\r\n"
                },
                {
                    "date": 1744546645770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,22 @@\n \t\troute: \"/customer-list\",\r\n \t\tidentifier: null,\r\n \t\tnavigation: true,\r\n \t\torder_by: 33,\r\n-\t  },],\r\n+\t  },\r\n+    {\r\n+      id: 14,\r\n+      name: \"Receptions Items\",\r\n+      icon: \"customer\",\r\n+      parent_id: null,\r\n+      api: \"/api/roles\",\r\n+      route: \"/service-list\",\r\n+      identifier: null,\r\n+      navigation: true,\r\n+      order_by: 14,\r\n+      children:[],\r\n+      childRoute: [],\r\n+      }],\r\n     },\r\n     {\r\n       id: 12,\r\n       name: \"Accounts management\",\r\n"
                },
                {
                    "date": 1744546655383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,13 +172,13 @@\n \t\torder_by: 33,\r\n \t  },\r\n     {\r\n       id: 14,\r\n-      name: \"Receptions Items\",\r\n+      name: \"Receptions\",\r\n       icon: \"customer\",\r\n       parent_id: null,\r\n       api: \"/api/roles\",\r\n-      route: \"/service-list\",\r\n+      route: \"/reception-list\",\r\n       identifier: null,\r\n       navigation: true,\r\n       order_by: 14,\r\n       children:[],\r\n"
                },
                {
                    "date": 1744546943047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,8 +171,19 @@\n \t\tnavigation: true,\r\n \t\torder_by: 33,\r\n \t  },\r\n     {\r\n+      id: 33,\r\n+      name: \"Sale Receipt\",\r\n+      icon: \"customer\",\r\n+      parent_id: 12,\r\n+      api: null,\r\n+      route: \"/sales-receipt\",\r\n+      identifier: null,\r\n+      navigation: true,\r\n+      order_by: 33,\r\n+      },\r\n+    {\r\n       id: 14,\r\n       name: \"Receptions\",\r\n       icon: \"customer\",\r\n       parent_id: null,\r\n"
                },
                {
                    "date": 1744614682002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,22 @@\n         navigation: true,\r\n         order_by: 14,\r\n         children:[],\r\n         childRoute: [],\r\n-        }],\r\n+        },\r\n+        {\r\n+          id: 14,\r\n+          name: \"Banks\",\r\n+          icon: \"customer\",\r\n+          parent_id: null,\r\n+          api: \"/api/roles\",\r\n+          route: \"/service-list\",\r\n+          identifier: null,\r\n+          navigation: true,\r\n+          order_by: 14,\r\n+          children:[],\r\n+          childRoute: [],\r\n+          }],\r\n \t  },\r\n \t  \r\n    \r\n   ]\r\n"
                },
                {
                    "date": 1744635291424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,21 @@\n       navigation: true,\r\n       order_by: 14,\r\n       children:[],\r\n       childRoute: [],\r\n-      }],\r\n+      }, {\r\n+        id: 14,\r\n+        name: \"Al DED\",\r\n+        icon: \"customer\",\r\n+        parent_id: null,\r\n+        api: \"/api/roles\",\r\n+        route: \"/bank-list\",\r\n+        identifier: null,\r\n+        navigation: true,\r\n+        order_by: 14,\r\n+        children:[],\r\n+        childRoute: [],\r\n+        }],\r\n     },\r\n     {\r\n       id: 12,\r\n       name: \"Accounts management\",\r\n@@ -434,9 +446,9 @@\n           name: \"Banks\",\r\n           icon: \"customer\",\r\n           parent_id: null,\r\n           api: \"/api/roles\",\r\n-          route: \"/service-list\",\r\n+          route: \"/bank-list\",\r\n           identifier: null,\r\n           navigation: true,\r\n           order_by: 14,\r\n           children:[],\r\n@@ -864,8 +876,11 @@\n                           role={undefined}\r\n                           placement=\"bottom-start\"\r\n                           transition\r\n                           disablePortal\r\n+                          style={{\r\n+                            zIndex: 111,\r\n+                          }}\r\n                         >\r\n                           {({ TransitionProps, placement }) => (\r\n                             <Grow\r\n                               {...TransitionProps}\r\n@@ -879,9 +894,8 @@\n                                   mt: 1,\r\n                                   width: 220,\r\n                                   borderRadius: \"8px\",\r\n                                   overflow: \"hidden\",\r\n-                                  zIndex: 111,\r\n                                 }}\r\n                               >\r\n                                 <ClickAwayListener onClickAway={handleDropdownClose}>\r\n                                   <MenuList autoFocusItem={openDropdownId === item.id}>\r\n"
                },
                {
                    "date": 1744635297817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n         name: \"Al DED\",\r\n         icon: \"customer\",\r\n         parent_id: null,\r\n         api: \"/api/roles\",\r\n-        route: \"/bank-list\",\r\n+        route: \"/aldeed-list\",\r\n         identifier: null,\r\n         navigation: true,\r\n         order_by: 14,\r\n         children:[],\r\n"
                }
            ],
            "date": 1744507388198,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Divider,\r\n  ListItemIcon,\r\n  Menu,\r\n  MenuItem,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Popper,\r\n  Grow,\r\n  Paper,\r\n  ClickAwayListener,\r\n  MenuList,\r\n  Container,\r\n  useMediaQuery,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n} from \"@mui/material\"\r\nimport {\r\n  Logout,\r\n  Settings as SettingsIcon,\r\n  Menu as MenuIcon,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  KeyboardArrowDown,\r\n  Dashboard,\r\n  People,\r\n  AccountBalance,\r\n  Receipt,\r\n  ReceiptLong,\r\n  BarChart,\r\n  Balance,\r\n  Calculate,\r\n  ShowChart,\r\n  Assessment,\r\n  Person,\r\n  Security,\r\n  Language,\r\n} from \"@mui/icons-material\"\r\nimport { useAuth } from \"context/UseContext\"\r\nimport { useLocation, useNavigate } from \"react-router-dom\"\r\nimport ConfirmationDialog from \"components/Dialog/ConfirmationDialog\"\r\nimport Avatar from \"@mui/material/Avatar\"\r\nimport AuthServices from \"services/Auth\"\r\nimport { ErrorToaster } from \"components/Toaster\"\r\n\r\nfunction DropDown({ anchorEl, openDropdown, handleClose }) {\r\n  const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n  const { userLogout } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleLogout = async () => {\r\n    const obj = {\r\n      fcm_token: localStorage.getItem(\"fcmToken\"),\r\n    }\r\n    try {\r\n      await AuthServices.handleLogout(obj)\r\n      navigate(\"/\")\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={openDropdown}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            width: 200,\r\n            overflow: \"visible\",\r\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.12))\",\r\n            mt: 1.5,\r\n            borderRadius: \"8px\",\r\n            \".MuiSvgIcon-root\": {\r\n              width: 20,\r\n              height: 20,\r\n              ml: 0.5,\r\n              mr: 0.5,\r\n            },\r\n            \"&:before\": {\r\n              content: '\"\"',\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              transform: \"translateY(-50%) rotate(45deg)\",\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => navigate(\"/account-setting\")}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <Typography variant=\"body2\">Account setting</Typography>\r\n        </MenuItem>\r\n        <Divider sx={{ my: 0.5 }} />\r\n        <MenuItem onClick={() => setConfirmationDialog(true)}>\r\n          <ListItemIcon>\r\n            <Logout />\r\n          </ListItemIcon>\r\n          <Typography variant=\"body2\">Logout</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n      <ConfirmationDialog\r\n        open={confirmationDialog}\r\n        onClose={() => setConfirmationDialog(false)}\r\n        message={\"Are you sure you want to logout?\"}\r\n        action={() => {\r\n          setConfirmationDialog(false)\r\n          userLogout()\r\n          handleLogout()\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Header() {\r\n  // Helper function to get icon for child items\r\n  const getChildIcon = (name) => {\r\n    if (name.toLowerCase().includes(\"journal\")) return <ReceiptLong fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"account\")) return <AccountBalance fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"ledger\")) return <Assessment fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"chart\")) return <BarChart fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"balance\")) return <Balance fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"trial\")) return <Calculate fontSize=\"small\" />\r\n    if (name.toLowerCase().includes(\"profit\") || name.toLowerCase().includes(\"pnl\"))\r\n      return <ShowChart fontSize=\"small\" />\r\n    return <Receipt fontSize=\"small\" /> // Default icon\r\n  }\r\n\r\n  const navigationData = [\r\n    {\r\n      id: 2,\r\n      name: \"Sales\",\r\n      icon: \"customer\",\r\n      parent_id: null,\r\n      api: \"/api/customers\",\r\n      route: \"\",\r\n      identifier: null,\r\n      navigation: true,\r\n      order_by: 2,\r\n      children: [  {\r\n\t\tid: 33,\r\n\t\tname: \"Customer Management\",\r\n\t\ticon: \"customer\",\r\n\t\tparent_id: 12,\r\n\t\tapi: null,\r\n\t\troute: \"/customer-list\",\r\n\t\tidentifier: null,\r\n\t\tnavigation: true,\r\n\t\torder_by: 33,\r\n\t  },],\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Accounts management\",\r\n      icon: \"customer\",\r\n      parent_id: null,\r\n      api: null,\r\n      route: null,\r\n      identifier: null,\r\n      navigation: true,\r\n      order_by: 12,\r\n      children: [\r\n        {\r\n          id: 33,\r\n          name: \"Create journal voucher\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/create-journal-voucher\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 33,\r\n        },\r\n        {\r\n          id: 34,\r\n          name: \"Journal vouchers\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: \"/api/accounts/journalVouchers\",\r\n          route: \"/journal-voucher-list\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 34,\r\n        },\r\n        {\r\n          id: 35,\r\n          name: \"Account list\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: \"/api/accounts\",\r\n          route: \"/account-list\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 35,\r\n        },\r\n        {\r\n          id: 36,\r\n          name: \"Account ledger\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/general-ledger\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 36,\r\n        },\r\n        {\r\n          id: 37,\r\n          name: \"General journal ledger\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/general-journal-ledger\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 37,\r\n        },\r\n        {\r\n          id: 38,\r\n          name: \"Chart of accounts\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/chart-of-accounts\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 38,\r\n        },\r\n        {\r\n          id: 39,\r\n          name: \"Trial balance\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/trial-balance\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 39,\r\n        },\r\n        {\r\n          id: 40,\r\n          name: \"Profit loss statement\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/profit-loss-statement\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 40,\r\n        },\r\n        {\r\n          id: 148,\r\n          name: \"PnL customer statement\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/profit-loss-customer-report\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 41,\r\n        },\r\n        {\r\n          id: 41,\r\n          name: \"Balance sheet\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/balance-sheet\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 41,\r\n        },\r\n        {\r\n          id: 147,\r\n          name: \"PnL visas statement\",\r\n          icon: \"customer\",\r\n          parent_id: 12,\r\n          api: null,\r\n          route: \"/profit-loss-visa-report\",\r\n          identifier: null,\r\n          navigation: true,\r\n          order_by: 42,\r\n        },\r\n      ],\r\n      childRoute: [\r\n        \"/create-journal-voucher\",\r\n        \"/journal-voucher-list\",\r\n        \"/account-list\",\r\n        \"/general-ledger\",\r\n        \"/general-journal-ledger\",\r\n        \"/chart-of-accounts\",\r\n        \"/trial-balance\",\r\n        \"/profit-loss-statement\",\r\n        \"/profit-loss-customer-report\",\r\n        \"/balance-sheet\",\r\n        \"/profit-loss-visa-report\",\r\n      ],\r\n    },\r\n\t{\r\n\t\tid: 13,\r\n\t\tname: \"Settings\",\r\n\t\ticon: \"settings\",\r\n\t\tparent_id: null,\r\n\t\tapi: \"/api/users\",\r\n\t\troute: \"/user-list\",\r\n\t\tidentifier: null,\r\n\t\tnavigation: true,\r\n\t\torder_by: 13,\r\n\t\tchildRoute: [ {\r\n\t\t\tid: 13,\r\n\t\t\tname: \"User management\",\r\n\t\t\ticon: \"customer\",\r\n\t\t\tparent_id: null,\r\n\t\t\tapi: \"/api/users\",\r\n\t\t\troute: \"/user-list\",\r\n\t\t\tidentifier: null,\r\n\t\t\tnavigation: true,\r\n\t\t\torder_by: 13,\r\n\t\t\tchildRoute: [],\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tid: 14,\r\n\t\t\tname: \"Role management\",\r\n\t\t\ticon: \"customer\",\r\n\t\t\tparent_id: null,\r\n\t\t\tapi: \"/api/roles\",\r\n\t\t\troute: \"/role-list\",\r\n\t\t\tidentifier: null,\r\n\t\t\tnavigation: true,\r\n\t\t\torder_by: 14,\r\n\t\t\tchildren:[],\r\n\t\t\tchildRoute: [],\r\n\t\t  },],\r\n\t\tchildren: [ {\r\n\t\t\tid: 13,\r\n\t\t\tname: \"User management\",\r\n\t\t\ticon: \"customer\",\r\n\t\t\tparent_id: null,\r\n\t\t\tapi: \"/api/users\",\r\n\t\t\troute: \"/user-list\",\r\n\t\t\tidentifier: null,\r\n\t\t\tnavigation: true,\r\n\t\t\torder_by: 13,\r\n\t\t\tchildRoute: [],\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tid: 14,\r\n\t\t\tname: \"Role management\",\r\n\t\t\ticon: \"customer\",\r\n\t\t\tparent_id: null,\r\n\t\t\tapi: \"/api/roles\",\r\n\t\t\troute: \"/role-list\",\r\n\t\t\tidentifier: null,\r\n\t\t\tnavigation: true,\r\n\t\t\torder_by: 14,\r\n\t\t\tchildren:[],\r\n\t\t\tchildRoute: [],\r\n\t\t  },{\r\n\t\t\tid: 14,\r\n\t\t\tname: \"Service Categories\",\r\n\t\t\ticon: \"customer\",\r\n\t\t\tparent_id: null,\r\n\t\t\tapi: \"/api/roles\",\r\n\t\t\troute: \"/category-list\",\r\n\t\t\tidentifier: null,\r\n\t\t\tnavigation: true,\r\n\t\t\torder_by: 14,\r\n\t\t\tchildren:[],\r\n\t\t\tchildRoute: [],\r\n\t\t  },\r\n      {\r\n        id: 14,\r\n        name: \"Service Items\",\r\n        icon: \"customer\",\r\n        parent_id: null,\r\n        api: \"/api/roles\",\r\n        route: \"/service-list\",\r\n        identifier: null,\r\n        navigation: true,\r\n        order_by: 14,\r\n        children:[],\r\n        childRoute: [],\r\n        }],\r\n\t  },\r\n\t  \r\n   \r\n  ]\r\n\r\n  // Map of navigation items to their icons\r\n  const navIcons = {\r\n    dashboard: <Dashboard fontSize=\"small\" />,\r\n    \"customer management\": <People fontSize=\"small\" />,\r\n    \"accounts management\": <AccountBalance fontSize=\"small\" />,\r\n    \"user management\": <Person fontSize=\"small\" />,\r\n    \"role management\": <Security fontSize=\"small\" />,\r\n    \"settings\": <SettingsIcon fontSize=\"small\" />,\r\n  }\r\n\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const openDropdown = Boolean(anchorEl)\r\n  const [notificationCount, setNotificationCount] = useState(2)\r\n  const [currentPage, setCurrentPage] = useState(\"\")\r\n  const [mobileOpen, setMobileOpen] = useState(false)\r\n  const [openSubmenu, setOpenSubmenu] = useState(null)\r\n  const [dropdownAnchorEl, setDropdownAnchorEl] = useState(null)\r\n  const [openDropdownId, setOpenDropdownId] = useState(null)\r\n  const isMobile = useMediaQuery(\"(max-width:960px)\")\r\n\r\n  // Handle dropdown menu open\r\n  const handleDropdownOpen = (event, id) => {\r\n    setDropdownAnchorEl(event.currentTarget)\r\n    setOpenDropdownId(id)\r\n  }\r\n\r\n  // Handle dropdown menu close\r\n  const handleDropdownClose = () => {\r\n    setDropdownAnchorEl(null)\r\n    setOpenDropdownId(null)\r\n  }\r\n\r\n  // Handle mobile drawer toggle\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen)\r\n  }\r\n\r\n  // Handle submenu toggle in mobile view\r\n  const handleSubmenuToggle = (id) => {\r\n    setOpenSubmenu(openSubmenu === id ? null : id)\r\n  }\r\n\r\n  // Check if a route is active\r\n  const isActive = (route) => {\r\n    if (!route) return false\r\n    return location.pathname === route\r\n  }\r\n\r\n  // Check if any child route is active\r\n  const isChildActive = (childRoutes) => {\r\n    if (!childRoutes || childRoutes.length === 0) return false\r\n    return childRoutes.some((route) => location.pathname === route)\r\n  }\r\n\r\n  // Get current page name\r\n  useEffect(() => {\r\n    const getCurrentPageName = () => {\r\n      // First check direct routes\r\n      for (const item of navigationData) {\r\n        if (item.route && location.pathname === item.route) {\r\n          return item.name\r\n        }\r\n\r\n        // Then check child routes\r\n        if (item.children) {\r\n          for (const child of item.children) {\r\n            if (child.route && location.pathname === child.route) {\r\n              return child.name\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Default to Dashboard if no match\r\n      return location.pathname === \"/dashboard\" ? \"Dashboard\" : \"\"\r\n    }\r\n\r\n    setCurrentPage(getCurrentPageName())\r\n  }, [location.pathname])\r\n\r\n  // Mobile drawer content\r\n  const drawer = (\r\n    <Box sx={{ width: 280 }} role=\"presentation\">\r\n      <Box sx={{ p: 2, display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Typography variant=\"h6\" sx={{ color: \"#2c3e50\", fontWeight: \"500\" }}>\r\n          Navigation\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n\r\n      <List>\r\n        {/* Dashboard Link */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            navigate(\"/dashboard\")\r\n            setMobileOpen(false)\r\n          }}\r\n          selected={location.pathname === \"/dashboard\"}\r\n          sx={{\r\n            backgroundColor: location.pathname === \"/dashboard\" ? \"rgba(52, 152, 219, 0.08)\" : \"transparent\",\r\n            \"&.Mui-selected\": {\r\n              backgroundColor: \"rgba(52, 152, 219, 0.08)\",\r\n              color: \"#3498db\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"rgba(52, 152, 219, 0.12)\",\r\n              },\r\n            },\r\n            \"&:hover\": {\r\n              backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n            },\r\n          }}\r\n        >\r\n          <ListItemIcon>{navIcons[\"dashboard\"]}</ListItemIcon>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"body2\" sx={{ fontWeight: location.pathname === \"/dashboard\" ? 500 : 400 }}>\r\n                Dashboard\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n\r\n        {/* Navigation Items */}\r\n        {navigationData.map((item) => (\r\n          <React.Fragment key={item.id}>\r\n            {item.children ? (\r\n              // Item with submenu\r\n              <>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => handleSubmenuToggle(item.id)}\r\n                  selected={isChildActive(item.childRoute)}\r\n                  sx={{\r\n                    backgroundColor: isChildActive(item.childRoute) ? \"rgba(52, 152, 219, 0.08)\" : \"transparent\",\r\n                    \"&.Mui-selected\": {\r\n                      backgroundColor: \"rgba(52, 152, 219, 0.08)\",\r\n                      color: \"#3498db\",\r\n                      \"&:hover\": {\r\n                        backgroundColor: \"rgba(52, 152, 219, 0.12)\",\r\n                      },\r\n                    },\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <ListItemIcon>\r\n                    {navIcons[item.name.toLowerCase()] || <AccountBalance fontSize=\"small\" />}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: isChildActive(item.childRoute) ? 500 : 400 }}>\r\n                        {item.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                  {openSubmenu === item.id ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n\r\n                <Collapse in={openSubmenu === item.id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    {item.children.map((child) => (\r\n                      <ListItem\r\n                        key={child.id}\r\n                        button\r\n                        onClick={() => {\r\n                          if (child.route) {\r\n                            navigate(child.route)\r\n                            setMobileOpen(false)\r\n                          }\r\n                        }}\r\n                        selected={isActive(child.route)}\r\n                        sx={{\r\n                          pl: 4,\r\n                          backgroundColor: isActive(child.route) ? \"rgba(52, 152, 219, 0.08)\" : \"transparent\",\r\n                          \"&.Mui-selected\": {\r\n                            backgroundColor: \"rgba(52, 152, 219, 0.08)\",\r\n                            color: \"#3498db\",\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(52, 152, 219, 0.12)\",\r\n                            },\r\n                          },\r\n                          \"&:hover\": {\r\n                            backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <ListItemIcon>{getChildIcon(child.name)}</ListItemIcon>\r\n                        <ListItemText\r\n                          primary={\r\n                            <Typography variant=\"body2\" sx={{ fontWeight: isActive(child.route) ? 500 : 400 }}>\r\n                              {child.name}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Collapse>\r\n              </>\r\n            ) : (\r\n              // Single item\r\n              <ListItem\r\n                button\r\n                onClick={() => {\r\n                  if (item.route) {\r\n                    navigate(item.route)\r\n                    setMobileOpen(false)\r\n                  }\r\n                }}\r\n                selected={isActive(item.route)}\r\n                sx={{\r\n                  backgroundColor: isActive(item.route) ? \"rgba(52, 152, 219, 0.08)\" : \"transparent\",\r\n                  \"&.Mui-selected\": {\r\n                    backgroundColor: \"rgba(52, 152, 219, 0.08)\",\r\n                    color: \"#3498db\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"rgba(52, 152, 219, 0.12)\",\r\n                    },\r\n                  },\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemIcon>{navIcons[item.name.toLowerCase()] || <People fontSize=\"small\" />}</ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"body2\" sx={{ fontWeight: isActive(item.route) ? 500 : 400 }}>\r\n                      {item.name}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {/* Top Bar with Logo and User Info */}\r\n      <AppBar\r\n        position=\"static\"\r\n        sx={{\r\n          backgroundColor: \"white\",\r\n          boxShadow: \"none\",\r\n          borderBottom: \"1px solid #f0f0f0\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters sx={{ minHeight: \"64px\" }}>\r\n            {/* Logo */}\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"a\"\r\n              onClick={() => navigate(\"/dashboard\")}\r\n              sx={{\r\n                mr: 3,\r\n                display: { xs: \"flex\" },\r\n                fontWeight: 700,\r\n                color: \"#bd9b4a\",\r\n                textDecoration: \"none\",\r\n                fontSize: \"24px\",\r\n                cursor: \"pointer\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n              }}\r\n            >\r\n              PRO<span style={{ color: \"#232323\" }}>&nbsp;Software</span>\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1 }} />\r\n\r\n            {/* Right side - Language and User */}\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\r\n              {/* Language Selector */}\r\n              <IconButton sx={{ p: 0 }}>\r\n                <Language sx={{ color: \"#666\" }} />\r\n              </IconButton>\r\n\r\n              {/* User Avatar */}\r\n              <Box\r\n                onClick={(e) => setAnchorEl(e.currentTarget)}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\",\r\n                  py: 1,\r\n                  px: 1,\r\n                  borderRadius: \"6px\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n                  },\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    mr: 1,\r\n                    fontSize: \"14px\",\r\n                    fontWeight: \"500\",\r\n                    color: \"#333\",\r\n                    display: { xs: \"none\", sm: \"block\" },\r\n                  }}\r\n                >\r\n                  Hi, {user?.name || \"Admin\"}\r\n                </Typography>\r\n                <Avatar\r\n                  className=\"avatar-image\"\r\n                  alt={user?.name}\r\n                  sx={{\r\n                    width: 36,\r\n                    height: 36,\r\n                    border: \"2px solid #f0f0f0\",\r\n                  }}\r\n                  src={process.env.REACT_APP_IMAGE_BASE_URL + user?.picture}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n\r\n      {/* Main Navigation Bar */}\r\n      <AppBar\r\n        position=\"static\"\r\n        sx={{\r\n          backgroundColor: \"#404e68\",\r\n          boxShadow: \"0px 2px 10px rgba(0, 0, 0, 0.05)\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters sx={{ minHeight: \"48px\" }}>\r\n            {/* Mobile Menu Icon */}\r\n            {isMobile && (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"start\"\r\n                onClick={handleDrawerToggle}\r\n                sx={{ mr: 2, color: \"white\" }}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n\r\n            {/* Desktop Navigation */}\r\n            {!isMobile && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {/* Dashboard Button */}\r\n                <Button\r\n                  onClick={() => navigate(\"/dashboard\")}\r\n                  sx={{\r\n                    color: location.pathname === \"/dashboard\" ? \"#bd9b4a\" : \"white\",\r\n                    fontWeight: location.pathname === \"/dashboard\" ? \"bold\" : 400,\r\n                    textTransform: \"none\",\r\n                    fontSize: \"14px\",\r\n                    px: 2,\r\n                    py: 1.5,\r\n                    borderRadius: 0,\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n                    },\r\n                  }}\r\n                  startIcon={navIcons[\"dashboard\"]}\r\n                >\r\n                  DASHBOARD\r\n                </Button>\r\n\r\n                <Divider orientation=\"vertical\" flexItem sx={{ mx: 0, backgroundColor: \"#5a6785\" }} />\r\n\r\n                {/* Navigation Items */}\r\n                {navigationData.map((item, index) => (\r\n                  <React.Fragment key={item.id}>\r\n                    {index > 0 && (\r\n                      <Divider orientation=\"vertical\" flexItem sx={{ mx: 0, backgroundColor: \"#5a6785\" }} />\r\n                    )}\r\n                    {item.children ? (\r\n                      // Item with dropdown\r\n                      <Box>\r\n                        <Button\r\n                          onClick={(e) => handleDropdownOpen(e, item.id)}\r\n                          sx={{\r\n                            color: isChildActive(item.childRoute) ? \"#bd9b4a\" : \"white\",\r\n                            fontWeight: isChildActive(item.childRoute) ? \"bold\" : 400,\r\n                            textTransform: \"none\",\r\n                            fontSize: \"14px\",\r\n                            px: 2,\r\n                            py: 1.5,\r\n                            borderRadius: 0,\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n                            },\r\n                          }}\r\n                          startIcon={navIcons[item.name.toLowerCase()] || <AccountBalance fontSize=\"small\" />}\r\n                          endIcon={<KeyboardArrowDown />}\r\n                        >\r\n                          {item.name.toUpperCase()}\r\n                        </Button>\r\n                        <Popper\r\n                          open={openDropdownId === item.id}\r\n                          anchorEl={dropdownAnchorEl}\r\n                          role={undefined}\r\n                          placement=\"bottom-start\"\r\n                          transition\r\n                          disablePortal\r\n                        >\r\n                          {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                              {...TransitionProps}\r\n                              style={{\r\n                                transformOrigin: placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n                              }}\r\n                            >\r\n                              <Paper\r\n                                elevation={2}\r\n                                sx={{\r\n                                  mt: 1,\r\n                                  width: 220,\r\n                                  borderRadius: \"8px\",\r\n                                  overflow: \"hidden\",\r\n                                  zIndex: 111,\r\n                                }}\r\n                              >\r\n                                <ClickAwayListener onClickAway={handleDropdownClose}>\r\n                                  <MenuList autoFocusItem={openDropdownId === item.id}>\r\n                                    {item.children.map((child) => (\r\n                                      <MenuItem\r\n                                        key={child.id}\r\n                                        onClick={() => {\r\n                                          if (child.route) {\r\n                                            navigate(child.route)\r\n                                            handleDropdownClose()\r\n                                          }\r\n                                        }}\r\n                                        sx={{\r\n                                          backgroundColor: isActive(child.route)\r\n                                            ? \"rgba(52, 152, 219, 0.08)\"\r\n                                            : \"transparent\",\r\n                                          color: isActive(child.route) ? \"#3498db\" : \"#5d6778\",\r\n                                          fontWeight: isActive(child.route) ? 500 : 400,\r\n                                          fontSize: \"14px\",\r\n                                          py: 1,\r\n                                          \"&:hover\": {\r\n                                            backgroundColor: \"rgba(52, 152, 219, 0.04)\",\r\n                                          },\r\n                                        }}\r\n                                      >\r\n                                        <ListItemIcon>{getChildIcon(child.name)}</ListItemIcon>\r\n                                        {child.name}\r\n                                      </MenuItem>\r\n                                    ))}\r\n                                  </MenuList>\r\n                                </ClickAwayListener>\r\n                              </Paper>\r\n                            </Grow>\r\n                          )}\r\n                        </Popper>\r\n                      </Box>\r\n                    ) : (\r\n                      // Single item\r\n                      <Button\r\n                        onClick={() => {\r\n                          if (item.route) {\r\n                            navigate(item.route)\r\n                          }\r\n                        }}\r\n                        sx={{\r\n                          color: isActive(item.route) ? \"#bd9b4a\" : \"white\",\r\n                          fontWeight: isActive(item.route) ? \"bold\" : 400,\r\n                          textTransform: \"none\",\r\n                          fontSize: \"14px\",\r\n                          px: 2,\r\n                          py: 1.5,\r\n                          borderRadius: 0,\r\n                          \"&:hover\": {\r\n                            backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n                          },\r\n                        }}\r\n                        startIcon={navIcons[item.name.toLowerCase()] || <People fontSize=\"small\" />}\r\n                      >\r\n                        {item.name.toUpperCase()}\r\n                      </Button>\r\n                    )}\r\n                  </React.Fragment>\r\n                ))}\r\n\r\n               \r\n              </Box>\r\n            )}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n\r\n      {/* Mobile Navigation Drawer */}\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile\r\n        }}\r\n        sx={{\r\n          display: { xs: \"block\", md: \"none\" },\r\n          \"& .MuiDrawer-paper\": {\r\n            boxSizing: \"border-box\",\r\n            width: 280,\r\n            boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.08)\",\r\n          },\r\n        }}\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n\r\n      {/* User Dropdown Menu */}\r\n      <DropDown anchorEl={anchorEl} openDropdown={openDropdown} handleClose={() => setAnchorEl(null)} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n"
        }
    ]
}