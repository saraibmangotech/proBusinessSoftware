{
    "sourceFile": "src/pages/Dashboard/Settings/RatesSetup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744546821347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744546821347,
            "name": "Commit-0",
            "content": "import styled from '@emotion/styled';\r\nimport { Box, Grid, InputAdornment, TextField, Typography } from '@mui/material'\r\nimport Colors from 'assets/Style/Colors';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport InputField from 'components/Input'\r\nimport CustomTextField from 'components/Input/CustomInput';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport { showPromiseToast } from 'components/NewToaster';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPermission } from 'redux/slices/navigationDataSlice';\r\nimport SystemServices from 'services/System';\r\nimport { formatPermissionData } from 'utils';\r\nconst StyledInputAdornment = styled(InputAdornment)(({ theme }) => ({\r\n    backgroundColor: '#000', // Adjust the color to match your image\r\n    color: '#fff', // Text color\r\n    padding: '0 10px', // Adjust padding as needed\r\n    borderRadius: '4px 0 0 4px', // Match the rounded corners from the image\r\n}));\r\n\r\nconst RateSetup = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch=useDispatch()\r\n    const [permissions, setPermissions] = useState([])\r\n    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n    const getData = async (formData) => {\r\n        setLoading(true)\r\n        console.log(formData);\r\n        try {\r\n            let params = {\r\n                charges_type: 'rate'\r\n\r\n            }\r\n\r\n            const { data } = await SystemServices.getRates(params);\r\n            console.log(data);\r\n            let details = data?.charges\r\n            setValue('1yearInsideRate', details?.one_year_inside )\r\n            setValue('1yearOutsideRate', details?.one_year_outside)\r\n            setValue('1yearRenewalRates', details?.one_year_renewal)\r\n            setValue('2yearInsideRate', details?.two_year_inside)\r\n            setValue('2yearOutsideRate', details?.two_year_outside)\r\n            setValue('2yearRenewalRates', details?.two_year_renewal)\r\n            setValue('monthlyVisaServiceCharges', details?.monthly_visa_service_below)\r\n            setValue('monthlyVisaServiceChargesabove', details?.monthly_visa_service_above)\r\n            setValue('vipMedical', details?.medical_extra)\r\n            setValue('cancellationRates', details?.cancellation)\r\n            setValue('rejectionCost', details?.rejection)\r\n            setValue('extraTyping', details?.typing_fee)\r\n            setValue('overstayCost', details?.overstay)\r\n            setValue('absconderFee', details?.absconder_fee)\r\n            console.log(formatPermissionData(data?.permissions))\r\n\t\t\tsetPermissions(formatPermissionData(data?.permissions))\r\n\t\t\tdata?.permissions.forEach(e => {\r\n\t\t\t\tif (e?.route && e?.identifier && e?.permitted) {\r\n\t\t\t\t\tdispatch(addPermission(e?.route));\r\n\t\t\t\t}\r\n\t\t\t})\r\n           \r\n\r\n        } catch (error) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const UpdateRate = async (formData) => {\r\n        setLoading(true)\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                charges_type: \"rate\",\r\n                one_year_inside: Number(formData?.['1yearInsideRate']),\r\n                one_year_outside: Number(formData?.['1yearOutsideRate']),\r\n                one_year_renewal: Number(formData?.['1yearRenewalRates']),\r\n                two_year_inside: Number(formData?.['2yearInsideRate']),\r\n                two_year_outside: Number(formData?.['2yearOutsideRate']),\r\n                two_year_renewal: Number(formData?.['2yearRenewalRates']),\r\n                monthly_visa_service_below: Number(formData?.['monthlyVisaServiceCharges']),\r\n                monthly_visa_service_above: Number(formData?.['monthlyVisaServiceChargesabove']),\r\n                overstay: Number(formData?.['overstayCost']),\r\n                medical_extra: Number(formData?.['vipMedical']),\r\n                typing_fee: Number(formData?.['extraTyping']),\r\n                cancellation: Number(formData?.['cancellationRates']),\r\n                rejection: Number(formData?.['rejectionCost']),\r\n                absconder_fee: Number(formData?.['absconderFee'])\r\n\r\n\r\n            }\r\n            console.log(obj);\r\n            const promise = SystemServices.UpdateCost(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving ...',\r\n                'Success',\r\n                'Something Went Wrong'\r\n            );\r\n\r\n            const result = await promise\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <Box sx={{ p: 3 }}>\r\n                <Box component={'form'} onSubmit={handleSubmit(UpdateRate)}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n                    <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >RATE MANAGEMENT</Typography>\r\n                    <Box sx={{ display: 'flex', gap: '10px' }}>\r\n                        {permissions?.save && <PrimaryButton\r\n                           bgcolor={'#bd9b4a'}\r\n                            title=\"Save\"\r\n                            type={'submit'}\r\n\r\n\r\n                        />}\r\n\r\n                    </Box>\r\n                </Box>\r\n\r\n                    <Box sx={{ p: 3 }}>\r\n                        <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 2 }}>Visa Rates : </Typography>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2 }}>1 Year Rates : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Inside Rates : '} StartLabel={'AED'} register={register(\"1yearInsideRate\", { required: \"Enter year inside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Outside Rates : '} StartLabel={'AED'} register={register(\"1yearOutsideRate\", { required: \"Enter year outside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Renewal Rates : '} StartLabel={'AED'} register={register(\"1yearRenewalRates\", { required: \"Enter renewal rate\" })} />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>2 Year Rates : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Inside Rates : '} StartLabel={'AED'} register={register(\"2yearInsideRate\", { required: \"Enter year inside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Outside Rates : '} StartLabel={'AED'} register={register(\"2yearOutsideRate\", { required: \"Enter year outside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Renewal Rates : '} StartLabel={'AED'} register={register(\"2yearRenewalRates\", { required: \"Enter renewal rate\" })} />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>Extra Costing : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Monthly Visa Service Charges Below 2000 : '}  max={2000} StartLabel={'AED'} register={register(\"monthlyVisaServiceCharges\", { required: \"Enter Monthly Visa Service Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Monthly Visa Service Charges Above 2000 : '} StartLabel={'AED'} register={register(\"monthlyVisaServiceChargesabove\", { required: \"Enter Monthly Visa Service Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                            <LabelCustomInput label={'VIP Medical  Charges : '} StartLabel={'AED'} register={register(\"vipMedical\", { required: \"Enter medical extra charges\" })} />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Cancellation Rates : '} StartLabel={'AED'} register={register(\"cancellationRates\", { required: \"Enter cancellation rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Overstay Cost : '} StartLabel={'AED'} register={register(\"overstayCost\", { required: \"Enter year overstay rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Rejection Cost : '} StartLabel={'AED'} register={register(\"rejectionCost\", { required: \"Enter rejection cost\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Absconder Fee : '} StartLabel={'AED'} register={register(\"absconderFee\", { required: \"Enter absconder fee\" })} />\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RateSetup\r\n"
        }
    ]
}