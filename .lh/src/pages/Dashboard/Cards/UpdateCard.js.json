{
    "sourceFile": "src/pages/Dashboard/Cards/UpdateCard.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1744678270414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744678458158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n         {<>\r\n \r\n           <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n             <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n-              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n+              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Update Card</Typography>\r\n \r\n             </Box>\r\n \r\n             <Box sx={{ p: 3 }}>\r\n"
                },
                {
                    "date": 1744678483666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import CustomerServices from 'services/Customer';\r\n import CustomerService from '../DashboardPages/CustomerService';\r\n import { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\n import moment from 'moment';\r\n-import { Link, useNavigate } from 'react-router-dom';\r\n+import { Link, useLocation, useNavigate } from 'react-router-dom';\r\n import SystemServices from 'services/System';\r\n import UploadFileSingle from 'components/UploadFileSingle';\r\n import { Images } from 'assets';\r\n import { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\n@@ -108,8 +108,9 @@\n \r\n   const [selectedType, setSelectedType] = useState(null)\r\n   const [date, setDate] = useState(null)\r\n   const [balanceType, setBalanceType] = useState(null)\r\n+  const {state}=useLocation()\r\n \r\n   //documents array\r\n \r\n \r\n"
                },
                {
                    "date": 1744678496956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,8 +163,11 @@\n \r\n \r\n \r\n   \r\n+useEffect(() => {\r\n+  \r\n+}, [])\r\n \r\n   \r\n \r\n \r\n"
                },
                {
                    "date": 1744678559895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,14 @@\n \r\n \r\n   \r\n useEffect(() => {\r\n-  \r\n+    if(state){\r\n+        console.log(state);\r\n+        \r\n+        setValue1('name')\r\n+    }\r\n+\r\n }, [])\r\n \r\n   \r\n \r\n"
                },
                {
                    "date": 1744678619319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n useEffect(() => {\r\n     if(state){\r\n         console.log(state);\r\n         \r\n-        setValue1('name')\r\n+        setValue1('name',state?.account_name)\r\n     }\r\n \r\n }, [])\r\n \r\n"
                },
                {
                    "date": 1744678637589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                \r\n                 <Grid  container justifyContent={'flex-end'}>\r\n                 <PrimaryButton \r\n                  bgcolor={'#bd9b4a'}\r\n-                  title=\"Submit\"\r\n+                  title=\"Update\"\r\n                   type={'submit'}\r\n                   \r\n \r\n                 />\r\n"
                }
            ],
            "date": 1744678270414,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { Box, Checkbox, Container, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material';\r\nimport RegisterContainer from 'container/Register'\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport Colors from 'assets/Style/Colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport UploadFile from 'components/UploadFile';\r\nimport InputField from 'components/Input';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { ErrorToaster } from 'components/Toaster';\r\nimport { FormControl } from '@mui/base';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport SelectField from 'components/Select';\r\nimport { CleanTypes, Debounce2, getFileSize, handleDownload } from 'utils';\r\nimport instance from 'config/axios';\r\nimport routes from 'services/System/routes';\r\nimport CustomerServices from 'services/Customer';\r\nimport CustomerService from '../DashboardPages/CustomerService';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport moment from 'moment';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport SystemServices from 'services/System';\r\nimport UploadFileSingle from 'components/UploadFileSingle';\r\nimport { Images } from 'assets';\r\nimport { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\nimport { addMonths } from 'date-fns';\r\nimport { useAuth } from 'context/UseContext';\r\nimport DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n\r\n\r\nfunction UpdateCard() {\r\n  const theme = useTheme();\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [formChange, setFormChange] = useState(false)\r\n  const [submit, setSubmit] = useState(false)\r\n\r\n  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n  const {\r\n    register: register1,\r\n    handleSubmit: handleSubmit1,\r\n    setValue: setValue1,\r\n    getValues: getValues1,\r\n    watch,\r\n    formState: { errors: errors1 },\r\n\r\n  } = useForm();\r\n\r\n  // Watch all form data\r\nconsole.log(watch());\r\n\r\n\r\n  const isFormDataEmpty = (data) => {\r\n    // Check if all form fields are empty\r\n    return Object.values(data).every((value) => {\r\n      // If the value is an object (like companyLogo), check if it's empty\r\n      if (typeof value === 'object' && value !== null) {\r\n        return Object.keys(value).length === 0;\r\n      }\r\n      // Otherwise, check if the value is an empty string\r\n      return value === \"\";\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const allowFilesType = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n    'application/pdf',\r\n    'application/vnd.ms-excel',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n  ];\r\n  const allowFilesType2 = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n\r\n  ];\r\n  const [guarantors, setGuarantors] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n\r\n  // *For Deposit Slip\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadedSize, setUploadedSize] = useState(0);\r\n  const [slipDetail, setSlipDetail] = useState([]);\r\n\r\n\r\n  const [emailVerify, setEmailVerify] = useState(false)\r\n  \r\n\r\n  const [center, setCenter] = useState(null)\r\n  const [status, setStatus] = useState(null)\r\n\r\n  // *For Stepper Forms Data\r\n  const [stepFormData, setStepFormData] = useState()\r\n\r\n  const [selectedType, setSelectedType] = useState(null)\r\n  const [date, setDate] = useState(null)\r\n  const [balanceType, setBalanceType] = useState(null)\r\n\r\n  //documents array\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const submitForm1 = async (formData) => {\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        account_name: formData?.name,\r\n       \r\n      \r\n      \r\n\r\n      };\r\n      const promise = CustomerServices.UpdateCard(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving...',\r\n        'Added Successfully',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        navigate(\"/card-list\");\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      ErrorToaster(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\" }}>\r\n\r\n\r\n      </Box>\r\n      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n        {<>\r\n\r\n          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}>\r\n\r\n\r\n              <Grid container sx={{ gap: '5px 25px' }}>\r\n                <Grid item xs={2.8}>\r\n                  <InputField\r\n                    label={\" Account Name :*\"}\r\n                    size={'small'}\r\n                    placeholder={\" Account Name\"}\r\n                    error={errors1?.name?.message}\r\n                    register={register1(\"name\", {\r\n                      required:\r\n                        \"Please enter card name.\"\r\n\r\n                    })}\r\n                  /></Grid>\r\n             \r\n              \r\n               \r\n                \r\n\r\n               \r\n                <Grid  container justifyContent={'flex-end'}>\r\n                <PrimaryButton \r\n                 bgcolor={'#bd9b4a'}\r\n                  title=\"Submit\"\r\n                  type={'submit'}\r\n                  \r\n\r\n                />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box></>}\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateCard;"
        }
    ]
}