{
    "sourceFile": "src/pages/Dashboard/VisaProcessing/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744546821331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744546821331,
            "name": "Commit-0",
            "content": "import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Avatar, Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, tableCellClasses } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { FontFamily, Images } from \"assets\";\r\nimport Colors from \"assets/Style/Colors\";\r\nimport InputField from \"components/Input\";\r\nimport { ErrorToaster, SuccessToaster } from \"components/Toaster\";\r\nimport CustomerServices from \"services/Customer\";\r\nimport SelectField from \"components/Select\";\r\nimport SystemServices from \"services/System\";\r\nimport { PrimaryButton } from \"components/Buttons\";\r\nimport InputPhone from \"components/InputPhone\";\r\nimport DatePicker from \"components/DatePicker\";\r\nimport UploadedFile from \"components/UploadedFile\";\r\nimport ConfirmationDialog from \"components/Dialog/ConfirmationDialog\";\r\nimport AuthServices from \"services/Auth\";\r\nimport UserServices from \"services/User\";\r\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\";\r\nimport VisaServices from \"services/Visa\";\r\nimport { CircleLoading } from \"components/Loaders\";\r\nimport { PDFExport } from \"@progress/kendo-react-pdf\";\r\n\r\nimport moment from \"moment\";\r\nimport styled from \"@emotion/styled\";\r\nimport SimpleDialog from \"components/Dialog/SimpleDialog\";\r\nimport { CleanTypes, formatPermissionData, getFileSize } from \"utils\";\r\nimport instance from \"config/axios\";\r\nimport routes from \"services/System/routes\";\r\nimport UploadFile from \"components/UploadFile\";\r\nimport UploadFileSingle from \"components/UploadFileSingle\";\r\nimport { addPermission } from \"redux/slices/navigationDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n// *For Table Style\r\nconst Row = styled(TableRow)(({ theme }) => ({\r\n    border: 0,\r\n\r\n}));\r\n\r\nconst Cell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        fontSize: 14,\r\n        fontFamily: 'Public Sans',\r\n        border: '1px solid #EEEEEE',\r\n        padding: '15px',\r\n        textAlign: 'left',\r\n        whiteSpace: 'nowrap',\r\n        color: '#434343',\r\n        paddingRight: '50px',\r\n        background: 'transparent',\r\n        fontWeight: 'bold'\r\n\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n        fontFamily: 'Public Sans',\r\n\r\n        textWrap: 'nowrap',\r\n        padding: '5px !important',\r\n\r\n        '.MuiBox-root': {\r\n            display: 'flex',\r\n            gap: '6px',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            '.MuiBox-root': {\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        'svg': {\r\n            width: 'auto',\r\n            height: '24px',\r\n        },\r\n        '.MuiTypography-root': {\r\n            textTransform: 'capitalize',\r\n            fontFamily: FontFamily.NunitoRegular,\r\n            textWrap: 'nowrap',\r\n        },\r\n        '.MuiButtonBase-root': {\r\n            padding: '8px',\r\n            width: '28px',\r\n            height: '28px',\r\n        }\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nfunction VisaDetail() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const tableHead1 = [{ name: 'SR No.', key: '' }, { name: 'Date ', key: 'name' }, { name: 'Customer Name', key: 'visa_eligibility' }, { name: 'Candidate Name', key: 'deposit_total' }, { name: 'Visa Rates', key: '' }, { name: 'Status', key: '' }, { name: 'Actions', key: '' }]\r\n    const { register, handleSubmit, getValues, setValue, control, formState: { errors }, reset } = useForm();\r\n    const allowFilesType = [\r\n        'image/png',\r\n        'image/jpg',\r\n        'image/jpeg',\r\n        'application/pdf',\r\n        'application/vnd.ms-excel',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ];\r\n    // *For Dialog Box\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false);\r\n    const [confirmationDialog2, setConfirmationDialog2] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [open, setOpen] = useState(false)\r\n    const [documents, setDocuments] = useState([])\r\n    const [progress, setProgress] = useState(0);\r\n    const [uploadedSize, setUploadedSize] = useState(0);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n    const [statusDialog, setStatusDialog] = useState(false)\r\n    const [selectedVisa, setSelectedVisa] = useState()\r\n    const [status, setStatus] = useState(null)\r\n    const [document, setDocument] = useState()\r\n    const [date, setDate] = useState(null)\r\n    const [statuses, setStatuses] = useState([])\r\n    const [permissions, setPermissions] = useState()\r\n\r\n    // *For Customer Detail\r\n    const [visaDetail, setVisaDetail] = useState();\r\n\r\n    // *For International Country Code\r\n    const [intCode, setIntCode] = useState();\r\n    // *For Countries\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // *For Expiration Date\r\n    const [passportExp, setPassportExp] = useState();\r\n    const [editUser, setEditUser] = useState(false);\r\n\r\n    // *For Handle Date\r\n    const handlePassportDate = (newDate) => {\r\n        try {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (newDate == \"Invalid Date\") {\r\n                setPassportExp(\"invalid\");\r\n                return;\r\n            }\r\n            setPassportExp(new Date(newDate));\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const UpdateStatus = async () => {\r\n        console.log(selectedVisa);\r\n        try {\r\n            let obj = {\r\n                id: selectedVisa?.id,\r\n                candidate_name: selectedVisa?.name,\r\n                visa_id: selectedVisa?.visa_id,\r\n                visa_charges: selectedVisa?.visa_charges,\r\n                status: status?.id,\r\n                date: moment(date).format('YYYY-MM-DD'),\r\n                visa_tenure: selectedVisa?.visa_tenure,\r\n                document: document\r\n            }\r\n\r\n            const promise = VisaServices.CandidateUpdateStatus(obj);\r\n            console.log(promise);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n\r\n            // Await the promise and then check its response\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                setStatusDialog(false);\r\n                getVisaDetail();\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // *For Get Countries\r\n    const getCountries = async (id) => {\r\n        try {\r\n            const { data } = await SystemServices.getCountries();\r\n            setCountries(data?.nations.rows);\r\n            setSelectedCountry(data?.nations.rows.find((e) => e?.id === id));\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    // *For Get Customer Detail\r\n    const getVisaDetail = async () => {\r\n        try {\r\n            let params = { visa_id: id };\r\n            const { data } = await VisaServices.getVisaDetail(params);\r\n            console.log(data);\r\n            setVisaDetail(data?.details);\r\n\r\n            setPermissions(formatPermissionData(data?.permissions))\r\n            console.log(formatPermissionData(data?.permissions));\r\n\r\n            setPermissions(formatPermissionData(data?.permissions))\r\n            data?.permissions.forEach(e => {\r\n                if (e?.route && e?.identifier && e?.permitted) {\r\n                    dispatch(addPermission(e?.route));\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n            showErrorToast(error);\r\n        }\r\n    };\r\n\r\n    const handleUploadDocument = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const file = e.target.files[0];\r\n            let arr = [\r\n                {\r\n                    name: file?.name,\r\n                    file: \"\",\r\n                    type: file?.type.split(\"/\")[1],\r\n                    size: getFileSize(file.size),\r\n                    isUpload: false,\r\n                },\r\n            ];\r\n            if (allowFilesType.includes(file.type)) {\r\n                let maxSize = 10 * 1024 * 1024\r\n                if (file.size > maxSize) {\r\n                    showErrorToast('File Size Must Be Less than 10 MB')\r\n                }\r\n                else {\r\n\r\n                    handleUpload(file, arr);\r\n                    const path = await handleUpload(file, arr);\r\n                    console.log('Uploaded file path:', path);\r\n                    console.log(path, 'pathpathpath');\r\n                    return path\r\n                }\r\n\r\n            } else {\r\n                ErrorToaster(`Only ${CleanTypes(allowFilesType)} formats is supported`);\r\n            }\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const handleUpload = async (file, docs) => {\r\n        setProgress(0);\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"document\", file);\r\n            console.log(file);\r\n            const { data } = await instance.post(routes.uploadDocuments, formData, {\r\n                onUploadProgress: (progressEvent) => {\r\n                    const uploadedBytes = progressEvent.loaded;\r\n                    const percentCompleted = Math.round(\r\n                        (uploadedBytes * 100) / progressEvent.total\r\n                    );\r\n\r\n                    setProgress(percentCompleted);\r\n                    console.log(getFileSize(uploadedBytes));\r\n                    setUploadedSize(getFileSize(uploadedBytes));\r\n                },\r\n            });\r\n            if (data) {\r\n                docs[0].isUpload = true;\r\n                docs[0].file = data?.data?.nations;\r\n\r\n                console.log(data, 'asddasasd');\r\n                return data?.data?.path\r\n\r\n            }\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const handleDate = (newDate) => {\r\n        try {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (newDate == \"Invalid Date\") {\r\n                setDate(\"invalid\");\r\n                return;\r\n            }\r\n            setDate(new Date(newDate));\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const handleDownload = async (path, name) => {\r\n        try {\r\n            const url = `${process.env.REACT_APP_IMAGE_BASE_URL}${path}`;\r\n            window.open(url, '_blank');\r\n            // let params = { path: path, name: `${name}.png` };\r\n            // const response = await SystemServices.downloadDocuments(params, { responseType: 'blob' });\r\n\r\n            // // Create a Blob from the response data\r\n            // const blob = new Blob([response], { type: 'image/png' });\r\n            // const url = URL.createObjectURL(blob);\r\n\r\n            // // Create a link element, set its href to the blob URL, and trigger a click to download\r\n            // const link = document.createElement('a');\r\n            // link.href = url;\r\n\r\n            // link.download = name || 'download.png'; // Set the desired filename here\r\n            // document.body.appendChild(link);\r\n            // // Set the href attribute to the URL you want to open\r\n            // link.href = link;\r\n\r\n            // // Set the target attribute to '_blank' to open the link in a new tab\r\n            // link.target = '_blank';\r\n\r\n            // // Append the link to the body (not necessary for the link to work, but needed for click simulation)\r\n            // document.body.appendChild(link);\r\n\r\n            // // Simulate a click on the link\r\n            // // link.click();\r\n            // window.location.href = link\r\n\r\n            // // Clean up by removing the link element and revoking the object URL\r\n            // document.body.removeChild(link);\r\n            // URL.revokeObjectURL(url);\r\n\r\n        } catch (error) {\r\n            showErrorToast(error);\r\n        }\r\n    }\r\n\r\n\r\n    // *For Reset User Password\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getVisaDetail();\r\n        }\r\n    }, [id]);\r\n\r\n    return (\r\n        <Box sx={{ p: 3 }}>\r\n\r\n            <SimpleDialog\r\n                open={statusDialog}\r\n                onClose={() => setStatusDialog(false)}\r\n                title={\"Change Status?\"}\r\n            >\r\n                <Box component=\"form\" onSubmit={handleSubmit(UpdateStatus)}>\r\n                    <Grid container >\r\n                        <Grid item xs={12} sm={12}>\r\n                            <SelectField\r\n                                size={\"small\"}\r\n                                label={\"Select Status :\"}\r\n                                options={statuses}\r\n                                selected={status}\r\n                                onSelect={(value) => {\r\n                                    setStatus(value);\r\n                                }}\r\n                                error={errors?.status?.message}\r\n                                register={register(\"status\", {\r\n                                    required: \"Please select status.\",\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <DatePicker\r\n                                label={\"Date :\"}\r\n                                value={date}\r\n                                size={\"small\"}\r\n                                error={errors?.date?.message}\r\n                                register={register(\"date\", {\r\n                                    required: \"Please enter  date.\",\r\n                                })}\r\n                                onChange={(date) => {\r\n                                    handleDate(date);\r\n                                    setValue(\"date\", date);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box sx={{ fontWeight: \"bold\" }}>Upload Document:</Box>\r\n                            <UploadFileSingle\r\n                                Memo={true}\r\n                                accept={allowFilesType}\r\n                                error={errors?.document?.message}\r\n\r\n                                file={document}\r\n                                register={register(\"document\", {\r\n                                    required: false,\r\n                                    onChange: async (e) => {\r\n                                        const path = await handleUploadDocument(e);\r\n                                        if (path) {\r\n                                            setDocument(path);\r\n                                        }\r\n                                    }\r\n                                })}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid container sx={{ justifyContent: \"center\" }}>\r\n                            <Grid\r\n                                item\r\n                                xs={6}\r\n                                sm={6}\r\n                                sx={{\r\n                                    mt: 2,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    gap: \"25px\",\r\n                                }}\r\n                            >\r\n                                <PrimaryButton\r\n                                    bgcolor={Colors.primary}\r\n                                    title=\"Yes,Confirm\"\r\n                                    type=\"submit\"\r\n                                />\r\n                                <PrimaryButton\r\n                                    onClick={() => setStatusDialog(false)}\r\n                                    bgcolor={\"#FF1F25\"}\r\n                                    title=\"No,Cancel\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </SimpleDialog>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n                <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >VISA DETAIL</Typography>\r\n                {/* <Box sx={{ display: 'flex', gap: '10px' }}>\r\n          <PrimaryButton\r\n           bgcolor={'#bd9b4a'}\r\n            title=\"Edit\"\r\n            onClick={() => navigate(`/update-customer/${id}`)}\r\n\r\n\r\n          />\r\n\r\n        </Box> */}\r\n            </Box>\r\n            <Grid container sx={{ mt: 5, border: '1px solid #B6B6B6', borderRadius: \"8px\", p: '15px', justifyContent: 'space-between' }} >\r\n                <Grid item xs={4}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Company Name:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.name}</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Business Address:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.address}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Phone Number:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.userDetail?.phone}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Email :</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.userDetail?.email}</Typography>\r\n                        </Grid>\r\n\r\n                        {/* <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Website:</Typography>\r\n                        </Grid> */}\r\n                        {/* <Grid item xs={7}>\r\n                            <Link sx={{ fontSize: '14px', color: '#0F2772 !important' }} href={visaDetail?.customer?.website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {visaDetail?.customer?.website}\r\n                            </Link>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4} display={'flex'} justifyContent={\"center\"}>\r\n                    <Box>\r\n                        <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={visaDetail?.logo ? process.env.REACT_APP_IMAGE_BASE_URL + visaDetail?.logo : Images.logoDarkCircle}\r\n                            sx={{ width: 100, height: 100 }}\r\n                        />\r\n\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Guarantor Name:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.guarantor_name}</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Guarantor Number:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Typography sx={{ fontSize: '14px', color: '#0F2772' }} variant=\"body1\">{visaDetail?.customer?.guarantor_number}</Typography>\r\n                        </Grid>\r\n\r\n                        {/* <Grid item xs={5}>\r\n                            <Typography sx={{ fontSize: '14px' }} variant=\"body1\">Guarantor Verified:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <Link sx={{ fontSize: '14px', color: '#0F2772' }} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                Verified\r\n                            </Link>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Box p={2}>\r\n                <Typography mb={2} mt={2} sx={{ color: '#03091A', fontWeight: 'bold' }} variant=\"h6\">Security Deposit:</Typography>\r\n                <Grid container spacing={4} >\r\n                    {/* Security Deposit Section */}\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n\r\n                        <Typography mb={2} mt={2} variant=\"body1\">Security Deposit Scenario: <strong style={{ color: \"#0F2772\" }}>{visaDetail?.customer?.security_deposit_scenario == \"visa\" ? \"VISA\" : \"PAYROLL\"}</strong></Typography>\r\n\r\n                        <Typography mb={2} mt={2} variant=\"body1\">{visaDetail?.customer?.security_deposit_scenario == 'payroll' ? \"Eligibility Of Payroll :\" : 'Total Visa Quantity:'} <strong style={{ color: \"#0F2772\" }}>{visaDetail?.customer?.security_deposit_scenario == \"payroll\" ? visaDetail?.customer?.payroll_eligibility + ' ' + 'AED' : visaDetail?.customer?.visa_eligibility}</strong></Typography>\r\n                        <Typography mb={2} mt={2} variant=\"body1\">Total Amount: <strong style={{ color: \"#0F2772\" }}>{visaDetail?.total_visa_charges} <sub>AED</sub></strong></Typography>\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n                        {visaDetail?.customer?.security_deposit_scenario != 'payroll' && <Typography mb={2} mt={2} variant=\"body1\">Security Deposit Per Visa: <strong style={{ color: \"#0F2772\" }}>{visaDetail?.customer?.deposit_per_visa} <sub>AED</sub></strong></Typography>}\r\n                        <Typography mb={2} mt={2} variant=\"body1\">Security Deposit Consumed: <strong style={{ color: \"#0F2772\" }}>{visaDetail?.total_deposit_charges} <sub>AED</sub></strong></Typography>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n                <Grid container>\r\n                    <Box >\r\n                        <Typography sx={{ color: '#03091A', fontWeight: 'bold' }} variant=\"h6\">Candidates :</Typography>\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid container mt={2} >\r\n\r\n                    <Grid item md={11}>\r\n                        {<Box>\r\n\r\n\r\n\r\n\r\n                            {(\r\n                                visaDetail?.candidates.length > 0 && (\r\n                                    <Fragment>\r\n                                        <PDFExport landscape={true} paperSize=\"A4\" margin={5} fileName='Import Customers' >\r\n\r\n                                            <TableContainer\r\n                                                component={Paper}\r\n                                                sx={{\r\n                                                    maxHeight: 'calc(100vh - 200px)', backgroundColor: 'transparent', boxShadow: 'none !important', borderRadius: '0px !important'\r\n\r\n                                                }}\r\n\r\n                                            >\r\n                                                <Table stickyHeader sx={{ minWidth: 500 }}>\r\n                                                    <TableHead>\r\n\r\n                                                        <Row>\r\n                                                            {tableHead1.map((cell, index) => (\r\n                                                                <Cell style={{ textAlign: cell?.name == 'SR No.' ? 'center' : 'left', paddingRight: cell?.name == 'SR No.' ? '15px' : '50px' }} className=\"pdf-table\"\r\n                                                                    key={index}\r\n\r\n                                                                >\r\n                                                                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                                                                        {cell?.name}\r\n                                                                    </Box>\r\n                                                                </Cell>\r\n                                                            ))}\r\n                                                        </Row>\r\n                                                    </TableHead>\r\n                                                    <TableBody>\r\n                                                        {visaDetail?.candidates?.map((item, index) => {\r\n                                                            console.log(item?.statuses)\r\n                                                            let sorteddata = item?.statuses.sort((a, b) => a.id - b.id);\r\n                                                            console.log(sorteddata);\r\n\r\n                                                            return (\r\n                                                                <Row\r\n                                                                    key={index}\r\n                                                                    sx={{\r\n                                                                        border: '1px solid #EEEEEE !important',\r\n                                                                    }}\r\n                                                                >\r\n\r\n                                                                    <Cell style={{ textAlign: 'center' }} className=\"pdf-table\">\r\n                                                                        {item?.visa_id + \"_\" + item?.serial_id}\r\n                                                                    </Cell>\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                        {moment(item?.created_at).format(\"YYYY-MM-DD\")}\r\n                                                                    </Cell>\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                        {visaDetail?.customer?.name}\r\n                                                                    </Cell>\r\n\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                        {item?.name}\r\n                                                                    </Cell>\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                        {item?.visa_charges}\r\n\r\n\r\n                                                                    </Cell>\r\n\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n\r\n                                                                        <Box component={'div'} sx={{ cursor: 'pointer', display: 'flex !important', justifyContent: 'flex-start !important' }} onClick={() => {\r\n                                                                            if (permissions?.update_candidate_status) {\r\n                                                                                if (permissions?.update_candidate_status) {\r\n\r\n                                                                                    setStatusDialog(true);\r\n                                                                                }\r\n                                                                            }\r\n                                                                            setSelectedVisa(item)\r\n                                                                            if (sorteddata[sorteddata?.length - 1]?.status == 'In Progress') {\r\n                                                                                if (item?.visa_type == 'Out') {\r\n                                                                                    setStatuses([\r\n                                                                                        { id: \"In Progress\", name: \"In Progress\" },\r\n                                                                                        { id: \"Change Status\", name: \"Change Status\" },\r\n                                                                                        { id: \"Reject\", name: \"Reject\" },\r\n                                                                                    ])\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    setStatuses([\r\n                                                                                        { id: \"In Progress\", name: \"In Progress\" },\r\n                                                                                        { id: \"Entry Permit\", name: \"Entry Permit\" },\r\n                                                                                        { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                    ])\r\n                                                                                }\r\n\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Pending') {\r\n                                                                                setStatuses([\r\n                                                                                    { id: \"In Progress\", name: \"In Progress\" },\r\n\r\n\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Entry Permit') {\r\n                                                                                setStatuses([\r\n\r\n                                                                                    { id: \"Entry Permit\", name: \"Entry Permit\" },\r\n                                                                                    { id: \"Medical\", name: \"Medical\" },\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Change Status') {\r\n                                                                                setStatuses([\r\n                                                                                    { id: \"Change Status\", name: \"Change Status\" },\r\n                                                                                    { id: \"Medical\", name: \"Medical\" },\r\n\r\n\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Medical') {\r\n                                                                                setStatuses([\r\n                                                                                    { id: \"Medical\", name: \"Medical\" },\r\n                                                                                    { id: \"Emirates Id\", name: \"Emirates Id\" },\r\n\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Emirates Id') {\r\n                                                                                setStatuses([\r\n                                                                                    { id: \"Emirates Id\", name: \"Emirates Id\" },\r\n                                                                                    { id: \"Stamping\", name: \"Stamping\" },\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n                                                                            else if (sorteddata[sorteddata.length - 1].status == 'Stamping') {\r\n                                                                                setStatuses([\r\n\r\n                                                                                    { id: \"Stamping\", name: \"Stamping\" },\r\n\r\n                                                                                    { id: \"Reject\", name: \"Reject\" },\r\n\r\n                                                                                ])\r\n                                                                            }\r\n\r\n                                                                        }} >\r\n                                                                            <Box component={'img'} src={sorteddata[sorteddata.length - 1]?.status == \"Medical\" ?\r\n                                                                                Images.blueCircle :\r\n                                                                                sorteddata[sorteddata.length - 1]?.status == \"Stamping\" ?\r\n                                                                                    Images.successIcon :\r\n                                                                                    sorteddata[sorteddata.length - 1]?.status == \"Emirates Id\" ?\r\n                                                                                        Images.lightGreenCircle :\r\n                                                                                        sorteddata[sorteddata.length - 1]?.status == \"Entry permit\"  ?\r\n\r\n                                                                                            Images.pendingIcon :  sorteddata[sorteddata.length - 1]?.status == \"Change Status\"  ? Images.pendingIcon  :   Images.errorIcon} width={'13px'}></Box>\r\n                                                                            {sorteddata[sorteddata.length - 1]?.status}\r\n                                                                        </Box>\r\n                                                                    </Cell>\r\n                                                                    <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                        <Box>\r\n                                                                            <Box component={'img'} src={Images.detailIcon} onClick={() => navigate(`/view-candidate-detail/${item?.id}`)} width={'35px'}></Box>\r\n\r\n                                                                        </Box>\r\n                                                                    </Cell>\r\n\r\n\r\n\r\n                                                                </Row>\r\n\r\n                                                            );\r\n                                                        })}\r\n\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                            </TableContainer>\r\n                                        </PDFExport>\r\n\r\n\r\n                                    </Fragment>\r\n                                )\r\n                            )}\r\n\r\n\r\n                            {loader && <CircleLoading />}\r\n\r\n\r\n                        </Box>}\r\n\r\n\r\n\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default VisaDetail;\r\n"
        }
    ]
}