{
    "sourceFile": "src/pages/Dashboard/Reception/UpdateReception.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 90,
            "patches": [
                {
                    "date": 1744508449996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744508522866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -327,9 +327,9 @@\n                     </Grid>\r\n                 </Box>\r\n             </SimpleDialog>\r\n             <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n-                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Create Reception</Typography>\r\n+                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Update Reception</Typography>\r\n             </Box>\r\n             <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                 <FormControlLabel\r\n                     value=\"individual\"\r\n"
                },
                {
                    "date": 1744508531666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,9 @@\n                     label=\"Individual\"\r\n                 />\r\n                 <FormControlLabel\r\n                     value=\"company\"\r\n-                    control={<Radio checked={customerType === \"company\"} />}\r\n+                    control={<Radio disabled checked={customerType === \"company\"} />}\r\n                     label=\"Company\"\r\n                 />\r\n             </RadioGroup>\r\n             {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n"
                },
                {
                    "date": 1744508584263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,8 +263,26 @@\n         } catch (error) {\r\n             ErrorToaster(error);\r\n         }\r\n     };\r\n+      const getData = async () => {\r\n+            try {\r\n+                let params = {\r\n+                    category_id: id\r\n+                };\r\n+    \r\n+                const { data } = await CustomerServices.getCategoryDetail(params);\r\n+                let detail = data?.category\r\n+                console.log(detail);\r\n+              \r\n+    \r\n+            } catch (error) {\r\n+                console.error(\"Error fetching location:\", error);\r\n+            }\r\n+        };\r\n+        useEffect(() => {\r\n+            getData()\r\n+        }, [])\r\n     useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n \r\n@@ -332,9 +350,9 @@\n             </Box>\r\n             <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                 <FormControlLabel\r\n                     value=\"individual\"\r\n-                    control={<Radio checked={customerType === \"individual\"} />}\r\n+                    control={<Radio disabled checked={customerType === \"individual\"} />}\r\n                     label=\"Individual\"\r\n                 />\r\n                 <FormControlLabel\r\n                     value=\"company\"\r\n"
                },
                {
                    "date": 1744508602691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n     };\r\n       const getData = async () => {\r\n             try {\r\n                 let params = {\r\n-                    category_id: id\r\n+                    reception_id: id\r\n                 };\r\n     \r\n                 const { data } = await CustomerServices.getCategoryDetail(params);\r\n                 let detail = data?.category\r\n"
                },
                {
                    "date": 1744508616820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,13 @@\n import CustomerServices from \"services/Customer\"\r\n import { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\n import SimpleDialog from \"components/Dialog/SimpleDialog\"\r\n import { ErrorToaster } from \"components/Toaster\"\r\n-import { useNavigate } from \"react-router-dom\"\r\n+import { useNavigate, useParams } from \"react-router-dom\"\r\n \r\n function UpdateReception() {\r\n     const navigate=useNavigate()\r\n+    const {id}=useParams9\r\n     const [customerType, setCustomerType] = useState(\"individual\")\r\n     const [buttonDisabled, setButtonDisabled] = useState(true)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n"
                },
                {
                    "date": 1744508632547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import { useNavigate, useParams } from \"react-router-dom\"\r\n \r\n function UpdateReception() {\r\n     const navigate=useNavigate()\r\n-    const {id}=useParams9\r\n+    const {id}=useParams()\r\n     const [customerType, setCustomerType] = useState(\"individual\")\r\n     const [buttonDisabled, setButtonDisabled] = useState(true)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n@@ -270,9 +270,9 @@\n                 let params = {\r\n                     reception_id: id\r\n                 };\r\n     \r\n-                const { data } = await CustomerServices.getCategoryDetail(params);\r\n+                const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.category\r\n                 console.log(detail);\r\n               \r\n     \r\n"
                },
                {
                    "date": 1744508643490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,9 +271,9 @@\n                     reception_id: id\r\n                 };\r\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n-                let detail = data?.category\r\n+                let detail = data\r\n                 console.log(detail);\r\n               \r\n     \r\n             } catch (error) {\r\n"
                },
                {
                    "date": 1744508666940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,9 +271,9 @@\n                     reception_id: id\r\n                 };\r\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n-                let detail = data\r\n+                let detail = data?.token\r\n                 console.log(detail);\r\n               \r\n     \r\n             } catch (error) {\r\n"
                },
                {
                    "date": 1744508715641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,8 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n+                setValue('mobile',detail?.mobile)\r\n               \r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744508731501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,8 +274,11 @@\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n                 setValue('mobile',detail?.mobile)\r\n+                setValue('mobile',detail?.customer_name)\r\n+                setValue('mobile',detail?.mobile)\r\n+                setValue('mobile',detail?.mobile)\r\n               \r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744508747122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,11 +274,11 @@\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n                 setValue('mobile',detail?.mobile)\r\n-                setValue('mobile',detail?.customer_name)\r\n+                setValue('customerName',detail?.customer_name)\r\n+                setValue('token_number',detail?.token_number)\r\n                 setValue('mobile',detail?.mobile)\r\n-                setValue('mobile',detail?.mobile)\r\n               \r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744508758797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,10 +275,10 @@\n                 let detail = data?.token\r\n                 console.log(detail);\r\n                 setValue('mobile',detail?.mobile)\r\n                 setValue('customerName',detail?.customer_name)\r\n-                setValue('token_number',detail?.token_number)\r\n-                setValue('mobile',detail?.mobile)\r\n+                setValue('tokenNumber',detail?.token_number)\r\n+                setValue('reference',detail?.reference)\r\n               \r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744508814719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,8 +277,9 @@\n                 setValue('mobile',detail?.mobile)\r\n                 setValue('customerName',detail?.customer_name)\r\n                 setValue('tokenNumber',detail?.token_number)\r\n                 setValue('reference',detail?.reference)\r\n+                setValue('email',detail?.email)\r\n               \r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744508849568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,8 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n+                if(detail?.is_company)\r\n                 setValue('mobile',detail?.mobile)\r\n                 setValue('customerName',detail?.customer_name)\r\n                 setValue('tokenNumber',detail?.token_number)\r\n                 setValue('reference',detail?.reference)\r\n"
                },
                {
                    "date": 1744508858732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,15 +273,19 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n-                if(detail?.is_company)\r\n+                if(detail?.is_company){\r\n+\r\n+                }\r\n+                \r\n+              else{\r\n                 setValue('mobile',detail?.mobile)\r\n                 setValue('customerName',detail?.customer_name)\r\n                 setValue('tokenNumber',detail?.token_number)\r\n                 setValue('reference',detail?.reference)\r\n                 setValue('email',detail?.email)\r\n-              \r\n+              }\r\n     \r\n             } catch (error) {\r\n                 console.error(\"Error fetching location:\", error);\r\n             }\r\n"
                },
                {
                    "date": 1744508870766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,9 +274,13 @@\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n                 if(detail?.is_company){\r\n-\r\n+                    setValue1('mobile',detail?.mobile)\r\n+                    setValue1('customerName',detail?.customer_name)\r\n+                    setValue1('tokenNumber',detail?.token_number)\r\n+                    setValue1('reference',detail?.reference)\r\n+                    setValue1('email',detail?.email)\r\n                 }\r\n                 \r\n               else{\r\n                 setValue('mobile',detail?.mobile)\r\n"
                },
                {
                    "date": 1744508893422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n function UpdateReception() {\r\n     const navigate=useNavigate()\r\n     const {id}=useParams()\r\n     const [customerType, setCustomerType] = useState(\"individual\")\r\n-    const [buttonDisabled, setButtonDisabled] = useState(true)\r\n+    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n     const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n"
                },
                {
                    "date": 1744508915960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -472,9 +472,9 @@\n                         <Grid container justifyContent={'flex-end'}>\r\n                             <PrimaryButton\r\n                                 disabled={buttonDisabled}\r\n                                bgcolor={'#bd9b4a'}\r\n-                                title=\"Create\"\r\n+                                title=\"Update\"\r\n                                 type={'submit'}\r\n \r\n \r\n                             />\r\n"
                },
                {
                    "date": 1744508952552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n-                if(detail?.is_company){\r\n+                if(!detail?.is_company){\r\n                     setValue1('mobile',detail?.mobile)\r\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n"
                },
                {
                    "date": 1744508998150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,8 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n+                setCustomerType(!detail?.is_company)\r\n                 if(!detail?.is_company){\r\n                     setValue1('mobile',detail?.mobile)\r\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n"
                },
                {
                    "date": 1744509019540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n-                setCustomerType(!detail?.is_company)\r\n+                setCustomerType(!detail?.is_company ? 'Individual' : 'Company')\r\n                 if(!detail?.is_company){\r\n                     setValue1('mobile',detail?.mobile)\r\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n"
                },
                {
                    "date": 1744509036650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n-                setCustomerType(!detail?.is_company ? 'Individual' : 'Company')\r\n+                setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n                 if(!detail?.is_company){\r\n                     setValue1('mobile',detail?.mobile)\r\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n"
                },
                {
                    "date": 1744509204592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n         try {\r\n             let obj = {\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n+                customer_id:selectedCustomer?.id,\r\n                 mobile:formData?.mobile,\r\n                 token_number:formData?.tokenNumber,\r\n                 reference:formData?.reference,\r\n                 company_id:selectedCompany?.id\r\n@@ -280,8 +281,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n+                    setSelectedCustomer()\r\n                 }\r\n                 \r\n               else{\r\n                 setValue('mobile',detail?.mobile)\r\n"
                },
                {
                    "date": 1744509330327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n         try {\r\n             let obj = {\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n+                customer_id:selectedCustomer?.id,\r\n                 mobile:formData?.mobile,\r\n                 token_number:formData?.tokenNumber,\r\n                 reference:formData?.reference,\r\n                 company_id:selectedCompany?.id\r\n@@ -281,9 +282,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n-                    setSelectedCustomer()\r\n+                    setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n                 \r\n               else{\r\n                 setValue('mobile',detail?.mobile)\r\n"
                },
                {
                    "date": 1744509341581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,8 +282,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n+                    setValue1('customer',detail?.email)\r\n                     setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n                 \r\n               else{\r\n"
                },
                {
                    "date": 1744509348824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n-                    setValue1('customer',detail?.email)\r\n+                    setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n                     setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n                 \r\n               else{\r\n"
                },
                {
                    "date": 1744509384160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,8 +282,10 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n+                    console.log(customers.find(item=> item?.id == detail?.customer_id);\r\n+                    \r\n                     setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n                     setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n                 \r\n"
                },
                {
                    "date": 1744509404997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n-                    console.log(customers.find(item=> item?.id == detail?.customer_id);\r\n+                    console.log(customers.find(item=> item?.id == detail?.customer_id));\r\n                     \r\n                     setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n                     setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n"
                },
                {
                    "date": 1744509426853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n     const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n     const [companies, setCompanies] = useState([])\r\n     const [companyDialog, setCompanyDialog] = useState(false)\r\n+    const [newDetail, setNewDetail] = useState(null)\r\n     const [subCustDisable, setSubCustDisable] = useState(false)\r\n     const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n     const {\r\n         register: register1,\r\n"
                },
                {
                    "date": 1744509442090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,8 +276,9 @@\n     \r\n                 const { data } = await CustomerServices.getReceptionDetail(params);\r\n                 let detail = data?.token\r\n                 console.log(detail);\r\n+                setNewDetail(detail)\r\n                 setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n                 if(!detail?.is_company){\r\n                     setValue1('mobile',detail?.mobile)\r\n                     setValue1('customerName',detail?.customer_name)\r\n"
                },
                {
                    "date": 1744509472173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,8 +308,12 @@\n         }, [])\r\n     useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n+    useEffect(() => {\r\n+     \r\n+    }, [customers])\r\n+    \r\n \r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n             <SimpleDialog\r\n"
                },
                {
                    "date": 1744509477779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,10 @@\n     useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n+        setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n+        setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n      \r\n     }, [customers])\r\n     \r\n \r\n"
                },
                {
                    "date": 1744509486221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,9 @@\n     useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n-        setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n+        setValue1('customer',customers.find(item=> item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n      \r\n     }, [customers])\r\n     \r\n"
                },
                {
                    "date": 1744509498114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n                     setValue1('customerName',detail?.customer_name)\r\n                     setValue1('tokenNumber',detail?.token_number)\r\n                     setValue1('reference',detail?.reference)\r\n                     setValue1('email',detail?.email)\r\n-                    console.log(customers.find(item=> item?.id == detail?.customer_id));\r\n+                  \r\n                     \r\n                     setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n                     setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n                 }\r\n@@ -310,9 +310,9 @@\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n         setValue1('customer',customers.find(item=> item?.id == newDetail?.customer_id))\r\n-        setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n+        setSelectedCustomer(customers.find(item=> item?.id == newDetail?.customer_id))\r\n      \r\n     }, [customers])\r\n     \r\n \r\n"
                },
                {
                    "date": 1744509508516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,10 +311,11 @@\n     }, [])\r\n     useEffect(() => {\r\n         setValue1('customer',customers.find(item=> item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item=> item?.id == newDetail?.customer_id))\r\n-     \r\n-    }, [customers])\r\n+        setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n+                    setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n+    }, [customers,companies])\r\n     \r\n \r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n"
                },
                {
                    "date": 1744509514177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n import { ErrorToaster } from \"components/Toaster\"\r\n import { useNavigate, useParams } from \"react-router-dom\"\r\n \r\n function UpdateReception() {\r\n-    const navigate=useNavigate()\r\n-    const {id}=useParams()\r\n+    const navigate = useNavigate()\r\n+    const { id } = useParams()\r\n     const [customerType, setCustomerType] = useState(\"individual\")\r\n     const [buttonDisabled, setButtonDisabled] = useState(false)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n@@ -47,20 +47,20 @@\n \r\n         formState: { errors: errors2 },\r\n \r\n     } = useForm();\r\n- \r\n+\r\n     const onSubmit = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n-                customer_id:selectedCustomer?.id,\r\n-                mobile:formData?.mobile,\r\n-                token_number:formData?.tokenNumber,\r\n-                reference:formData?.reference,\r\n-                company_id:selectedCompany?.id\r\n+                customer_id: selectedCustomer?.id,\r\n+                mobile: formData?.mobile,\r\n+                token_number: formData?.tokenNumber,\r\n+                reference: formData?.reference,\r\n+                company_id: selectedCompany?.id\r\n \r\n \r\n             };\r\n             const promise = CustomerServices.CreateReception(obj);\r\n@@ -86,13 +86,13 @@\n         try {\r\n             let obj = {\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n-                customer_id:selectedCustomer?.id,\r\n-                mobile:formData?.mobile,\r\n-                token_number:formData?.tokenNumber,\r\n-                reference:formData?.reference,\r\n-                company_id:selectedCompany?.id\r\n+                customer_id: selectedCustomer?.id,\r\n+                mobile: formData?.mobile,\r\n+                token_number: formData?.tokenNumber,\r\n+                reference: formData?.reference,\r\n+                company_id: selectedCompany?.id\r\n \r\n \r\n             };\r\n             const promise = CustomerServices.CreateReception(obj);\r\n@@ -244,9 +244,9 @@\n         try {\r\n             let obj = {\r\n                 code: formData?.code,\r\n                 name: formData?.name,\r\n-                customer_id:selectedCustomer?.id\r\n+                customer_id: selectedCustomer?.id\r\n \r\n \r\n             };\r\n             const promise = CustomerServices.addCompany(obj);\r\n@@ -267,57 +267,57 @@\n         } catch (error) {\r\n             ErrorToaster(error);\r\n         }\r\n     };\r\n-      const getData = async () => {\r\n-            try {\r\n-                let params = {\r\n-                    reception_id: id\r\n-                };\r\n-    \r\n-                const { data } = await CustomerServices.getReceptionDetail(params);\r\n-                let detail = data?.token\r\n-                console.log(detail);\r\n-                setNewDetail(detail)\r\n-                setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n-                if(!detail?.is_company){\r\n-                    setValue1('mobile',detail?.mobile)\r\n-                    setValue1('customerName',detail?.customer_name)\r\n-                    setValue1('tokenNumber',detail?.token_number)\r\n-                    setValue1('reference',detail?.reference)\r\n-                    setValue1('email',detail?.email)\r\n-                  \r\n-                    \r\n-                    setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n-                    setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n-                }\r\n-                \r\n-              else{\r\n-                setValue('mobile',detail?.mobile)\r\n-                setValue('customerName',detail?.customer_name)\r\n-                setValue('tokenNumber',detail?.token_number)\r\n-                setValue('reference',detail?.reference)\r\n-                setValue('email',detail?.email)\r\n-              }\r\n-    \r\n-            } catch (error) {\r\n-                console.error(\"Error fetching location:\", error);\r\n+    const getData = async () => {\r\n+        try {\r\n+            let params = {\r\n+                reception_id: id\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getReceptionDetail(params);\r\n+            let detail = data?.token\r\n+            console.log(detail);\r\n+            setNewDetail(detail)\r\n+            setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n+            if (!detail?.is_company) {\r\n+                setValue1('mobile', detail?.mobile)\r\n+                setValue1('customerName', detail?.customer_name)\r\n+                setValue1('tokenNumber', detail?.token_number)\r\n+                setValue1('reference', detail?.reference)\r\n+                setValue1('email', detail?.email)\r\n+\r\n+\r\n+                setValue1('customer', customers.find(item => item?.id == detail?.customer_id))\r\n+                setSelectedCustomer(customers.find(item => item?.id == detail?.customer_id))\r\n             }\r\n-        };\r\n-        useEffect(() => {\r\n-            getData()\r\n-        }, [])\r\n+\r\n+            else {\r\n+                setValue('mobile', detail?.mobile)\r\n+                setValue('customerName', detail?.customer_name)\r\n+                setValue('tokenNumber', detail?.token_number)\r\n+                setValue('reference', detail?.reference)\r\n+                setValue('email', detail?.email)\r\n+            }\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n     useEffect(() => {\r\n+        getData()\r\n+    }, [])\r\n+    useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n-        setValue1('customer',customers.find(item=> item?.id == newDetail?.customer_id))\r\n-        setSelectedCustomer(customers.find(item=> item?.id == newDetail?.customer_id))\r\n-        setValue1('customer',customers.find(item=> item?.id == detail?.customer_id))\r\n-                    setSelectedCustomer(customers.find(item=> item?.id == detail?.customer_id))\r\n-    }, [customers,companies])\r\n-    \r\n+        setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n+        setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n+        setValue1('company', customers.find(item => item?.id == detail?.customer_id))\r\n+        setSelectedCustomer(customers.find(item => item?.id == detail?.customer_id))\r\n+    }, [customers, companies])\r\n \r\n+\r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n             <SimpleDialog\r\n                 open={companyDialog}\r\n@@ -327,30 +327,30 @@\n                 <Box component=\"form\" onSubmit={handleSubmit2(CreateCompany)}>\r\n                     <Grid container spacing={2}>\r\n \r\n                         <Grid container sx={{ justifyContent: \"center\" }}>\r\n-                        <Grid item xs={12}>\r\n-                            <InputField\r\n-                                label={\"Name *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\" Name\"}\r\n-                                error={errors2?.name?.message}\r\n-                                register={register2(\"name\", {\r\n-                                    required: \"Please enter  name.\",\r\n-                                })}\r\n-                            />\r\n-                        </Grid>\r\n-                        <Grid item xs={12}>\r\n-                            <InputField\r\n-                                label={\"Code *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\" Code\"}\r\n-                                error={errors2?.code?.message}\r\n-                                register={register2(\"code\", {\r\n-                                    required: \"Please enter  code.\",\r\n-                                })}\r\n-                            />\r\n-                        </Grid>\r\n+                            <Grid item xs={12}>\r\n+                                <InputField\r\n+                                    label={\"Name *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\" Name\"}\r\n+                                    error={errors2?.name?.message}\r\n+                                    register={register2(\"name\", {\r\n+                                        required: \"Please enter  name.\",\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid item xs={12}>\r\n+                                <InputField\r\n+                                    label={\"Code *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\" Code\"}\r\n+                                    error={errors2?.code?.message}\r\n+                                    register={register2(\"code\", {\r\n+                                        required: \"Please enter  code.\",\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n                             <Grid\r\n                                 item\r\n                                 xs={6}\r\n                                 sm={6}\r\n"
                },
                {
                    "date": 1744509521169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,10 +311,10 @@\n     }, [])\r\n     useEffect(() => {\r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n-        setValue1('company', customers.find(item => item?.id == detail?.customer_id))\r\n-        setSelectedCustomer(customers.find(item => item?.id == detail?.customer_id))\r\n+        setValue1('company', companies.find(item => item?.id == detail?.customer_id))\r\n+        setSelectedCustomer(companies.find(item => item?.id == detail?.customer_id))\r\n     }, [customers, companies])\r\n \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1744509526332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n     useEffect(() => {\r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n         setValue1('company', companies.find(item => item?.id == detail?.customer_id))\r\n-        setSelectedCustomer(companies.find(item => item?.id == detail?.customer_id))\r\n+        setSelectedCompany(companies.find(item => item?.id == detail?.customer_id))\r\n     }, [customers, companies])\r\n \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1744509537324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,10 +311,10 @@\n     }, [])\r\n     useEffect(() => {\r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n-        setValue1('company', companies.find(item => item?.id == detail?.customer_id))\r\n-        setSelectedCompany(companies.find(item => item?.id == detail?.customer_id))\r\n+        setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n+        setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n     }, [customers, companies])\r\n \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1744509556982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n         setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n-    }, [customers, companies])\r\n+    }, [customers, companies,newDetail])\r\n \r\n \r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n"
                },
                {
                    "date": 1744509575195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,10 @@\n     useEffect(() => {\r\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n+        console.log(customers.find(item => item?.id == newDetail?.customer_id));\r\n+        \r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n         setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n"
                },
                {
                    "date": 1744509618348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,10 +286,9 @@\n                 setValue1('reference', detail?.reference)\r\n                 setValue1('email', detail?.email)\r\n \r\n \r\n-                setValue1('customer', customers.find(item => item?.id == detail?.customer_id))\r\n-                setSelectedCustomer(customers.find(item => item?.id == detail?.customer_id))\r\n+              \r\n             }\r\n \r\n             else {\r\n                 setValue('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744509674155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,11 +302,12 @@\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n     useEffect(() => {\r\n-        getData()\r\n+        \r\n     }, [])\r\n     useEffect(() => {\r\n+        getData()\r\n         getCustomerQueue()\r\n     }, [])\r\n     useEffect(() => {\r\n         console.log(customers.find(item => item?.id == newDetail?.customer_id));\r\n"
                },
                {
                    "date": 1744509756668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,15 +301,14 @@\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n+\r\n     useEffect(() => {\r\n-        \r\n-    }, [])\r\n-    useEffect(() => {\r\n         getData()\r\n         getCustomerQueue()\r\n     }, [])\r\n+\r\n     useEffect(() => {\r\n         console.log(customers.find(item => item?.id == newDetail?.customer_id));\r\n         \r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n"
                },
                {
                    "date": 1744509825750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n         getCustomerQueue()\r\n     }, [])\r\n \r\n     useEffect(() => {\r\n-        console.log(customers.find(item => item?.id == newDetail?.customer_id));\r\n+        console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n         \r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n         setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n"
                },
                {
                    "date": 1744509857410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,8 +308,10 @@\n         getCustomerQueue()\r\n     }, [])\r\n \r\n     useEffect(() => {\r\n+        console.log(companies);\r\n+        \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n         \r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n"
                },
                {
                    "date": 1744509901578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,11 @@\n                 setValue1('customerName', detail?.customer_name)\r\n                 setValue1('tokenNumber', detail?.token_number)\r\n                 setValue1('reference', detail?.reference)\r\n                 setValue1('email', detail?.email)\r\n+                getCompanies(detail?.customer_id)\r\n \r\n \r\n-              \r\n             }\r\n \r\n             else {\r\n                 setValue('mobile', detail?.mobile)\r\n@@ -309,16 +309,16 @@\n     }, [])\r\n \r\n     useEffect(() => {\r\n         console.log(companies);\r\n-        \r\n+\r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n-        \r\n+\r\n         setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n         setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n-    }, [customers, companies,newDetail])\r\n+    }, [customers, companies, newDetail])\r\n \r\n \r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n"
                },
                {
                    "date": 1744510059562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,13 +279,13 @@\n             console.log(detail);\r\n             setNewDetail(detail)\r\n             setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n             if (!detail?.is_company) {\r\n-                setValue1('mobile', detail?.mobile)\r\n-                setValue1('customerName', detail?.customer_name)\r\n-                setValue1('tokenNumber', detail?.token_number)\r\n-                setValue1('reference', detail?.reference)\r\n-                setValue1('email', detail?.email)\r\n+                setValue('mobile', detail?.mobile)\r\n+                setValue('customerName', detail?.customer_name)\r\n+                setValue('tokenNumber', detail?.token_number)\r\n+                setValue('reference', detail?.reference)\r\n+                setValue('email', detail?.email)\r\n                 getCompanies(detail?.customer_id)\r\n \r\n \r\n             }\r\n"
                },
                {
                    "date": 1744510074107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,19 +284,20 @@\n                 setValue('customerName', detail?.customer_name)\r\n                 setValue('tokenNumber', detail?.token_number)\r\n                 setValue('reference', detail?.reference)\r\n                 setValue('email', detail?.email)\r\n-                getCompanies(detail?.customer_id)\r\n+        \r\n \r\n \r\n             }\r\n \r\n             else {\r\n-                setValue('mobile', detail?.mobile)\r\n-                setValue('customerName', detail?.customer_name)\r\n-                setValue('tokenNumber', detail?.token_number)\r\n-                setValue('reference', detail?.reference)\r\n-                setValue('email', detail?.email)\r\n+                setValue1('mobile', detail?.mobile)\r\n+                setValue1('customerName', detail?.customer_name)\r\n+                setValue1('tokenNumber', detail?.token_number)\r\n+                setValue1('reference', detail?.reference)\r\n+                setValue1('email', detail?.email)\r\n+                getCompanies(detail?.customer_id)\r\n             }\r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744510125216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,11 +313,11 @@\n         console.log(companies);\r\n \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n \r\n-        setValue1('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n+        setValue('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n-        setValue1('company', companies.find(item => item?.id == newDetail?.company_id))\r\n+        setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n     }, [customers, companies, newDetail])\r\n \r\n \r\n"
                },
                {
                    "date": 1744510211663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,8 +302,9 @@\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n+console.log(selectedCustomer);\r\n \r\n     useEffect(() => {\r\n         getData()\r\n         getCustomerQueue()\r\n"
                },
                {
                    "date": 1744510223917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,9 +302,9 @@\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n-console.log(selectedCustomer);\r\n+console.log(selectedCustomer,'selectedCustomer');\r\n \r\n     useEffect(() => {\r\n         getData()\r\n         getCustomerQueue()\r\n"
                },
                {
                    "date": 1744510329073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,31 @@\n     const [buttonDisabled, setButtonDisabled] = useState(false)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n-    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n+    const [selectedCustomer, setSelectedCustomer] = useState({\r\n+        \"id\": 11005,\r\n+        \"name\": \"saeraib aqweel\",\r\n+        \"type\": \"Credit\",\r\n+        \"address\": \"sdasdsad\",\r\n+        \"mobile\": \"0522222222\",\r\n+        \"email\": \"saraib.mangotech@gmail.com\",\r\n+        \"trn\": \"3423423\",\r\n+        \"eid\": \"423234\",\r\n+        \"trade_license_no\": \"23423423423\",\r\n+        \"opening_balance\": 10000,\r\n+        \"opening_balance_type\": \"Credit\",\r\n+        \"opening_balance_date\": \"2025-04-11T19:00:00.000Z\",\r\n+        \"credit_limit\": 1000,\r\n+        \"credit_status\": \"Good History\",\r\n+        \"cost_center\": \"Tasheel\",\r\n+        \"general_notes\": \"asdasdas\",\r\n+        \"created_by\": 30001,\r\n+        \"is_active\": true,\r\n+        \"is_deleted\": false,\r\n+        \"created_at\": \"2025-04-12T16:40:05.113Z\",\r\n+        \"updated_at\": \"2025-04-12T17:00:41.961Z\"\r\n+    })\r\n     const [companies, setCompanies] = useState([])\r\n     const [companyDialog, setCompanyDialog] = useState(false)\r\n     const [newDetail, setNewDetail] = useState(null)\r\n     const [subCustDisable, setSubCustDisable] = useState(false)\r\n"
                },
                {
                    "date": 1744510343069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,31 +21,9 @@\n     const [buttonDisabled, setButtonDisabled] = useState(false)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n     const [customers, setCustomers] = useState([])\r\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n-    const [selectedCustomer, setSelectedCustomer] = useState({\r\n-        \"id\": 11005,\r\n-        \"name\": \"saeraib aqweel\",\r\n-        \"type\": \"Credit\",\r\n-        \"address\": \"sdasdsad\",\r\n-        \"mobile\": \"0522222222\",\r\n-        \"email\": \"saraib.mangotech@gmail.com\",\r\n-        \"trn\": \"3423423\",\r\n-        \"eid\": \"423234\",\r\n-        \"trade_license_no\": \"23423423423\",\r\n-        \"opening_balance\": 10000,\r\n-        \"opening_balance_type\": \"Credit\",\r\n-        \"opening_balance_date\": \"2025-04-11T19:00:00.000Z\",\r\n-        \"credit_limit\": 1000,\r\n-        \"credit_status\": \"Good History\",\r\n-        \"cost_center\": \"Tasheel\",\r\n-        \"general_notes\": \"asdasdas\",\r\n-        \"created_by\": 30001,\r\n-        \"is_active\": true,\r\n-        \"is_deleted\": false,\r\n-        \"created_at\": \"2025-04-12T16:40:05.113Z\",\r\n-        \"updated_at\": \"2025-04-12T17:00:41.961Z\"\r\n-    })\r\n+    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n     const [companies, setCompanies] = useState([])\r\n     const [companyDialog, setCompanyDialog] = useState(false)\r\n     const [newDetail, setNewDetail] = useState(null)\r\n     const [subCustDisable, setSubCustDisable] = useState(false)\r\n"
                },
                {
                    "date": 1744510399098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n \r\n             const { data } = await CustomerServices.getCustomerDetail(params);\r\n             let detail = data?.customer\r\n             console.log(detail);\r\n-            setSelectedCustomer(detail)\r\n+           \r\n             setValue1('customer', detail)\r\n             setValue1('customerName', detail?.name)\r\n             setValue1('email', detail?.email)\r\n             setValue1('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744510408829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n \r\n             const { data } = await CustomerServices.getCustomerDetail(params);\r\n             let detail = data?.customer\r\n             console.log(detail);\r\n-           \r\n+            setSelectedCustomer(detail)\r\n             setValue1('customer', detail)\r\n             setValue1('customerName', detail?.name)\r\n             setValue1('email', detail?.email)\r\n             setValue1('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744510576906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,11 @@\n                 setValue('customerName', detail?.customer_name)\r\n                 setValue('tokenNumber', detail?.token_number)\r\n                 setValue('reference', detail?.reference)\r\n                 setValue('email', detail?.email)\r\n-        \r\n \r\n \r\n+\r\n             }\r\n \r\n             else {\r\n                 setValue1('mobile', detail?.mobile)\r\n@@ -302,9 +302,9 @@\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n-console.log(selectedCustomer,'selectedCustomer');\r\n+    console.log(selectedCustomer, 'selectedCustomer');\r\n \r\n     useEffect(() => {\r\n         getData()\r\n         getCustomerQueue()\r\n@@ -313,11 +313,11 @@\n     useEffect(() => {\r\n         console.log(companies);\r\n \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n-\r\n+        let data = customers.find(item => item?.id == newDetail?.customer_id)\r\n         setValue('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n-        setSelectedCustomer(customers.find(item => item?.id == newDetail?.customer_id))\r\n+        setSelectedCustomer()\r\n         setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n     }, [customers, companies, newDetail])\r\n \r\n"
                },
                {
                    "date": 1744510582852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n     useEffect(() => {\r\n         console.log(companies);\r\n \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n-        let data = customers.find(item => item?.id == newDetail?.customer_id)\r\n+        let data = await customers.find(item => item?.id == newDetail?.customer_id)\r\n         setValue('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n         setSelectedCustomer()\r\n         setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n"
                },
                {
                    "date": 1744510592072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,9 +315,9 @@\n \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n         let data = await customers.find(item => item?.id == newDetail?.customer_id)\r\n         setValue('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n-        setSelectedCustomer()\r\n+        setSelectedCustomer(data)\r\n         setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n     }, [customers, companies, newDetail])\r\n \r\n"
                },
                {
                    "date": 1744510599377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,10 +313,10 @@\n     useEffect(() => {\r\n         console.log(companies);\r\n \r\n         console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n-        let data = await customers.find(item => item?.id == newDetail?.customer_id)\r\n-        setValue('customer', customers.find(item => item?.id == newDetail?.customer_id))\r\n+        let data =  customers.find(item => item?.id == newDetail?.customer_id)\r\n+        setValue('customer',data)\r\n         setSelectedCustomer(data)\r\n         setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n         setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n     }, [customers, companies, newDetail])\r\n"
                },
                {
                    "date": 1744510653705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,19 +310,25 @@\n         getCustomerQueue()\r\n     }, [])\r\n \r\n     useEffect(() => {\r\n-        console.log(companies);\r\n+        const company = companies.find(item => item?.id == newDetail?.company_id);\r\n+        const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n+    \r\n+        // Only proceed if both are found\r\n+        if (company && customer) {\r\n+            console.log('Company:', company);\r\n+            console.log('Customer:', customer);\r\n+    \r\n+            setValue('customer', customer);\r\n+            setSelectedCustomer(customer);\r\n+            setValue('company', company);\r\n+            setSelectedCompany(company);\r\n+        }\r\n+    }, [customers, companies, newDetail]);\r\n+    \r\n \r\n-        console.log(companies.find(item => item?.id == newDetail?.company_id));\r\n-        let data =  customers.find(item => item?.id == newDetail?.customer_id)\r\n-        setValue('customer',data)\r\n-        setSelectedCustomer(data)\r\n-        setValue('company', companies.find(item => item?.id == newDetail?.company_id))\r\n-        setSelectedCompany(companies.find(item => item?.id == newDetail?.company_id))\r\n-    }, [customers, companies, newDetail])\r\n \r\n-\r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n             <SimpleDialog\r\n                 open={companyDialog}\r\n"
                },
                {
                    "date": 1744510695147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -669,9 +669,9 @@\n                             <Grid container justifyContent={'flex-end'}>\r\n                                 <PrimaryButton\r\n                                     disabled={buttonDisabled2}\r\n                                    bgcolor={'#bd9b4a'}\r\n-                                    title=\"Create\"\r\n+                                    title=\"Update\"\r\n                                     type={'submit'}\r\n \r\n \r\n                                 />\r\n"
                },
                {
                    "date": 1744510713553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                 company_id: selectedCompany?.id\r\n \r\n \r\n             };\r\n-            const promise = CustomerServices.CreateReception(obj);\r\n+            const promise = CustomerServices.UpdateReception(obj);\r\n \r\n             showPromiseToast(\r\n                 promise,\r\n                 'Saving...',\r\n@@ -94,9 +94,9 @@\n                 company_id: selectedCompany?.id\r\n \r\n \r\n             };\r\n-            const promise = CustomerServices.CreateReception(obj);\r\n+            const promise = CustomerServices.UpdateReception(obj);\r\n \r\n             showPromiseToast(\r\n                 promise,\r\n                 'Saving...',\r\n"
                },
                {
                    "date": 1744510772913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n     const onSubmit = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n+                id:id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n"
                },
                {
                    "date": 1744510960124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const navigate = useNavigate()\r\n     const { id } = useParams()\r\n     const [customerType, setCustomerType] = useState(\"individual\")\r\n     const [buttonDisabled, setButtonDisabled] = useState(false)\r\n-    const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n+    const [buttonDisabled2, setButtonDisabled2] = useState(false)\r\n     const [customers, setCustomers] = useState([])\r\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n     const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n     const [companies, setCompanies] = useState([])\r\n"
                },
                {
                    "date": 1744511021436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n     const onSubmit1 = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n+                id:id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n"
                },
                {
                    "date": 1744511126261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -389,9 +389,9 @@\n                     </Grid>\r\n                 </Box>\r\n             </SimpleDialog>\r\n             <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n-                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Update Reception</Typography>\r\n+                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n             </Box>\r\n             <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                 <FormControlLabel\r\n                     value=\"individual\"\r\n"
                },
                {
                    "date": 1744549093704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n function UpdateReception() {\r\n     const navigate = useNavigate()\r\n     const { id } = useParams()\r\n-    const [customerType, setCustomerType] = useState(\"individual\")\r\n+    const [customerType, setCustomerType] = useState(\"company\")\r\n     const [buttonDisabled, setButtonDisabled] = useState(false)\r\n     const [buttonDisabled2, setButtonDisabled2] = useState(false)\r\n     const [customers, setCustomers] = useState([])\r\n     const [selectedCompany, setSelectedCompany] = useState(null)\r\n"
                },
                {
                    "date": 1744549100208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n-            setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n+           \r\n             if (!detail?.is_company) {\r\n                 setValue('mobile', detail?.mobile)\r\n                 setValue('customerName', detail?.customer_name)\r\n                 setValue('tokenNumber', detail?.token_number)\r\n"
                },
                {
                    "date": 1744549111401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,677 @@\n+\"use client\"\r\n+\r\n+import { useEffect, useState } from \"react\"\r\n+import { Box, FormControlLabel, Grid, Radio, RadioGroup, Typography } from \"@mui/material\"\r\n+import { PrimaryButton } from \"components/Buttons\"\r\n+import Colors from \"assets/Style/Colors\"\r\n+import InputField from \"components/Input\"\r\n+import SelectField from \"components/Select\"\r\n+import { useForm } from \"react-hook-form\"\r\n+import { Debounce2 } from \"utils\"\r\n+import CustomerServices from \"services/Customer\"\r\n+import { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\n+import SimpleDialog from \"components/Dialog/SimpleDialog\"\r\n+import { ErrorToaster } from \"components/Toaster\"\r\n+import { useNavigate, useParams } from \"react-router-dom\"\r\n+\r\n+function UpdateReception() {\r\n+    const navigate = useNavigate()\r\n+    const { id } = useParams()\r\n+    const [customerType, setCustomerType] = useState(\"company\")\r\n+    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n+    const [buttonDisabled2, setButtonDisabled2] = useState(false)\r\n+    const [customers, setCustomers] = useState([])\r\n+    const [selectedCompany, setSelectedCompany] = useState(null)\r\n+    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n+    const [companies, setCompanies] = useState([])\r\n+    const [companyDialog, setCompanyDialog] = useState(false)\r\n+    const [newDetail, setNewDetail] = useState(null)\r\n+    const [subCustDisable, setSubCustDisable] = useState(false)\r\n+    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n+    const {\r\n+        register: register1,\r\n+        handleSubmit: handleSubmit1,\r\n+        setValue: setValue1,\r\n+        getValues: getValues1,\r\n+        control,\r\n+        watch,\r\n+        formState: { errors: errors1 },\r\n+\r\n+    } = useForm();\r\n+    const {\r\n+        register: register2,\r\n+        handleSubmit: handleSubmit2,\r\n+        setValue: setValue2,\r\n+        getValues: getValues2,\r\n+\r\n+\r\n+        formState: { errors: errors2 },\r\n+\r\n+    } = useForm();\r\n+\r\n+    const onSubmit = async (formData) => {\r\n+        console.log(formData);\r\n+        try {\r\n+            let obj = {\r\n+                id:id,\r\n+                is_company: customerType == 'individual' ? false : true,\r\n+                customer_name: formData?.customerName,\r\n+                customer_id: selectedCustomer?.id,\r\n+                mobile: formData?.mobile,\r\n+                token_number: formData?.tokenNumber,\r\n+                reference: formData?.reference,\r\n+                company_id: selectedCompany?.id\r\n+\r\n+\r\n+            };\r\n+            const promise = CustomerServices.UpdateReception(obj);\r\n+\r\n+            showPromiseToast(\r\n+                promise,\r\n+                'Saving...',\r\n+                'Added Successfully',\r\n+                'Something Went Wrong'\r\n+            );\r\n+            const response = await promise;\r\n+            if (response?.responseCode === 200) {\r\n+                navigate('/reception-list')\r\n+            }\r\n+\r\n+\r\n+        } catch (error) {\r\n+            ErrorToaster(error);\r\n+        }\r\n+    };\r\n+    const onSubmit1 = async (formData) => {\r\n+        console.log(formData);\r\n+        try {\r\n+            let obj = {\r\n+                id:id,\r\n+                is_company: customerType == 'individual' ? false : true,\r\n+                customer_name: formData?.customerName,\r\n+                customer_id: selectedCustomer?.id,\r\n+                mobile: formData?.mobile,\r\n+                token_number: formData?.tokenNumber,\r\n+                reference: formData?.reference,\r\n+                company_id: selectedCompany?.id\r\n+\r\n+\r\n+            };\r\n+            const promise = CustomerServices.UpdateReception(obj);\r\n+\r\n+            showPromiseToast(\r\n+                promise,\r\n+                'Saving...',\r\n+                'Added Successfully',\r\n+                'Something Went Wrong'\r\n+            );\r\n+            const response = await promise;\r\n+            if (response?.responseCode === 200) {\r\n+                navigate('/reception-list')\r\n+            }\r\n+\r\n+\r\n+        } catch (error) {\r\n+            ErrorToaster(error);\r\n+        }\r\n+    };\r\n+    // *For Get Customer Queue\r\n+    const getCustomerQueue = async (page, limit, filter) => {\r\n+\r\n+\r\n+        try {\r\n+\r\n+            let params = {\r\n+                page: 1,\r\n+                limit: 1000,\r\n+\r\n+\r\n+            }\r\n+\r\n+            const { data } = await CustomerServices.getCustomerQueue(params)\r\n+            setCustomers(data?.rows)\r\n+\r\n+        } catch (error) {\r\n+            showErrorToast(error)\r\n+        }\r\n+    }\r\n+\r\n+    const getCustomerDetail = async (phone) => {\r\n+        try {\r\n+            let params = {\r\n+                mobile: phone\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getCustomerDetail(params);\r\n+            let detail = data?.customer\r\n+            console.log(detail);\r\n+\r\n+            setValue('customerName', detail?.name)\r\n+            setValue('email', detail?.email)\r\n+            setValue('mobile', detail?.mobile)\r\n+\r\n+\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+    const getCustomerDetail2 = async (phone) => {\r\n+        try {\r\n+            let params = {\r\n+                mobile: phone\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getCustomerDetail(params);\r\n+            let detail = data?.customer\r\n+            console.log(detail);\r\n+            setSelectedCustomer(detail)\r\n+            setValue1('customer', detail)\r\n+            setValue1('customerName', detail?.name)\r\n+            setValue1('email', detail?.email)\r\n+            setValue1('mobile', detail?.mobile)\r\n+\r\n+\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+\r\n+    const getCompanies = async (id) => {\r\n+        try {\r\n+            let params = {\r\n+                customer_id: id ? id : selectedCustomer?.id\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getCompanies(params);\r\n+            setCompanies(data?.companies)\r\n+\r\n+\r\n+\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+    const getTokenValidation = async (value) => {\r\n+        try {\r\n+            let params = {\r\n+                validate: true,\r\n+                token_number: value\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getReceptionDetail(params);\r\n+            console.log(data);\r\n+            if (data?.token) {\r\n+                setButtonDisabled(true)\r\n+                showErrorToast('Token Number Already Exist')\r\n+            }\r\n+            else {\r\n+                setButtonDisabled(false)\r\n+            }\r\n+\r\n+\r\n+        } catch (error) {\r\n+\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+    const getTokenValidation2 = async (value) => {\r\n+        try {\r\n+            let params = {\r\n+                validate: true,\r\n+                token_number: value\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getReceptionDetail(params);\r\n+            console.log(data);\r\n+            if (data?.token) {\r\n+                setButtonDisabled2(true)\r\n+                showErrorToast('Token Number Already Exist')\r\n+            }\r\n+            else {\r\n+                setButtonDisabled2(false)\r\n+            }\r\n+\r\n+\r\n+        } catch (error) {\r\n+\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+\r\n+    const CreateCompany = async (formData) => {\r\n+        console.log(formData);\r\n+        try {\r\n+            let obj = {\r\n+                code: formData?.code,\r\n+                name: formData?.name,\r\n+                customer_id: selectedCustomer?.id\r\n+\r\n+\r\n+            };\r\n+            const promise = CustomerServices.addCompany(obj);\r\n+\r\n+            showPromiseToast(\r\n+                promise,\r\n+                'Saving...',\r\n+                'Added Successfully',\r\n+                'Something Went Wrong'\r\n+            );\r\n+            const response = await promise;\r\n+            if (response?.responseCode === 200) {\r\n+                getCompanies();\r\n+                setCompanyDialog(false)\r\n+            }\r\n+\r\n+\r\n+        } catch (error) {\r\n+            ErrorToaster(error);\r\n+        }\r\n+    };\r\n+    const getData = async () => {\r\n+        try {\r\n+            let params = {\r\n+                reception_id: id\r\n+            };\r\n+\r\n+            const { data } = await CustomerServices.getReceptionDetail(params);\r\n+            let detail = data?.token\r\n+            console.log(detail);\r\n+            setNewDetail(detail)\r\n+           \r\n+            if (!detail?.is_company) {\r\n+                setValue('mobile', detail?.mobile)\r\n+                setValue('customerName', detail?.customer_name)\r\n+                setValue('tokenNumber', detail?.token_number)\r\n+                setValue('reference', detail?.reference)\r\n+                setValue('email', detail?.email)\r\n+\r\n+\r\n+\r\n+            }\r\n+\r\n+            else {\r\n+                setValue1('mobile', detail?.mobile)\r\n+                setValue1('customerName', detail?.customer_name)\r\n+                setValue1('tokenNumber', detail?.token_number)\r\n+                setValue1('reference', detail?.reference)\r\n+                setValue1('email', detail?.email)\r\n+                getCompanies(detail?.customer_id)\r\n+            }\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+    console.log(selectedCustomer, 'selectedCustomer');\r\n+\r\n+    useEffect(() => {\r\n+        getData()\r\n+        getCustomerQueue()\r\n+    }, [])\r\n+\r\n+    useEffect(() => {\r\n+        const company = companies.find(item => item?.id == newDetail?.company_id);\r\n+        const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n+    \r\n+        // Only proceed if both are found\r\n+        if (company && customer) {\r\n+            console.log('Company:', company);\r\n+            console.log('Customer:', customer);\r\n+    \r\n+            setValue('customer', customer);\r\n+            setSelectedCustomer(customer);\r\n+            setValue('company', company);\r\n+            setSelectedCompany(company);\r\n+        }\r\n+    }, [customers, companies, newDetail]);\r\n+    \r\n+\r\n+\r\n+    return (\r\n+        <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n+            <SimpleDialog\r\n+                open={companyDialog}\r\n+                onClose={() => setCompanyDialog(false)}\r\n+                title={\"Change Status?\"}\r\n+            >\r\n+                <Box component=\"form\" onSubmit={handleSubmit2(CreateCompany)}>\r\n+                    <Grid container spacing={2}>\r\n+\r\n+                        <Grid container sx={{ justifyContent: \"center\" }}>\r\n+                            <Grid item xs={12}>\r\n+                                <InputField\r\n+                                    label={\"Name *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\" Name\"}\r\n+                                    error={errors2?.name?.message}\r\n+                                    register={register2(\"name\", {\r\n+                                        required: \"Please enter  name.\",\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid item xs={12}>\r\n+                                <InputField\r\n+                                    label={\"Code *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\" Code\"}\r\n+                                    error={errors2?.code?.message}\r\n+                                    register={register2(\"code\", {\r\n+                                        required: \"Please enter  code.\",\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid\r\n+                                item\r\n+                                xs={6}\r\n+                                sm={6}\r\n+                                sx={{\r\n+                                    mt: 2,\r\n+                                    display: \"flex\",\r\n+                                    justifyContent: \"space-between\",\r\n+                                    gap: \"25px\",\r\n+                                }}\r\n+                            >\r\n+                                <PrimaryButton\r\n+                                    bgcolor={Colors.primary}\r\n+                                    title=\"Yes,Confirm\"\r\n+                                    type=\"submit\"\r\n+                                />\r\n+                                <PrimaryButton\r\n+                                    onClick={() => setCompanyDialog(false)}\r\n+                                    bgcolor={\"#FF1F25\"}\r\n+                                    title=\"No,Cancel\"\r\n+                                />\r\n+                            </Grid>\r\n+                        </Grid>\r\n+                    </Grid>\r\n+                </Box>\r\n+            </SimpleDialog>\r\n+            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n+                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n+            </Box>\r\n+          \r\n+            {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n+\r\n+\r\n+                <Box sx={{ p: 3 }}>\r\n+\r\n+\r\n+                    <Grid container sx={{ gap: \"5px 25px\" }}>\r\n+                        <Grid item xs={2.8}><InputField\r\n+                            label={\"Mobile *:\"}\r\n+                            size={'small'}\r\n+                            type={'number'}\r\n+                            placeholder={\"Mobile\"}\r\n+                            error={errors?.mobile?.message}\r\n+                            register={register(\"mobile\", {\r\n+                                required:\r\n+                                    \"Please enter your mobile.\",\r\n+                                pattern: {\r\n+                                    value: /^05[0-9]{8}$/,\r\n+                                    message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n+                                },\r\n+                                onChange: (e) => {\r\n+                                    console.log('asdas');\r\n+                                    if (getValues('mobile').length == 10) {\r\n+                                        Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n+                                    }\r\n+\r\n+                                    // Delay the execution of verifyEmail by 2 seconds\r\n+\r\n+                                },\r\n+\r\n+                            })}\r\n+                        /></Grid>\r\n+\r\n+                        <Grid item xs={2.8}>\r\n+                            <InputField\r\n+                                label={\"Token Number *:\"}\r\n+                                size={\"small\"}\r\n+                                placeholder={\"Token Number\"}\r\n+                                error={errors?.tokenNumber?.message}\r\n+                                register={register(\"tokenNumber\", {\r\n+                                    onChange: (e) => {\r\n+                                        console.log('asdas');\r\n+                                        if (getValues('tokenNumber')) {\r\n+                                            Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n+                                        }\r\n+\r\n+                                        // Delay the execution of verifyEmail by 2 seconds\r\n+\r\n+                                    },\r\n+                                })}\r\n+                            />\r\n+                        </Grid>\r\n+\r\n+                        <Grid item xs={2.8}>\r\n+                            <InputField\r\n+                                label={\"Customer Name *:\"}\r\n+                                size={\"small\"}\r\n+                                placeholder={\"Customer Name\"}\r\n+                                error={errors?.customerName?.message}\r\n+                                register={register(\"customerName\", {\r\n+                                    required: \"Please enter customer name.\",\r\n+                                })}\r\n+                            />\r\n+                        </Grid>\r\n+\r\n+                        <Grid item xs={2.8}>\r\n+                            <InputField\r\n+                                label={\"Reference *:\"}\r\n+                                size={\"small\"}\r\n+                                placeholder={\"Reference\"}\r\n+                                error={errors?.reference?.message}\r\n+                                register={register(\"reference\")}\r\n+                            />\r\n+                        </Grid>\r\n+\r\n+\r\n+\r\n+                        <Grid item xs={2.8}>\r\n+                            <InputField\r\n+                                label={\"Email *:\"}\r\n+                                size={\"small\"}\r\n+                                type={\"email\"}\r\n+                                placeholder={\"Email\"}\r\n+                                error={errors?.email?.message}\r\n+                                register={register(\"email\", {\r\n+                                    pattern: {\r\n+                                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n+                                        message: \"Please enter a valid email address.\",\r\n+                                    },\r\n+\r\n+                                })}\r\n+                            />\r\n+                        </Grid>\r\n+\r\n+                        <Grid container justifyContent={'flex-end'}>\r\n+                            <PrimaryButton\r\n+                                disabled={buttonDisabled}\r\n+                               bgcolor={'#bd9b4a'}\r\n+                                title=\"Update\"\r\n+                                type={'submit'}\r\n+\r\n+\r\n+                            />\r\n+                        </Grid>\r\n+                    </Grid>\r\n+                </Box>\r\n+            </Box>\r\n+                :\r\n+                <Box component={\"form\"} onSubmit={handleSubmit1(onSubmit1)}>\r\n+\r\n+\r\n+                    <Box sx={{ p: 3 }}>\r\n+\r\n+\r\n+                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n+                            <Grid item xs={2.8}><InputField\r\n+                                label={\"Mobile *:\"}\r\n+                                size={'small'}\r\n+                                type={'number'}\r\n+                                placeholder={\"Mobile\"}\r\n+                                error={errors1?.mobile?.message}\r\n+                                register={register1(\"mobile\", {\r\n+                                    required:\r\n+                                        \"Please enter your mobile.\",\r\n+                                    pattern: {\r\n+                                        value: /^05[0-9]{8}$/,\r\n+                                        message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n+                                    },\r\n+                                    onChange: (e) => {\r\n+                                        console.log('asdas');\r\n+                                        if (getValues1('mobile').length == 10) {\r\n+                                            Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n+                                        }\r\n+\r\n+                                        // Delay the execution of verifyEmail by 2 seconds\r\n+\r\n+                                    },\r\n+\r\n+                                })}\r\n+                            /></Grid>\r\n+\r\n+                            <Grid item xs={2.8}>\r\n+                                <InputField\r\n+                                    label={\"Token Number *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\"Token Number\"}\r\n+                                    error={errors1?.tokenNumber?.message}\r\n+                                    register={register1(\"tokenNumber\", {\r\n+                                        onChange: (e) => {\r\n+                                            console.log('asdas');\r\n+                                            if (getValues1('tokenNumber')) {\r\n+                                                Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n+                                            }\r\n+\r\n+                                            // Delay the execution of verifyEmail by 2 seconds\r\n+\r\n+                                        },\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            <Grid item xs={2.8}>\r\n+                                <InputField\r\n+                                    label={\"Customer Name *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\"Customer Name\"}\r\n+                                    error={errors1?.customerName?.message}\r\n+                                    register={register1(\"customerName\", {\r\n+                                        required: \"Please enter customer name.\",\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            <Grid item xs={2.8}>\r\n+                                <InputField\r\n+                                    label={\"Reference *:\"}\r\n+                                    size={\"small\"}\r\n+                                    placeholder={\"Reference\"}\r\n+                                    error={errors1?.reference?.message}\r\n+                                    register={register1(\"reference\")}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+\r\n+\r\n+                            <Grid item xs={2.8}>\r\n+                                <InputField\r\n+                                    label={\"Email *:\"}\r\n+                                    size={\"small\"}\r\n+                                    type={\"email\"}\r\n+                                    placeholder={\"Email\"}\r\n+                                    error={errors1?.email?.message}\r\n+                                    register={register1(\"email\", {\r\n+                                        pattern: {\r\n+                                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n+                                            message: \"Please enter a valid email address.\",\r\n+                                        },\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            <Grid item xs={2.8} >\r\n+                                <SelectField\r\n+                                    size={'small'}\r\n+                                    label={'Customer *:'}\r\n+\r\n+                                    options={customers}\r\n+                                    selected={selectedCustomer}\r\n+                                    onSelect={(value) => {\r\n+                                        setSelectedCustomer(value)\r\n+                                        if (value?.name == 'Walk-In Customer') {\r\n+                                            setSubCustDisable(true)\r\n+                                            setValue1('customerName', '')\r\n+                                            setValue1('email', '')\r\n+                                            setValue1('mobile', '')\r\n+                                        }\r\n+                                        else {\r\n+                                            console.log(value);\r\n+\r\n+                                            setValue1('customerName', value?.name)\r\n+                                            setValue1('email', value?.email)\r\n+                                            setValue1('mobile', value?.mobile)\r\n+\r\n+                                            setSubCustDisable(false)\r\n+                                            Debounce2(() => getCompanies(value?.id));\r\n+                                        }\r\n+\r\n+                                    }}\r\n+                                    error={errors1?.customer?.message}\r\n+                                    register={register1(\"customer\", {\r\n+                                        required: 'Please select customer account.',\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid item xs={2.8} >\r\n+                                <SelectField\r\n+                                    size={'small'}\r\n+                                    label={'Company *:'}\r\n+                                    disabled={subCustDisable}\r\n+                                    options={companies}\r\n+                                    selected={selectedCompany}\r\n+                                    onSelect={(value) => {\r\n+                                        setSelectedCompany(value)\r\n+\r\n+\r\n+                                    }}\r\n+                                    error={errors1?.company?.message}\r\n+                                    register={register1(\"company\", {\r\n+                                        required: 'Please select company .',\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid item xs={2.8} mt={4} >\r\n+                                <PrimaryButton\r\n+\r\n+                                    disabled={subCustDisable}\r\n+                                   bgcolor={'#bd9b4a'}\r\n+                                    onClick={() => setCompanyDialog(true)}\r\n+                                    title=\"Add Company\"\r\n+\r\n+\r\n+\r\n+                                />\r\n+                            </Grid>\r\n+                            <Grid container justifyContent={'flex-end'}>\r\n+                                <PrimaryButton\r\n+                                    disabled={buttonDisabled2}\r\n+                                   bgcolor={'#bd9b4a'}\r\n+                                    title=\"Update\"\r\n+                                    type={'submit'}\r\n+\r\n+\r\n+                                />\r\n+                            </Grid>\r\n+                        </Grid>\r\n+                    </Box>\r\n+                </Box>}\r\n+        </Box>\r\n+    )\r\n+}\r\n+\r\n+export default UpdateReception\r\n"
                },
                {
                    "date": 1744549138075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,27 +280,27 @@\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n            \r\n-            if (!detail?.is_company) {\r\n+           \r\n                 setValue('mobile', detail?.mobile)\r\n                 setValue('customerName', detail?.customer_name)\r\n                 setValue('tokenNumber', detail?.token_number)\r\n                 setValue('reference', detail?.reference)\r\n                 setValue('email', detail?.email)\r\n \r\n \r\n \r\n-            }\r\n+            \r\n \r\n-            else {\r\n+        \r\n                 setValue1('mobile', detail?.mobile)\r\n                 setValue1('customerName', detail?.customer_name)\r\n                 setValue1('tokenNumber', detail?.token_number)\r\n                 setValue1('reference', detail?.reference)\r\n                 setValue1('email', detail?.email)\r\n                 getCompanies(detail?.customer_id)\r\n-            }\r\n+            \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n@@ -674,692 +674,4 @@\n     )\r\n }\r\n \r\n export default UpdateReception\r\n-\"use client\"\r\n-\r\n-import { useEffect, useState } from \"react\"\r\n-import { Box, FormControlLabel, Grid, Radio, RadioGroup, Typography } from \"@mui/material\"\r\n-import { PrimaryButton } from \"components/Buttons\"\r\n-import Colors from \"assets/Style/Colors\"\r\n-import InputField from \"components/Input\"\r\n-import SelectField from \"components/Select\"\r\n-import { useForm } from \"react-hook-form\"\r\n-import { Debounce2 } from \"utils\"\r\n-import CustomerServices from \"services/Customer\"\r\n-import { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\n-import SimpleDialog from \"components/Dialog/SimpleDialog\"\r\n-import { ErrorToaster } from \"components/Toaster\"\r\n-import { useNavigate, useParams } from \"react-router-dom\"\r\n-\r\n-function UpdateReception() {\r\n-    const navigate = useNavigate()\r\n-    const { id } = useParams()\r\n-    const [customerType, setCustomerType] = useState(\"company\")\r\n-    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n-    const [buttonDisabled2, setButtonDisabled2] = useState(false)\r\n-    const [customers, setCustomers] = useState([])\r\n-    const [selectedCompany, setSelectedCompany] = useState(null)\r\n-    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n-    const [companies, setCompanies] = useState([])\r\n-    const [companyDialog, setCompanyDialog] = useState(false)\r\n-    const [newDetail, setNewDetail] = useState(null)\r\n-    const [subCustDisable, setSubCustDisable] = useState(false)\r\n-    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n-    const {\r\n-        register: register1,\r\n-        handleSubmit: handleSubmit1,\r\n-        setValue: setValue1,\r\n-        getValues: getValues1,\r\n-        control,\r\n-        watch,\r\n-        formState: { errors: errors1 },\r\n-\r\n-    } = useForm();\r\n-    const {\r\n-        register: register2,\r\n-        handleSubmit: handleSubmit2,\r\n-        setValue: setValue2,\r\n-        getValues: getValues2,\r\n-\r\n-\r\n-        formState: { errors: errors2 },\r\n-\r\n-    } = useForm();\r\n-\r\n-    const onSubmit = async (formData) => {\r\n-        console.log(formData);\r\n-        try {\r\n-            let obj = {\r\n-                id:id,\r\n-                is_company: customerType == 'individual' ? false : true,\r\n-                customer_name: formData?.customerName,\r\n-                customer_id: selectedCustomer?.id,\r\n-                mobile: formData?.mobile,\r\n-                token_number: formData?.tokenNumber,\r\n-                reference: formData?.reference,\r\n-                company_id: selectedCompany?.id\r\n-\r\n-\r\n-            };\r\n-            const promise = CustomerServices.UpdateReception(obj);\r\n-\r\n-            showPromiseToast(\r\n-                promise,\r\n-                'Saving...',\r\n-                'Added Successfully',\r\n-                'Something Went Wrong'\r\n-            );\r\n-            const response = await promise;\r\n-            if (response?.responseCode === 200) {\r\n-                navigate('/reception-list')\r\n-            }\r\n-\r\n-\r\n-        } catch (error) {\r\n-            ErrorToaster(error);\r\n-        }\r\n-    };\r\n-    const onSubmit1 = async (formData) => {\r\n-        console.log(formData);\r\n-        try {\r\n-            let obj = {\r\n-                id:id,\r\n-                is_company: customerType == 'individual' ? false : true,\r\n-                customer_name: formData?.customerName,\r\n-                customer_id: selectedCustomer?.id,\r\n-                mobile: formData?.mobile,\r\n-                token_number: formData?.tokenNumber,\r\n-                reference: formData?.reference,\r\n-                company_id: selectedCompany?.id\r\n-\r\n-\r\n-            };\r\n-            const promise = CustomerServices.UpdateReception(obj);\r\n-\r\n-            showPromiseToast(\r\n-                promise,\r\n-                'Saving...',\r\n-                'Added Successfully',\r\n-                'Something Went Wrong'\r\n-            );\r\n-            const response = await promise;\r\n-            if (response?.responseCode === 200) {\r\n-                navigate('/reception-list')\r\n-            }\r\n-\r\n-\r\n-        } catch (error) {\r\n-            ErrorToaster(error);\r\n-        }\r\n-    };\r\n-    // *For Get Customer Queue\r\n-    const getCustomerQueue = async (page, limit, filter) => {\r\n-\r\n-\r\n-        try {\r\n-\r\n-            let params = {\r\n-                page: 1,\r\n-                limit: 1000,\r\n-\r\n-\r\n-            }\r\n-\r\n-            const { data } = await CustomerServices.getCustomerQueue(params)\r\n-            setCustomers(data?.rows)\r\n-\r\n-        } catch (error) {\r\n-            showErrorToast(error)\r\n-        }\r\n-    }\r\n-\r\n-    const getCustomerDetail = async (phone) => {\r\n-        try {\r\n-            let params = {\r\n-                mobile: phone\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getCustomerDetail(params);\r\n-            let detail = data?.customer\r\n-            console.log(detail);\r\n-\r\n-            setValue('customerName', detail?.name)\r\n-            setValue('email', detail?.email)\r\n-            setValue('mobile', detail?.mobile)\r\n-\r\n-\r\n-\r\n-        } catch (error) {\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-    const getCustomerDetail2 = async (phone) => {\r\n-        try {\r\n-            let params = {\r\n-                mobile: phone\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getCustomerDetail(params);\r\n-            let detail = data?.customer\r\n-            console.log(detail);\r\n-            setSelectedCustomer(detail)\r\n-            setValue1('customer', detail)\r\n-            setValue1('customerName', detail?.name)\r\n-            setValue1('email', detail?.email)\r\n-            setValue1('mobile', detail?.mobile)\r\n-\r\n-\r\n-\r\n-        } catch (error) {\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-\r\n-    const getCompanies = async (id) => {\r\n-        try {\r\n-            let params = {\r\n-                customer_id: id ? id : selectedCustomer?.id\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getCompanies(params);\r\n-            setCompanies(data?.companies)\r\n-\r\n-\r\n-\r\n-\r\n-        } catch (error) {\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-    const getTokenValidation = async (value) => {\r\n-        try {\r\n-            let params = {\r\n-                validate: true,\r\n-                token_number: value\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getReceptionDetail(params);\r\n-            console.log(data);\r\n-            if (data?.token) {\r\n-                setButtonDisabled(true)\r\n-                showErrorToast('Token Number Already Exist')\r\n-            }\r\n-            else {\r\n-                setButtonDisabled(false)\r\n-            }\r\n-\r\n-\r\n-        } catch (error) {\r\n-\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-    const getTokenValidation2 = async (value) => {\r\n-        try {\r\n-            let params = {\r\n-                validate: true,\r\n-                token_number: value\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getReceptionDetail(params);\r\n-            console.log(data);\r\n-            if (data?.token) {\r\n-                setButtonDisabled2(true)\r\n-                showErrorToast('Token Number Already Exist')\r\n-            }\r\n-            else {\r\n-                setButtonDisabled2(false)\r\n-            }\r\n-\r\n-\r\n-        } catch (error) {\r\n-\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-\r\n-    const CreateCompany = async (formData) => {\r\n-        console.log(formData);\r\n-        try {\r\n-            let obj = {\r\n-                code: formData?.code,\r\n-                name: formData?.name,\r\n-                customer_id: selectedCustomer?.id\r\n-\r\n-\r\n-            };\r\n-            const promise = CustomerServices.addCompany(obj);\r\n-\r\n-            showPromiseToast(\r\n-                promise,\r\n-                'Saving...',\r\n-                'Added Successfully',\r\n-                'Something Went Wrong'\r\n-            );\r\n-            const response = await promise;\r\n-            if (response?.responseCode === 200) {\r\n-                getCompanies();\r\n-                setCompanyDialog(false)\r\n-            }\r\n-\r\n-\r\n-        } catch (error) {\r\n-            ErrorToaster(error);\r\n-        }\r\n-    };\r\n-    const getData = async () => {\r\n-        try {\r\n-            let params = {\r\n-                reception_id: id\r\n-            };\r\n-\r\n-            const { data } = await CustomerServices.getReceptionDetail(params);\r\n-            let detail = data?.token\r\n-            console.log(detail);\r\n-            setNewDetail(detail)\r\n-           \r\n-            if (!detail?.is_company) {\r\n-                setValue('mobile', detail?.mobile)\r\n-                setValue('customerName', detail?.customer_name)\r\n-                setValue('tokenNumber', detail?.token_number)\r\n-                setValue('reference', detail?.reference)\r\n-                setValue('email', detail?.email)\r\n-\r\n-\r\n-\r\n-            }\r\n-\r\n-            else {\r\n-                setValue1('mobile', detail?.mobile)\r\n-                setValue1('customerName', detail?.customer_name)\r\n-                setValue1('tokenNumber', detail?.token_number)\r\n-                setValue1('reference', detail?.reference)\r\n-                setValue1('email', detail?.email)\r\n-                getCompanies(detail?.customer_id)\r\n-            }\r\n-\r\n-        } catch (error) {\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-    };\r\n-    console.log(selectedCustomer, 'selectedCustomer');\r\n-\r\n-    useEffect(() => {\r\n-        getData()\r\n-        getCustomerQueue()\r\n-    }, [])\r\n-\r\n-    useEffect(() => {\r\n-        const company = companies.find(item => item?.id == newDetail?.company_id);\r\n-        const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n-    \r\n-        // Only proceed if both are found\r\n-        if (company && customer) {\r\n-            console.log('Company:', company);\r\n-            console.log('Customer:', customer);\r\n-    \r\n-            setValue('customer', customer);\r\n-            setSelectedCustomer(customer);\r\n-            setValue('company', company);\r\n-            setSelectedCompany(company);\r\n-        }\r\n-    }, [customers, companies, newDetail]);\r\n-    \r\n-\r\n-\r\n-    return (\r\n-        <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n-            <SimpleDialog\r\n-                open={companyDialog}\r\n-                onClose={() => setCompanyDialog(false)}\r\n-                title={\"Change Status?\"}\r\n-            >\r\n-                <Box component=\"form\" onSubmit={handleSubmit2(CreateCompany)}>\r\n-                    <Grid container spacing={2}>\r\n-\r\n-                        <Grid container sx={{ justifyContent: \"center\" }}>\r\n-                            <Grid item xs={12}>\r\n-                                <InputField\r\n-                                    label={\"Name *:\"}\r\n-                                    size={\"small\"}\r\n-                                    placeholder={\" Name\"}\r\n-                                    error={errors2?.name?.message}\r\n-                                    register={register2(\"name\", {\r\n-                                        required: \"Please enter  name.\",\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-                            <Grid item xs={12}>\r\n-                                <InputField\r\n-                                    label={\"Code *:\"}\r\n-                                    size={\"small\"}\r\n-                                    placeholder={\" Code\"}\r\n-                                    error={errors2?.code?.message}\r\n-                                    register={register2(\"code\", {\r\n-                                        required: \"Please enter  code.\",\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-                            <Grid\r\n-                                item\r\n-                                xs={6}\r\n-                                sm={6}\r\n-                                sx={{\r\n-                                    mt: 2,\r\n-                                    display: \"flex\",\r\n-                                    justifyContent: \"space-between\",\r\n-                                    gap: \"25px\",\r\n-                                }}\r\n-                            >\r\n-                                <PrimaryButton\r\n-                                    bgcolor={Colors.primary}\r\n-                                    title=\"Yes,Confirm\"\r\n-                                    type=\"submit\"\r\n-                                />\r\n-                                <PrimaryButton\r\n-                                    onClick={() => setCompanyDialog(false)}\r\n-                                    bgcolor={\"#FF1F25\"}\r\n-                                    title=\"No,Cancel\"\r\n-                                />\r\n-                            </Grid>\r\n-                        </Grid>\r\n-                    </Grid>\r\n-                </Box>\r\n-            </SimpleDialog>\r\n-            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n-                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n-            </Box>\r\n-            <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n-                <FormControlLabel\r\n-                    value=\"individual\"\r\n-                    control={<Radio disabled checked={customerType === \"individual\"} />}\r\n-                    label=\"Individual\"\r\n-                />\r\n-                <FormControlLabel\r\n-                    value=\"company\"\r\n-                    control={<Radio disabled checked={customerType === \"company\"} />}\r\n-                    label=\"Company\"\r\n-                />\r\n-            </RadioGroup>\r\n-            {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n-\r\n-\r\n-                <Box sx={{ p: 3 }}>\r\n-\r\n-\r\n-                    <Grid container sx={{ gap: \"5px 25px\" }}>\r\n-                        <Grid item xs={2.8}><InputField\r\n-                            label={\"Mobile *:\"}\r\n-                            size={'small'}\r\n-                            type={'number'}\r\n-                            placeholder={\"Mobile\"}\r\n-                            error={errors?.mobile?.message}\r\n-                            register={register(\"mobile\", {\r\n-                                required:\r\n-                                    \"Please enter your mobile.\",\r\n-                                pattern: {\r\n-                                    value: /^05[0-9]{8}$/,\r\n-                                    message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n-                                },\r\n-                                onChange: (e) => {\r\n-                                    console.log('asdas');\r\n-                                    if (getValues('mobile').length == 10) {\r\n-                                        Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n-                                    }\r\n-\r\n-                                    // Delay the execution of verifyEmail by 2 seconds\r\n-\r\n-                                },\r\n-\r\n-                            })}\r\n-                        /></Grid>\r\n-\r\n-                        <Grid item xs={2.8}>\r\n-                            <InputField\r\n-                                label={\"Token Number *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\"Token Number\"}\r\n-                                error={errors?.tokenNumber?.message}\r\n-                                register={register(\"tokenNumber\", {\r\n-                                    onChange: (e) => {\r\n-                                        console.log('asdas');\r\n-                                        if (getValues('tokenNumber')) {\r\n-                                            Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n-                                        }\r\n-\r\n-                                        // Delay the execution of verifyEmail by 2 seconds\r\n-\r\n-                                    },\r\n-                                })}\r\n-                            />\r\n-                        </Grid>\r\n-\r\n-                        <Grid item xs={2.8}>\r\n-                            <InputField\r\n-                                label={\"Customer Name *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\"Customer Name\"}\r\n-                                error={errors?.customerName?.message}\r\n-                                register={register(\"customerName\", {\r\n-                                    required: \"Please enter customer name.\",\r\n-                                })}\r\n-                            />\r\n-                        </Grid>\r\n-\r\n-                        <Grid item xs={2.8}>\r\n-                            <InputField\r\n-                                label={\"Reference *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\"Reference\"}\r\n-                                error={errors?.reference?.message}\r\n-                                register={register(\"reference\")}\r\n-                            />\r\n-                        </Grid>\r\n-\r\n-\r\n-\r\n-                        <Grid item xs={2.8}>\r\n-                            <InputField\r\n-                                label={\"Email *:\"}\r\n-                                size={\"small\"}\r\n-                                type={\"email\"}\r\n-                                placeholder={\"Email\"}\r\n-                                error={errors?.email?.message}\r\n-                                register={register(\"email\", {\r\n-                                    pattern: {\r\n-                                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n-                                        message: \"Please enter a valid email address.\",\r\n-                                    },\r\n-\r\n-                                })}\r\n-                            />\r\n-                        </Grid>\r\n-\r\n-                        <Grid container justifyContent={'flex-end'}>\r\n-                            <PrimaryButton\r\n-                                disabled={buttonDisabled}\r\n-                               bgcolor={'#bd9b4a'}\r\n-                                title=\"Update\"\r\n-                                type={'submit'}\r\n-\r\n-\r\n-                            />\r\n-                        </Grid>\r\n-                    </Grid>\r\n-                </Box>\r\n-            </Box>\r\n-                :\r\n-                <Box component={\"form\"} onSubmit={handleSubmit1(onSubmit1)}>\r\n-\r\n-\r\n-                    <Box sx={{ p: 3 }}>\r\n-\r\n-\r\n-                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n-                            <Grid item xs={2.8}><InputField\r\n-                                label={\"Mobile *:\"}\r\n-                                size={'small'}\r\n-                                type={'number'}\r\n-                                placeholder={\"Mobile\"}\r\n-                                error={errors1?.mobile?.message}\r\n-                                register={register1(\"mobile\", {\r\n-                                    required:\r\n-                                        \"Please enter your mobile.\",\r\n-                                    pattern: {\r\n-                                        value: /^05[0-9]{8}$/,\r\n-                                        message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n-                                    },\r\n-                                    onChange: (e) => {\r\n-                                        console.log('asdas');\r\n-                                        if (getValues1('mobile').length == 10) {\r\n-                                            Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n-                                        }\r\n-\r\n-                                        // Delay the execution of verifyEmail by 2 seconds\r\n-\r\n-                                    },\r\n-\r\n-                                })}\r\n-                            /></Grid>\r\n-\r\n-                            <Grid item xs={2.8}>\r\n-                                <InputField\r\n-                                    label={\"Token Number *:\"}\r\n-                                    size={\"small\"}\r\n-                                    placeholder={\"Token Number\"}\r\n-                                    error={errors1?.tokenNumber?.message}\r\n-                                    register={register1(\"tokenNumber\", {\r\n-                                        onChange: (e) => {\r\n-                                            console.log('asdas');\r\n-                                            if (getValues1('tokenNumber')) {\r\n-                                                Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n-                                            }\r\n-\r\n-                                            // Delay the execution of verifyEmail by 2 seconds\r\n-\r\n-                                        },\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-\r\n-                            <Grid item xs={2.8}>\r\n-                                <InputField\r\n-                                    label={\"Customer Name *:\"}\r\n-                                    size={\"small\"}\r\n-                                    placeholder={\"Customer Name\"}\r\n-                                    error={errors1?.customerName?.message}\r\n-                                    register={register1(\"customerName\", {\r\n-                                        required: \"Please enter customer name.\",\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-\r\n-                            <Grid item xs={2.8}>\r\n-                                <InputField\r\n-                                    label={\"Reference *:\"}\r\n-                                    size={\"small\"}\r\n-                                    placeholder={\"Reference\"}\r\n-                                    error={errors1?.reference?.message}\r\n-                                    register={register1(\"reference\")}\r\n-                                />\r\n-                            </Grid>\r\n-\r\n-\r\n-\r\n-                            <Grid item xs={2.8}>\r\n-                                <InputField\r\n-                                    label={\"Email *:\"}\r\n-                                    size={\"small\"}\r\n-                                    type={\"email\"}\r\n-                                    placeholder={\"Email\"}\r\n-                                    error={errors1?.email?.message}\r\n-                                    register={register1(\"email\", {\r\n-                                        pattern: {\r\n-                                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n-                                            message: \"Please enter a valid email address.\",\r\n-                                        },\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-\r\n-                            <Grid item xs={2.8} >\r\n-                                <SelectField\r\n-                                    size={'small'}\r\n-                                    label={'Customer *:'}\r\n-\r\n-                                    options={customers}\r\n-                                    selected={selectedCustomer}\r\n-                                    onSelect={(value) => {\r\n-                                        setSelectedCustomer(value)\r\n-                                        if (value?.name == 'Walk-In Customer') {\r\n-                                            setSubCustDisable(true)\r\n-                                            setValue1('customerName', '')\r\n-                                            setValue1('email', '')\r\n-                                            setValue1('mobile', '')\r\n-                                        }\r\n-                                        else {\r\n-                                            console.log(value);\r\n-\r\n-                                            setValue1('customerName', value?.name)\r\n-                                            setValue1('email', value?.email)\r\n-                                            setValue1('mobile', value?.mobile)\r\n-\r\n-                                            setSubCustDisable(false)\r\n-                                            Debounce2(() => getCompanies(value?.id));\r\n-                                        }\r\n-\r\n-                                    }}\r\n-                                    error={errors1?.customer?.message}\r\n-                                    register={register1(\"customer\", {\r\n-                                        required: 'Please select customer account.',\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-                            <Grid item xs={2.8} >\r\n-                                <SelectField\r\n-                                    size={'small'}\r\n-                                    label={'Company *:'}\r\n-                                    disabled={subCustDisable}\r\n-                                    options={companies}\r\n-                                    selected={selectedCompany}\r\n-                                    onSelect={(value) => {\r\n-                                        setSelectedCompany(value)\r\n-\r\n-\r\n-                                    }}\r\n-                                    error={errors1?.company?.message}\r\n-                                    register={register1(\"company\", {\r\n-                                        required: 'Please select company .',\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n-                            <Grid item xs={2.8} mt={4} >\r\n-                                <PrimaryButton\r\n-\r\n-                                    disabled={subCustDisable}\r\n-                                   bgcolor={'#bd9b4a'}\r\n-                                    onClick={() => setCompanyDialog(true)}\r\n-                                    title=\"Add Company\"\r\n-\r\n-\r\n-\r\n-                                />\r\n-                            </Grid>\r\n-                            <Grid container justifyContent={'flex-end'}>\r\n-                                <PrimaryButton\r\n-                                    disabled={buttonDisabled2}\r\n-                                   bgcolor={'#bd9b4a'}\r\n-                                    title=\"Update\"\r\n-                                    type={'submit'}\r\n-\r\n-\r\n-                                />\r\n-                            </Grid>\r\n-                        </Grid>\r\n-                    </Box>\r\n-                </Box>}\r\n-        </Box>\r\n-    )\r\n-}\r\n-\r\n-export default UpdateReception\r\n"
                },
                {
                    "date": 1744549180004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -626,9 +626,9 @@\n                                         required: 'Please select customer account.',\r\n                                     })}\r\n                                 />\r\n                             </Grid>\r\n-                            <Grid item xs={2.8} >\r\n+                            {/* <Grid item xs={2.8} >\r\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Company *:'}\r\n                                     disabled={subCustDisable}\r\n@@ -655,9 +655,9 @@\n \r\n \r\n \r\n                                 />\r\n-                            </Grid>\r\n+                            </Grid> */}\r\n                             <Grid container justifyContent={'flex-end'}>\r\n                                 <PrimaryButton\r\n                                     disabled={buttonDisabled2}\r\n                                    bgcolor={'#bd9b4a'}\r\n"
                },
                {
                    "date": 1744609403371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,15 +458,17 @@\n                             />\r\n                         </Grid>\r\n \r\n                         <Grid item xs={2.8}>\r\n-                            <InputField\r\n-                                label={\"Reference *:\"}\r\n-                                size={\"small\"}\r\n-                                placeholder={\"Reference\"}\r\n-                                error={errors?.reference?.message}\r\n-                                register={register(\"reference\")}\r\n-                            />\r\n+                           <InputField\r\n+                                                          label={\"Reference :\"}\r\n+                                                          size={\"small\"}\r\n+                                                          placeholder={\"Reference\"}\r\n+                                                          error={errors?.reference?.message}\r\n+                                                          register={register(\"reference\",{\r\n+                                                              required:false\r\n+                                                          })}\r\n+                                                      />\r\n                         </Grid>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1744609813677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     const onSubmit = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n-                id:id,\r\n+                id: id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n@@ -85,9 +85,9 @@\n     const onSubmit1 = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n-                id:id,\r\n+                id: id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n@@ -279,29 +279,29 @@\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n-           \r\n-           \r\n-                setValue('mobile', detail?.mobile)\r\n-                setValue('customerName', detail?.customer_name)\r\n-                setValue('tokenNumber', detail?.token_number)\r\n-                setValue('reference', detail?.reference)\r\n-                setValue('email', detail?.email)\r\n \r\n \r\n+            setValue('mobile', detail?.mobile)\r\n+            setValue('customerName', detail?.customer_name)\r\n+            setValue('tokenNumber', detail?.token_number)\r\n+            setValue('reference', detail?.reference)\r\n+            setValue('email', detail?.email)\r\n \r\n-            \r\n \r\n-        \r\n-                setValue1('mobile', detail?.mobile)\r\n-                setValue1('customerName', detail?.customer_name)\r\n-                setValue1('tokenNumber', detail?.token_number)\r\n-                setValue1('reference', detail?.reference)\r\n-                setValue1('email', detail?.email)\r\n-                getCompanies(detail?.customer_id)\r\n-            \r\n \r\n+\r\n+\r\n+\r\n+            setValue1('mobile', detail?.mobile)\r\n+            setValue1('customerName', detail?.customer_name)\r\n+            setValue1('tokenNumber', detail?.token_number)\r\n+            setValue1('reference', detail?.reference)\r\n+            setValue1('email', detail?.email)\r\n+            getCompanies(detail?.customer_id)\r\n+\r\n+\r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n@@ -314,23 +314,23 @@\n \r\n     useEffect(() => {\r\n         const company = companies.find(item => item?.id == newDetail?.company_id);\r\n         const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n-    \r\n+\r\n         // Only proceed if both are found\r\n         if (company && customer) {\r\n             console.log('Company:', company);\r\n             console.log('Customer:', customer);\r\n-    \r\n+\r\n             setValue('customer', customer);\r\n             setSelectedCustomer(customer);\r\n             setValue('company', company);\r\n             setSelectedCompany(company);\r\n         }\r\n     }, [customers, companies, newDetail]);\r\n-    \r\n \r\n \r\n+\r\n     return (\r\n         <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n             <SimpleDialog\r\n                 open={companyDialog}\r\n@@ -391,9 +391,9 @@\n             </SimpleDialog>\r\n             <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n                 <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n             </Box>\r\n-          \r\n+\r\n             {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n \r\n \r\n                 <Box sx={{ p: 3 }}>\r\n@@ -458,17 +458,17 @@\n                             />\r\n                         </Grid>\r\n \r\n                         <Grid item xs={2.8}>\r\n-                           <InputField\r\n-                                                          label={\"Reference :\"}\r\n-                                                          size={\"small\"}\r\n-                                                          placeholder={\"Reference\"}\r\n-                                                          error={errors?.reference?.message}\r\n-                                                          register={register(\"reference\",{\r\n-                                                              required:false\r\n-                                                          })}\r\n-                                                      />\r\n+                            <InputField\r\n+                                label={\"Reference :\"}\r\n+                                size={\"small\"}\r\n+                                placeholder={\"Reference\"}\r\n+                                error={errors?.reference?.message}\r\n+                                register={register(\"reference\", {\r\n+                                    required: false\r\n+                                })}\r\n+                            />\r\n                         </Grid>\r\n \r\n \r\n \r\n@@ -491,9 +491,9 @@\n \r\n                         <Grid container justifyContent={'flex-end'}>\r\n                             <PrimaryButton\r\n                                 disabled={buttonDisabled}\r\n-                               bgcolor={'#bd9b4a'}\r\n+                                bgcolor={'#bd9b4a'}\r\n                                 title=\"Update\"\r\n                                 type={'submit'}\r\n \r\n \r\n@@ -628,8 +628,26 @@\n                                         required: 'Please select customer account.',\r\n                                     })}\r\n                                 />\r\n                             </Grid>\r\n+                            <Grid item xs={2.8} >\r\n+                                <SelectField\r\n+                                    size={'small'}\r\n+                                    label={'Service Category *:'}\r\n+\r\n+                                    options={categories}\r\n+                                    selected={selectedCategory}\r\n+                                    onSelect={(value) => {\r\n+                                        setSelectedCategory(value)\r\n+\r\n+\r\n+                                    }}\r\n+                                    error={errors1?.service?.message}\r\n+                                    register={register1(\"service\", {\r\n+                                        required: 'Please select service.',\r\n+                                    })}\r\n+                                />\r\n+                            </Grid>\r\n                             {/* <Grid item xs={2.8} >\r\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Company *:'}\r\n@@ -661,9 +679,9 @@\n                             </Grid> */}\r\n                             <Grid container justifyContent={'flex-end'}>\r\n                                 <PrimaryButton\r\n                                     disabled={buttonDisabled2}\r\n-                                   bgcolor={'#bd9b4a'}\r\n+                                    bgcolor={'#bd9b4a'}\r\n                                     title=\"Update\"\r\n                                     type={'submit'}\r\n \r\n \r\n"
                },
                {
                    "date": 1744609827155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n     const [companies, setCompanies] = useState([])\r\n     const [companyDialog, setCompanyDialog] = useState(false)\r\n     const [newDetail, setNewDetail] = useState(null)\r\n     const [subCustDisable, setSubCustDisable] = useState(false)\r\n+    const [categories, setCategories] = useState([])\r\n+        const [selectedCategory, setSelectedCategory] = useState(null)\r\n     const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n     const {\r\n         register: register1,\r\n         handleSubmit: handleSubmit1,\r\n"
                },
                {
                    "date": 1744609846578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -307,8 +307,29 @@\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n     console.log(selectedCustomer, 'selectedCustomer');\r\n+     const getCategories = async (page, limit, filter) => {\r\n+         \r\n+        \r\n+            try {\r\n+            \r\n+              let params = {\r\n+                page: 1,\r\n+                limit: 1000,\r\n+              \r\n+        \r\n+              }\r\n+            \r\n+              const { data } = await CustomerServices.getCategoryList(params)\r\n+              setCategories(data?.categories)\r\n+             \r\n+             \r\n+            \r\n+            } catch (error) {\r\n+              showErrorToast(error)\r\n+            } \r\n+          }\r\n \r\n     useEffect(() => {\r\n         getData()\r\n         getCustomerQueue()\r\n"
                },
                {
                    "date": 1744609907949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n             let obj = {\r\n                 id: id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n+                service_category_id:selectedCategory?.id,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n                 token_number: formData?.tokenNumber,\r\n                 reference: formData?.reference,\r\n@@ -330,8 +331,9 @@\n             } \r\n           }\r\n \r\n     useEffect(() => {\r\n+        getCategories()\r\n         getData()\r\n         getCustomerQueue()\r\n     }, [])\r\n \r\n"
                },
                {
                    "date": 1744610030004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,11 +292,11 @@\n             setValue('email', detail?.email)\r\n \r\n \r\n \r\n+            selectedCategory(detail?.service_category_id)\r\n \r\n \r\n-\r\n             setValue1('mobile', detail?.mobile)\r\n             setValue1('customerName', detail?.customer_name)\r\n             setValue1('tokenNumber', detail?.token_number)\r\n             setValue1('reference', detail?.reference)\r\n"
                },
                {
                    "date": 1744610077025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,9 +292,9 @@\n             setValue('email', detail?.email)\r\n \r\n \r\n \r\n-            selectedCategory(detail?.service_category_id)\r\n+            setSelectedCategory(detail?.service_category_id)\r\n \r\n \r\n             setValue1('mobile', detail?.mobile)\r\n             setValue1('customerName', detail?.customer_name)\r\n"
                },
                {
                    "date": 1744610109497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -414,9 +414,9 @@\n                     </Grid>\r\n                 </Box>\r\n             </SimpleDialog>\r\n             <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n-                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n+                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Update Reception </Typography>\r\n             </Box>\r\n \r\n             {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n \r\n"
                },
                {
                    "date": 1744610240179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n \r\n             const { data } = await CustomerServices.getCustomerDetail(params);\r\n             let detail = data?.customer\r\n             console.log(detail);\r\n-\r\n+            setSelectedCustomer(detail)\r\n             setValue('customerName', detail?.name)\r\n             setValue('email', detail?.email)\r\n             setValue('mobile', detail?.mobile)\r\n \r\n"
                },
                {
                    "date": 1744610312043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,8 +339,9 @@\n \r\n     useEffect(() => {\r\n         const company = companies.find(item => item?.id == newDetail?.company_id);\r\n         const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n+console.log(customer);\r\n \r\n         // Only proceed if both are found\r\n         if (company && customer) {\r\n             console.log('Company:', company);\r\n"
                },
                {
                    "date": 1744610323922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     const [companyDialog, setCompanyDialog] = useState(false)\r\n     const [newDetail, setNewDetail] = useState(null)\r\n     const [subCustDisable, setSubCustDisable] = useState(false)\r\n     const [categories, setCategories] = useState([])\r\n-        const [selectedCategory, setSelectedCategory] = useState(null)\r\n+    const [selectedCategory, setSelectedCategory] = useState(null)\r\n     const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n     const {\r\n         register: register1,\r\n         handleSubmit: handleSubmit1,\r\n@@ -57,9 +57,9 @@\n             let obj = {\r\n                 id: id,\r\n                 is_company: customerType == 'individual' ? false : true,\r\n                 customer_name: formData?.customerName,\r\n-                service_category_id:selectedCategory?.id,\r\n+                service_category_id: selectedCategory?.id,\r\n                 customer_id: selectedCustomer?.id,\r\n                 mobile: formData?.mobile,\r\n                 token_number: formData?.tokenNumber,\r\n                 reference: formData?.reference,\r\n@@ -308,30 +308,30 @@\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n     console.log(selectedCustomer, 'selectedCustomer');\r\n-     const getCategories = async (page, limit, filter) => {\r\n-         \r\n-        \r\n-            try {\r\n-            \r\n-              let params = {\r\n+    const getCategories = async (page, limit, filter) => {\r\n+\r\n+\r\n+        try {\r\n+\r\n+            let params = {\r\n                 page: 1,\r\n                 limit: 1000,\r\n-              \r\n-        \r\n-              }\r\n-            \r\n-              const { data } = await CustomerServices.getCategoryList(params)\r\n-              setCategories(data?.categories)\r\n-             \r\n-             \r\n-            \r\n-            } catch (error) {\r\n-              showErrorToast(error)\r\n-            } \r\n-          }\r\n \r\n+\r\n+            }\r\n+\r\n+            const { data } = await CustomerServices.getCategoryList(params)\r\n+            setCategories(data?.categories)\r\n+\r\n+\r\n+\r\n+        } catch (error) {\r\n+            showErrorToast(error)\r\n+        }\r\n+    }\r\n+\r\n     useEffect(() => {\r\n         getCategories()\r\n         getData()\r\n         getCustomerQueue()\r\n@@ -339,16 +339,16 @@\n \r\n     useEffect(() => {\r\n         const company = companies.find(item => item?.id == newDetail?.company_id);\r\n         const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n-console.log(customer);\r\n+        console.log(customer);\r\n \r\n         // Only proceed if both are found\r\n         if (company && customer) {\r\n             console.log('Company:', company);\r\n             console.log('Customer:', customer);\r\n \r\n-            setValue('customer', customer);\r\n+            setValue1('customer', customer);\r\n             setSelectedCustomer(customer);\r\n             setValue('company', company);\r\n             setSelectedCompany(company);\r\n         }\r\n"
                },
                {
                    "date": 1744610509090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,10 +282,10 @@\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n+setSelectedCustomer(detail)\r\n \r\n-\r\n             setValue('mobile', detail?.mobile)\r\n             setValue('customerName', detail?.customer_name)\r\n             setValue('tokenNumber', detail?.token_number)\r\n             setValue('reference', detail?.reference)\r\n"
                },
                {
                    "date": 1744610595586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,10 +282,11 @@\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n-setSelectedCustomer(detail)\r\n+            setSelectedCustomer(detail)\r\n \r\n+            setValue1('customer', detail);\r\n             setValue('mobile', detail?.mobile)\r\n             setValue('customerName', detail?.customer_name)\r\n             setValue('tokenNumber', detail?.token_number)\r\n             setValue('reference', detail?.reference)\r\n"
                },
                {
                    "date": 1744610893406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,8 +282,9 @@\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n+            let updatedObj = {...detail,name:detail?.customer_name}\r\n             setSelectedCustomer(detail)\r\n \r\n             setValue1('customer', detail);\r\n             setValue('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744610899725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,11 +283,11 @@\n             let detail = data?.token\r\n             console.log(detail);\r\n             setNewDetail(detail)\r\n             let updatedObj = {...detail,name:detail?.customer_name}\r\n-            setSelectedCustomer(detail)\r\n+            setSelectedCustomer(updatedObj)\r\n \r\n-            setValue1('customer', detail);\r\n+            setValue1('customer', updatedObj);\r\n             setValue('mobile', detail?.mobile)\r\n             setValue('customerName', detail?.customer_name)\r\n             setValue('tokenNumber', detail?.token_number)\r\n             setValue('reference', detail?.reference)\r\n"
                },
                {
                    "date": 1744611228881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n             setValue('email', detail?.email)\r\n \r\n \r\n \r\n-            setSelectedCategory(detail?.service_category_id)\r\n+            setSelectedCategory(detail?.service_category)\r\n \r\n \r\n             setValue1('mobile', detail?.mobile)\r\n             setValue1('customerName', detail?.customer_name)\r\n"
                },
                {
                    "date": 1744611283977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -619,8 +619,9 @@\n                                         pattern: {\r\n                                             value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                             message: \"Please enter a valid email address.\",\r\n                                         },\r\n+                                        required:'please enter email'\r\n                                     })}\r\n                                 />\r\n                             </Grid>\r\n \r\n"
                },
                {
                    "date": 1744611336470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,8 +296,9 @@\n \r\n \r\n             setSelectedCategory(detail?.service_category)\r\n \r\n+            setValue1('service', detail?.mobile)\r\n \r\n             setValue1('mobile', detail?.mobile)\r\n             setValue1('customerName', detail?.customer_name)\r\n             setValue1('tokenNumber', detail?.token_number)\r\n"
                }
            ],
            "date": 1744508449996,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Box, FormControlLabel, Grid, Radio, RadioGroup, Typography } from \"@mui/material\"\r\nimport { PrimaryButton } from \"components/Buttons\"\r\nimport Colors from \"assets/Style/Colors\"\r\nimport InputField from \"components/Input\"\r\nimport SelectField from \"components/Select\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Debounce2 } from \"utils\"\r\nimport CustomerServices from \"services/Customer\"\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\nimport SimpleDialog from \"components/Dialog/SimpleDialog\"\r\nimport { ErrorToaster } from \"components/Toaster\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nfunction UpdateReception() {\r\n    const navigate=useNavigate()\r\n    const [customerType, setCustomerType] = useState(\"individual\")\r\n    const [buttonDisabled, setButtonDisabled] = useState(true)\r\n    const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n    const [customers, setCustomers] = useState([])\r\n    const [selectedCompany, setSelectedCompany] = useState(null)\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n    const [companies, setCompanies] = useState([])\r\n    const [companyDialog, setCompanyDialog] = useState(false)\r\n    const [subCustDisable, setSubCustDisable] = useState(false)\r\n    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n    const {\r\n        register: register1,\r\n        handleSubmit: handleSubmit1,\r\n        setValue: setValue1,\r\n        getValues: getValues1,\r\n        control,\r\n        watch,\r\n        formState: { errors: errors1 },\r\n\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        setValue: setValue2,\r\n        getValues: getValues2,\r\n\r\n\r\n        formState: { errors: errors2 },\r\n\r\n    } = useForm();\r\n \r\n    const onSubmit = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                is_company: customerType == 'individual' ? false : true,\r\n                customer_name: formData?.customerName,\r\n                mobile:formData?.mobile,\r\n                token_number:formData?.tokenNumber,\r\n                reference:formData?.reference,\r\n                company_id:selectedCompany?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.CreateReception(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                navigate('/reception-list')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    const onSubmit1 = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                is_company: customerType == 'individual' ? false : true,\r\n                customer_name: formData?.customerName,\r\n                mobile:formData?.mobile,\r\n                token_number:formData?.tokenNumber,\r\n                reference:formData?.reference,\r\n                company_id:selectedCompany?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.CreateReception(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                navigate('/reception-list')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    // *For Get Customer Queue\r\n    const getCustomerQueue = async (page, limit, filter) => {\r\n\r\n\r\n        try {\r\n\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n\r\n\r\n            }\r\n\r\n            const { data } = await CustomerServices.getCustomerQueue(params)\r\n            setCustomers(data?.rows)\r\n\r\n        } catch (error) {\r\n            showErrorToast(error)\r\n        }\r\n    }\r\n\r\n    const getCustomerDetail = async (phone) => {\r\n        try {\r\n            let params = {\r\n                mobile: phone\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCustomerDetail(params);\r\n            let detail = data?.customer\r\n            console.log(detail);\r\n\r\n            setValue('customerName', detail?.name)\r\n            setValue('email', detail?.email)\r\n            setValue('mobile', detail?.mobile)\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getCustomerDetail2 = async (phone) => {\r\n        try {\r\n            let params = {\r\n                mobile: phone\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCustomerDetail(params);\r\n            let detail = data?.customer\r\n            console.log(detail);\r\n            setSelectedCustomer(detail)\r\n            setValue1('customer', detail)\r\n            setValue1('customerName', detail?.name)\r\n            setValue1('email', detail?.email)\r\n            setValue1('mobile', detail?.mobile)\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n    const getCompanies = async (id) => {\r\n        try {\r\n            let params = {\r\n                customer_id: id ? id : selectedCustomer?.id\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCompanies(params);\r\n            setCompanies(data?.companies)\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getTokenValidation = async (value) => {\r\n        try {\r\n            let params = {\r\n                validate: true,\r\n                token_number: value\r\n            };\r\n\r\n            const { data } = await CustomerServices.getReceptionDetail(params);\r\n            console.log(data);\r\n            if (data?.token) {\r\n                setButtonDisabled(true)\r\n                showErrorToast('Token Number Already Exist')\r\n            }\r\n            else {\r\n                setButtonDisabled(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getTokenValidation2 = async (value) => {\r\n        try {\r\n            let params = {\r\n                validate: true,\r\n                token_number: value\r\n            };\r\n\r\n            const { data } = await CustomerServices.getReceptionDetail(params);\r\n            console.log(data);\r\n            if (data?.token) {\r\n                setButtonDisabled2(true)\r\n                showErrorToast('Token Number Already Exist')\r\n            }\r\n            else {\r\n                setButtonDisabled2(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n    const CreateCompany = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                code: formData?.code,\r\n                name: formData?.name,\r\n                customer_id:selectedCustomer?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.addCompany(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                getCompanies();\r\n                setCompanyDialog(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getCustomerQueue()\r\n    }, [])\r\n\r\n    return (\r\n        <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n            <SimpleDialog\r\n                open={companyDialog}\r\n                onClose={() => setCompanyDialog(false)}\r\n                title={\"Change Status?\"}\r\n            >\r\n                <Box component=\"form\" onSubmit={handleSubmit2(CreateCompany)}>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid container sx={{ justifyContent: \"center\" }}>\r\n                        <Grid item xs={12}>\r\n                            <InputField\r\n                                label={\"Name *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\" Name\"}\r\n                                error={errors2?.name?.message}\r\n                                register={register2(\"name\", {\r\n                                    required: \"Please enter  name.\",\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <InputField\r\n                                label={\"Code *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\" Code\"}\r\n                                error={errors2?.code?.message}\r\n                                register={register2(\"code\", {\r\n                                    required: \"Please enter  code.\",\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n                            <Grid\r\n                                item\r\n                                xs={6}\r\n                                sm={6}\r\n                                sx={{\r\n                                    mt: 2,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    gap: \"25px\",\r\n                                }}\r\n                            >\r\n                                <PrimaryButton\r\n                                    bgcolor={Colors.primary}\r\n                                    title=\"Yes,Confirm\"\r\n                                    type=\"submit\"\r\n                                />\r\n                                <PrimaryButton\r\n                                    onClick={() => setCompanyDialog(false)}\r\n                                    bgcolor={\"#FF1F25\"}\r\n                                    title=\"No,Cancel\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </SimpleDialog>\r\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Create Reception</Typography>\r\n            </Box>\r\n            <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                <FormControlLabel\r\n                    value=\"individual\"\r\n                    control={<Radio checked={customerType === \"individual\"} />}\r\n                    label=\"Individual\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"company\"\r\n                    control={<Radio checked={customerType === \"company\"} />}\r\n                    label=\"Company\"\r\n                />\r\n            </RadioGroup>\r\n            {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n                <Box sx={{ p: 3 }}>\r\n\r\n\r\n                    <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                        <Grid item xs={2.8}><InputField\r\n                            label={\"Mobile *:\"}\r\n                            size={'small'}\r\n                            type={'number'}\r\n                            placeholder={\"Mobile\"}\r\n                            error={errors?.mobile?.message}\r\n                            register={register(\"mobile\", {\r\n                                required:\r\n                                    \"Please enter your mobile.\",\r\n                                pattern: {\r\n                                    value: /^05[0-9]{8}$/,\r\n                                    message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                },\r\n                                onChange: (e) => {\r\n                                    console.log('asdas');\r\n                                    if (getValues('mobile').length == 10) {\r\n                                        Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n                                    }\r\n\r\n                                    // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                },\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Token Number *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Token Number\"}\r\n                                error={errors?.tokenNumber?.message}\r\n                                register={register(\"tokenNumber\", {\r\n                                    onChange: (e) => {\r\n                                        console.log('asdas');\r\n                                        if (getValues('tokenNumber')) {\r\n                                            Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n                                        }\r\n\r\n                                        // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Customer Name *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Customer Name\"}\r\n                                error={errors?.customerName?.message}\r\n                                register={register(\"customerName\", {\r\n                                    required: \"Please enter customer name.\",\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Reference *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Reference\"}\r\n                                error={errors?.reference?.message}\r\n                                register={register(\"reference\")}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Email *:\"}\r\n                                size={\"small\"}\r\n                                type={\"email\"}\r\n                                placeholder={\"Email\"}\r\n                                error={errors?.email?.message}\r\n                                register={register(\"email\", {\r\n                                    pattern: {\r\n                                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                        message: \"Please enter a valid email address.\",\r\n                                    },\r\n\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container justifyContent={'flex-end'}>\r\n                            <PrimaryButton\r\n                                disabled={buttonDisabled}\r\n                               bgcolor={'#bd9b4a'}\r\n                                title=\"Create\"\r\n                                type={'submit'}\r\n\r\n\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n                :\r\n                <Box component={\"form\"} onSubmit={handleSubmit1(onSubmit1)}>\r\n\r\n\r\n                    <Box sx={{ p: 3 }}>\r\n\r\n\r\n                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                            <Grid item xs={2.8}><InputField\r\n                                label={\"Mobile *:\"}\r\n                                size={'small'}\r\n                                type={'number'}\r\n                                placeholder={\"Mobile\"}\r\n                                error={errors1?.mobile?.message}\r\n                                register={register1(\"mobile\", {\r\n                                    required:\r\n                                        \"Please enter your mobile.\",\r\n                                    pattern: {\r\n                                        value: /^05[0-9]{8}$/,\r\n                                        message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                    },\r\n                                    onChange: (e) => {\r\n                                        console.log('asdas');\r\n                                        if (getValues1('mobile').length == 10) {\r\n                                            Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n                                        }\r\n\r\n                                        // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                    },\r\n\r\n                                })}\r\n                            /></Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Token Number *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Token Number\"}\r\n                                    error={errors1?.tokenNumber?.message}\r\n                                    register={register1(\"tokenNumber\", {\r\n                                        onChange: (e) => {\r\n                                            console.log('asdas');\r\n                                            if (getValues1('tokenNumber')) {\r\n                                                Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n                                            }\r\n\r\n                                            // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Customer Name *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Customer Name\"}\r\n                                    error={errors1?.customerName?.message}\r\n                                    register={register1(\"customerName\", {\r\n                                        required: \"Please enter customer name.\",\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Reference *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Reference\"}\r\n                                    error={errors1?.reference?.message}\r\n                                    register={register1(\"reference\")}\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Email *:\"}\r\n                                    size={\"small\"}\r\n                                    type={\"email\"}\r\n                                    placeholder={\"Email\"}\r\n                                    error={errors1?.email?.message}\r\n                                    register={register1(\"email\", {\r\n                                        pattern: {\r\n                                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                            message: \"Please enter a valid email address.\",\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8} >\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Customer *:'}\r\n\r\n                                    options={customers}\r\n                                    selected={selectedCustomer}\r\n                                    onSelect={(value) => {\r\n                                        setSelectedCustomer(value)\r\n                                        if (value?.name == 'Walk-In Customer') {\r\n                                            setSubCustDisable(true)\r\n                                            setValue1('customerName', '')\r\n                                            setValue1('email', '')\r\n                                            setValue1('mobile', '')\r\n                                        }\r\n                                        else {\r\n                                            console.log(value);\r\n\r\n                                            setValue1('customerName', value?.name)\r\n                                            setValue1('email', value?.email)\r\n                                            setValue1('mobile', value?.mobile)\r\n\r\n                                            setSubCustDisable(false)\r\n                                            Debounce2(() => getCompanies(value?.id));\r\n                                        }\r\n\r\n                                    }}\r\n                                    error={errors1?.customer?.message}\r\n                                    register={register1(\"customer\", {\r\n                                        required: 'Please select customer account.',\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2.8} >\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Company *:'}\r\n                                    disabled={subCustDisable}\r\n                                    options={companies}\r\n                                    selected={selectedCompany}\r\n                                    onSelect={(value) => {\r\n                                        setSelectedCompany(value)\r\n\r\n\r\n                                    }}\r\n                                    error={errors1?.company?.message}\r\n                                    register={register1(\"company\", {\r\n                                        required: 'Please select company .',\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2.8} mt={4} >\r\n                                <PrimaryButton\r\n\r\n                                    disabled={subCustDisable}\r\n                                   bgcolor={'#bd9b4a'}\r\n                                    onClick={() => setCompanyDialog(true)}\r\n                                    title=\"Add Company\"\r\n\r\n\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justifyContent={'flex-end'}>\r\n                                <PrimaryButton\r\n                                    disabled={buttonDisabled2}\r\n                                   bgcolor={'#bd9b4a'}\r\n                                    title=\"Create\"\r\n                                    type={'submit'}\r\n\r\n\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UpdateReception\r\n"
        }
    ]
}