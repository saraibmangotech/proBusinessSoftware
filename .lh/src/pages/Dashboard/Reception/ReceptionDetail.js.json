{
    "sourceFile": "src/pages/Dashboard/Reception/ReceptionDetail.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1744510809918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744510870269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -496,18 +496,9 @@\n                                 })}\r\n                             />\r\n                         </Grid>\r\n \r\n-                        <Grid container justifyContent={'flex-end'}>\r\n-                            <PrimaryButton\r\n-                                disabled={buttonDisabled}\r\n-                               bgcolor={'#bd9b4a'}\r\n-                                title=\"Update\"\r\n-                                type={'submit'}\r\n-\r\n-\r\n-                            />\r\n-                        </Grid>\r\n+                      \r\n                     </Grid>\r\n                 </Box>\r\n             </Box>\r\n                 :\r\n"
                },
                {
                    "date": 1744510890624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,8 +411,9 @@\n \r\n                     <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                         <Grid item xs={2.8}><InputField\r\n                             label={\"Mobile *:\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             type={'number'}\r\n                             placeholder={\"Mobile\"}\r\n                             error={errors?.mobile?.message}\r\n@@ -657,18 +658,9 @@\n \r\n \r\n                                 />\r\n                             </Grid>\r\n-                            <Grid container justifyContent={'flex-end'}>\r\n-                                <PrimaryButton\r\n-                                    disabled={buttonDisabled2}\r\n-                                   bgcolor={'#bd9b4a'}\r\n-                                    title=\"Update\"\r\n-                                    type={'submit'}\r\n-\r\n-\r\n-                                />\r\n-                            </Grid>\r\n+                         \r\n                         </Grid>\r\n                     </Box>\r\n                 </Box>}\r\n         </Box>\r\n"
                },
                {
                    "date": 1744510896788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,8 +440,9 @@\n                         <Grid item xs={2.8}>\r\n                             <InputField\r\n                                 label={\"Token Number *:\"}\r\n                                 size={\"small\"}\r\n+                                disabled={true}\r\n                                 placeholder={\"Token Number\"}\r\n                                 error={errors?.tokenNumber?.message}\r\n                                 register={register(\"tokenNumber\", {\r\n                                     onChange: (e) => {\r\n"
                },
                {
                    "date": 1744510904941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,8 +461,9 @@\n                         <Grid item xs={2.8}>\r\n                             <InputField\r\n                                 label={\"Customer Name *:\"}\r\n                                 size={\"small\"}\r\n+                                disabled={true}\r\n                                 placeholder={\"Customer Name\"}\r\n                                 error={errors?.customerName?.message}\r\n                                 register={register(\"customerName\", {\r\n                                     required: \"Please enter customer name.\",\r\n@@ -473,8 +474,9 @@\n                         <Grid item xs={2.8}>\r\n                             <InputField\r\n                                 label={\"Reference *:\"}\r\n                                 size={\"small\"}\r\n+                                disabled={true}\r\n                                 placeholder={\"Reference\"}\r\n                                 error={errors?.reference?.message}\r\n                                 register={register(\"reference\")}\r\n                             />\r\n@@ -485,8 +487,9 @@\n                         <Grid item xs={2.8}>\r\n                             <InputField\r\n                                 label={\"Email *:\"}\r\n                                 size={\"small\"}\r\n+                                disabled={true}\r\n                                 type={\"email\"}\r\n                                 placeholder={\"Email\"}\r\n                                 error={errors?.email?.message}\r\n                                 register={register(\"email\", {\r\n"
                },
                {
                    "date": 1744510911271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,8 +517,9 @@\n                             <Grid item xs={2.8}><InputField\r\n                                 label={\"Mobile *:\"}\r\n                                 size={'small'}\r\n                                 type={'number'}\r\n+                                disabled={true}\r\n                                 placeholder={\"Mobile\"}\r\n                                 error={errors1?.mobile?.message}\r\n                                 register={register1(\"mobile\", {\r\n                                     required:\r\n@@ -543,8 +544,9 @@\n                             <Grid item xs={2.8}>\r\n                                 <InputField\r\n                                     label={\"Token Number *:\"}\r\n                                     size={\"small\"}\r\n+                                    disabled={true}\r\n                                     placeholder={\"Token Number\"}\r\n                                     error={errors1?.tokenNumber?.message}\r\n                                     register={register1(\"tokenNumber\", {\r\n                                         onChange: (e) => {\r\n"
                },
                {
                    "date": 1744510918076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -565,8 +565,9 @@\n                             <Grid item xs={2.8}>\r\n                                 <InputField\r\n                                     label={\"Customer Name *:\"}\r\n                                     size={\"small\"}\r\n+                                    disabled={true}\r\n                                     placeholder={\"Customer Name\"}\r\n                                     error={errors1?.customerName?.message}\r\n                                     register={register1(\"customerName\", {\r\n                                         required: \"Please enter customer name.\",\r\n@@ -577,8 +578,9 @@\n                             <Grid item xs={2.8}>\r\n                                 <InputField\r\n                                     label={\"Reference *:\"}\r\n                                     size={\"small\"}\r\n+                                    disabled={true}\r\n                                     placeholder={\"Reference\"}\r\n                                     error={errors1?.reference?.message}\r\n                                     register={register1(\"reference\")}\r\n                                 />\r\n@@ -589,8 +591,9 @@\n                             <Grid item xs={2.8}>\r\n                                 <InputField\r\n                                     label={\"Email *:\"}\r\n                                     size={\"small\"}\r\n+                                    disabled={true}\r\n                                     type={\"email\"}\r\n                                     placeholder={\"Email\"}\r\n                                     error={errors1?.email?.message}\r\n                                     register={register1(\"email\", {\r\n"
                },
                {
                    "date": 1744510923458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -608,9 +608,9 @@\n                             <Grid item xs={2.8} >\r\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Customer *:'}\r\n-\r\n+                                    disabled={true}\r\n                                     options={customers}\r\n                                     selected={selectedCustomer}\r\n                                     onSelect={(value) => {\r\n                                         setSelectedCustomer(value)\r\n@@ -641,8 +641,9 @@\n                             <Grid item xs={2.8} >\r\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Company *:'}\r\n+                                    v\r\n                                     disabled={subCustDisable}\r\n                                     options={companies}\r\n                                     selected={selectedCompany}\r\n                                     onSelect={(value) => {\r\n"
                },
                {
                    "date": 1744510938409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -641,9 +641,9 @@\n                             <Grid item xs={2.8} >\r\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Company *:'}\r\n-                                    v\r\n+                                    disabled={true}\r\n                                     disabled={subCustDisable}\r\n                                     options={companies}\r\n                                     selected={selectedCompany}\r\n                                     onSelect={(value) => {\r\n@@ -656,20 +656,8 @@\n                                         required: 'Please select company .',\r\n                                     })}\r\n                                 />\r\n                             </Grid>\r\n-                            <Grid item xs={2.8} mt={4} >\r\n-                                <PrimaryButton\r\n-\r\n-                                    disabled={subCustDisable}\r\n-                                   bgcolor={'#bd9b4a'}\r\n-                                    onClick={() => setCompanyDialog(true)}\r\n-                                    title=\"Add Company\"\r\n-\r\n-\r\n-\r\n-                                />\r\n-                            </Grid>\r\n                          \r\n                         </Grid>\r\n                     </Box>\r\n                 </Box>}\r\n"
                },
                {
                    "date": 1744511149806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -642,9 +642,9 @@\n                                 <SelectField\r\n                                     size={'small'}\r\n                                     label={'Company *:'}\r\n                                     disabled={true}\r\n-                                    disabled={subCustDisable}\r\n+                                    \r\n                                     options={companies}\r\n                                     selected={selectedCompany}\r\n                                     onSelect={(value) => {\r\n                                         setSelectedCompany(value)\r\n"
                },
                {
                    "date": 1744911779628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -637,27 +637,9 @@\n                                         required: 'Please select customer account.',\r\n                                     })}\r\n                                 />\r\n                             </Grid>\r\n-                            <Grid item xs={2.8} >\r\n-                                <SelectField\r\n-                                    size={'small'}\r\n-                                    label={'Company *:'}\r\n-                                    disabled={true}\r\n-                                    \r\n-                                    options={companies}\r\n-                                    selected={selectedCompany}\r\n-                                    onSelect={(value) => {\r\n-                                        setSelectedCompany(value)\r\n-\r\n-\r\n-                                    }}\r\n-                                    error={errors1?.company?.message}\r\n-                                    register={register1(\"company\", {\r\n-                                        required: 'Please select company .',\r\n-                                    })}\r\n-                                />\r\n-                            </Grid>\r\n+                            \r\n                          \r\n                         </Grid>\r\n                     </Box>\r\n                 </Box>}\r\n"
                },
                {
                    "date": 1744911795534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,8 +321,10 @@\n             console.log('Customer:', customer);\r\n     \r\n             setValue('customer', customer);\r\n             setSelectedCustomer(customer);\r\n+            setSelectedCustomer(customer);\r\n+            setSelectedCustomer(customer);\r\n             setValue('company', company);\r\n             setSelectedCompany(company);\r\n         }\r\n     }, [customers, companies, newDetail]);\r\n@@ -388,11 +390,11 @@\n                     </Grid>\r\n                 </Box>\r\n             </SimpleDialog>\r\n             <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n-                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Update Reception</Typography>\r\n+                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}> Reception Detail</Typography>\r\n             </Box>\r\n-            <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n+            {/* <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                 <FormControlLabel\r\n                     value=\"individual\"\r\n                     control={<Radio disabled checked={customerType === \"individual\"} />}\r\n                     label=\"Individual\"\r\n@@ -401,9 +403,9 @@\n                     value=\"company\"\r\n                     control={<Radio disabled checked={customerType === \"company\"} />}\r\n                     label=\"Company\"\r\n                 />\r\n-            </RadioGroup>\r\n+            </RadioGroup> */}\r\n             {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n \r\n \r\n                 <Box sx={{ p: 3 }}>\r\n"
                },
                {
                    "date": 1744912055942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,11 +427,11 @@\n                                     message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                 },\r\n                                 onChange: (e) => {\r\n                                     console.log('asdas');\r\n-                                    if (getValues('mobile').length == 10) {\r\n-                                        Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n-                                    }\r\n+                                    // if (getValues('mobile').length == 10) {\r\n+                                    //     Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n+                                    // }\r\n \r\n                                     // Delay the execution of verifyEmail by 2 seconds\r\n \r\n                                 },\r\n"
                },
                {
                    "date": 1744912070965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -448,11 +448,11 @@\n                                 error={errors?.tokenNumber?.message}\r\n                                 register={register(\"tokenNumber\", {\r\n                                     onChange: (e) => {\r\n                                         console.log('asdas');\r\n-                                        if (getValues('tokenNumber')) {\r\n-                                            Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n-                                        }\r\n+                                        // if (getValues('tokenNumber')) {\r\n+                                        //     Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n+                                        // }\r\n \r\n                                         // Delay the execution of verifyEmail by 2 seconds\r\n \r\n                                     },\r\n@@ -531,11 +531,11 @@\n                                         message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                     },\r\n                                     onChange: (e) => {\r\n                                         console.log('asdas');\r\n-                                        if (getValues1('mobile').length == 10) {\r\n-                                            Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n-                                        }\r\n+                                        // if (getValues1('mobile').length == 10) {\r\n+                                        //     Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n+                                        // }\r\n \r\n                                         // Delay the execution of verifyEmail by 2 seconds\r\n \r\n                                     },\r\n"
                },
                {
                    "date": 1744912082349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -552,11 +552,11 @@\n                                     error={errors1?.tokenNumber?.message}\r\n                                     register={register1(\"tokenNumber\", {\r\n                                         onChange: (e) => {\r\n                                             console.log('asdas');\r\n-                                            if (getValues1('tokenNumber')) {\r\n-                                                Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n-                                            }\r\n+                                            // if (getValues1('tokenNumber')) {\r\n+                                            //     Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n+                                            // }\r\n \r\n                                             // Delay the execution of verifyEmail by 2 seconds\r\n \r\n                                         },\r\n@@ -614,25 +614,25 @@\n                                     disabled={true}\r\n                                     options={customers}\r\n                                     selected={selectedCustomer}\r\n                                     onSelect={(value) => {\r\n-                                        setSelectedCustomer(value)\r\n-                                        if (value?.name == 'Walk-In Customer') {\r\n-                                            setSubCustDisable(true)\r\n-                                            setValue1('customerName', '')\r\n-                                            setValue1('email', '')\r\n-                                            setValue1('mobile', '')\r\n-                                        }\r\n-                                        else {\r\n-                                            console.log(value);\r\n+                                        // setSelectedCustomer(value)\r\n+                                        // if (value?.name == 'Walk-In Customer') {\r\n+                                        //     setSubCustDisable(true)\r\n+                                        //     setValue1('customerName', '')\r\n+                                        //     setValue1('email', '')\r\n+                                        //     setValue1('mobile', '')\r\n+                                        // }\r\n+                                        // else {\r\n+                                        //     console.log(value);\r\n \r\n-                                            setValue1('customerName', value?.name)\r\n-                                            setValue1('email', value?.email)\r\n-                                            setValue1('mobile', value?.mobile)\r\n+                                        //     setValue1('customerName', value?.name)\r\n+                                        //     setValue1('email', value?.email)\r\n+                                        //     setValue1('mobile', value?.mobile)\r\n \r\n-                                            setSubCustDisable(false)\r\n-                                            Debounce2(() => getCompanies(value?.id));\r\n-                                        }\r\n+                                        //     setSubCustDisable(false)\r\n+                                        //     Debounce2(() => getCompanies(value?.id));\r\n+                                        // }\r\n \r\n                                     }}\r\n                                     error={errors1?.customer?.message}\r\n                                     register={register1(\"customer\", {\r\n"
                },
                {
                    "date": 1744912165582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,9 +296,9 @@\n                 setValue1('customerName', detail?.customer_name)\r\n                 setValue1('tokenNumber', detail?.token_number)\r\n                 setValue1('reference', detail?.reference)\r\n                 setValue1('email', detail?.email)\r\n-                getCompanies(detail?.customer_id)\r\n+                // getCompanies(detail?.customer_id)\r\n             }\r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744912299190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,14 @@\n             };\r\n \r\n             const { data } = await CustomerServices.getReceptionDetail(params);\r\n             let detail = data?.token\r\n-            console.log(detail);\r\n+            let newDetail = {\r\n+                name: detail?.customer_name, // renaming customer_name to name\r\n+                id: detail?.id,      // example: renaming company_id to id\r\n+                location: detail?.address    // example: renaming address to location\r\n+              };\r\n+            setSelectedCompany()\r\n             setNewDetail(detail)\r\n             setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n             if (!detail?.is_company) {\r\n                 setValue('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744912305572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,9 @@\n                 name: detail?.customer_name, // renaming customer_name to name\r\n                 id: detail?.id,      // example: renaming company_id to id\r\n                 location: detail?.address    // example: renaming address to location\r\n               };\r\n-            setSelectedCompany()\r\n+            setSelectedCustomer()\r\n             setNewDetail(detail)\r\n             setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n             if (!detail?.is_company) {\r\n                 setValue('mobile', detail?.mobile)\r\n"
                },
                {
                    "date": 1744912322667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,9 @@\n                 name: detail?.customer_name, // renaming customer_name to name\r\n                 id: detail?.id,      // example: renaming company_id to id\r\n                 location: detail?.address    // example: renaming address to location\r\n               };\r\n-            setSelectedCustomer()\r\n+            setSelectedCustomer(newDetail)\r\n             setNewDetail(detail)\r\n             setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n             if (!detail?.is_company) {\r\n                 setValue('mobile', detail?.mobile)\r\n@@ -324,12 +324,9 @@\n         if (company && customer) {\r\n             console.log('Company:', company);\r\n             console.log('Customer:', customer);\r\n     \r\n-            setValue('customer', customer);\r\n-            setSelectedCustomer(customer);\r\n-            setSelectedCustomer(customer);\r\n-            setSelectedCustomer(customer);\r\n+            \r\n             setValue('company', company);\r\n             setSelectedCompany(company);\r\n         }\r\n     }, [customers, companies, newDetail]);\r\n"
                }
            ],
            "date": 1744510809918,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Box, FormControlLabel, Grid, Radio, RadioGroup, Typography } from \"@mui/material\"\r\nimport { PrimaryButton } from \"components/Buttons\"\r\nimport Colors from \"assets/Style/Colors\"\r\nimport InputField from \"components/Input\"\r\nimport SelectField from \"components/Select\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Debounce2 } from \"utils\"\r\nimport CustomerServices from \"services/Customer\"\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\nimport SimpleDialog from \"components/Dialog/SimpleDialog\"\r\nimport { ErrorToaster } from \"components/Toaster\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nfunction ReceptionDetail() {\r\n    const navigate = useNavigate()\r\n    const { id } = useParams()\r\n    const [customerType, setCustomerType] = useState(\"individual\")\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [buttonDisabled2, setButtonDisabled2] = useState(true)\r\n    const [customers, setCustomers] = useState([])\r\n    const [selectedCompany, setSelectedCompany] = useState(null)\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n    const [companies, setCompanies] = useState([])\r\n    const [companyDialog, setCompanyDialog] = useState(false)\r\n    const [newDetail, setNewDetail] = useState(null)\r\n    const [subCustDisable, setSubCustDisable] = useState(false)\r\n    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n    const {\r\n        register: register1,\r\n        handleSubmit: handleSubmit1,\r\n        setValue: setValue1,\r\n        getValues: getValues1,\r\n        control,\r\n        watch,\r\n        formState: { errors: errors1 },\r\n\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        setValue: setValue2,\r\n        getValues: getValues2,\r\n\r\n\r\n        formState: { errors: errors2 },\r\n\r\n    } = useForm();\r\n\r\n    const onSubmit = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                id:id,\r\n                is_company: customerType == 'individual' ? false : true,\r\n                customer_name: formData?.customerName,\r\n                customer_id: selectedCustomer?.id,\r\n                mobile: formData?.mobile,\r\n                token_number: formData?.tokenNumber,\r\n                reference: formData?.reference,\r\n                company_id: selectedCompany?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.ReceptionDetail(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                navigate('/reception-list')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    const onSubmit1 = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                is_company: customerType == 'individual' ? false : true,\r\n                customer_name: formData?.customerName,\r\n                customer_id: selectedCustomer?.id,\r\n                mobile: formData?.mobile,\r\n                token_number: formData?.tokenNumber,\r\n                reference: formData?.reference,\r\n                company_id: selectedCompany?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.ReceptionDetail(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                navigate('/reception-list')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    // *For Get Customer Queue\r\n    const getCustomerQueue = async (page, limit, filter) => {\r\n\r\n\r\n        try {\r\n\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n\r\n\r\n            }\r\n\r\n            const { data } = await CustomerServices.getCustomerQueue(params)\r\n            setCustomers(data?.rows)\r\n\r\n        } catch (error) {\r\n            showErrorToast(error)\r\n        }\r\n    }\r\n\r\n    const getCustomerDetail = async (phone) => {\r\n        try {\r\n            let params = {\r\n                mobile: phone\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCustomerDetail(params);\r\n            let detail = data?.customer\r\n            console.log(detail);\r\n\r\n            setValue('customerName', detail?.name)\r\n            setValue('email', detail?.email)\r\n            setValue('mobile', detail?.mobile)\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getCustomerDetail2 = async (phone) => {\r\n        try {\r\n            let params = {\r\n                mobile: phone\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCustomerDetail(params);\r\n            let detail = data?.customer\r\n            console.log(detail);\r\n            setSelectedCustomer(detail)\r\n            setValue1('customer', detail)\r\n            setValue1('customerName', detail?.name)\r\n            setValue1('email', detail?.email)\r\n            setValue1('mobile', detail?.mobile)\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n    const getCompanies = async (id) => {\r\n        try {\r\n            let params = {\r\n                customer_id: id ? id : selectedCustomer?.id\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCompanies(params);\r\n            setCompanies(data?.companies)\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getTokenValidation = async (value) => {\r\n        try {\r\n            let params = {\r\n                validate: true,\r\n                token_number: value\r\n            };\r\n\r\n            const { data } = await CustomerServices.getReceptionDetail(params);\r\n            console.log(data);\r\n            if (data?.token) {\r\n                setButtonDisabled(true)\r\n                showErrorToast('Token Number Already Exist')\r\n            }\r\n            else {\r\n                setButtonDisabled(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getTokenValidation2 = async (value) => {\r\n        try {\r\n            let params = {\r\n                validate: true,\r\n                token_number: value\r\n            };\r\n\r\n            const { data } = await CustomerServices.getReceptionDetail(params);\r\n            console.log(data);\r\n            if (data?.token) {\r\n                setButtonDisabled2(true)\r\n                showErrorToast('Token Number Already Exist')\r\n            }\r\n            else {\r\n                setButtonDisabled2(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n    const CreateCompany = async (formData) => {\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                code: formData?.code,\r\n                name: formData?.name,\r\n                customer_id: selectedCustomer?.id\r\n\r\n\r\n            };\r\n            const promise = CustomerServices.addCompany(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving...',\r\n                'Added Successfully',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                getCompanies();\r\n                setCompanyDialog(false)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    const getData = async () => {\r\n        try {\r\n            let params = {\r\n                reception_id: id\r\n            };\r\n\r\n            const { data } = await CustomerServices.getReceptionDetail(params);\r\n            let detail = data?.token\r\n            console.log(detail);\r\n            setNewDetail(detail)\r\n            setCustomerType(!detail?.is_company ? 'individual' : 'company')\r\n            if (!detail?.is_company) {\r\n                setValue('mobile', detail?.mobile)\r\n                setValue('customerName', detail?.customer_name)\r\n                setValue('tokenNumber', detail?.token_number)\r\n                setValue('reference', detail?.reference)\r\n                setValue('email', detail?.email)\r\n\r\n\r\n\r\n            }\r\n\r\n            else {\r\n                setValue1('mobile', detail?.mobile)\r\n                setValue1('customerName', detail?.customer_name)\r\n                setValue1('tokenNumber', detail?.token_number)\r\n                setValue1('reference', detail?.reference)\r\n                setValue1('email', detail?.email)\r\n                getCompanies(detail?.customer_id)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    console.log(selectedCustomer, 'selectedCustomer');\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        getCustomerQueue()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const company = companies.find(item => item?.id == newDetail?.company_id);\r\n        const customer = customers.find(item => item?.id == newDetail?.customer_id);\r\n    \r\n        // Only proceed if both are found\r\n        if (company && customer) {\r\n            console.log('Company:', company);\r\n            console.log('Customer:', customer);\r\n    \r\n            setValue('customer', customer);\r\n            setSelectedCustomer(customer);\r\n            setValue('company', company);\r\n            setSelectedCompany(company);\r\n        }\r\n    }, [customers, companies, newDetail]);\r\n    \r\n\r\n\r\n    return (\r\n        <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n            <SimpleDialog\r\n                open={companyDialog}\r\n                onClose={() => setCompanyDialog(false)}\r\n                title={\"Change Status?\"}\r\n            >\r\n                <Box component=\"form\" onSubmit={handleSubmit2(CreateCompany)}>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid container sx={{ justifyContent: \"center\" }}>\r\n                            <Grid item xs={12}>\r\n                                <InputField\r\n                                    label={\"Name *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\" Name\"}\r\n                                    error={errors2?.name?.message}\r\n                                    register={register2(\"name\", {\r\n                                        required: \"Please enter  name.\",\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <InputField\r\n                                    label={\"Code *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\" Code\"}\r\n                                    error={errors2?.code?.message}\r\n                                    register={register2(\"code\", {\r\n                                        required: \"Please enter  code.\",\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                xs={6}\r\n                                sm={6}\r\n                                sx={{\r\n                                    mt: 2,\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    gap: \"25px\",\r\n                                }}\r\n                            >\r\n                                <PrimaryButton\r\n                                    bgcolor={Colors.primary}\r\n                                    title=\"Yes,Confirm\"\r\n                                    type=\"submit\"\r\n                                />\r\n                                <PrimaryButton\r\n                                    onClick={() => setCompanyDialog(false)}\r\n                                    bgcolor={\"#FF1F25\"}\r\n                                    title=\"No,Cancel\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </SimpleDialog>\r\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", gap: \"10px\", p: 3, alignItems: \"flex-end\" }}>\r\n                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Update Reception</Typography>\r\n            </Box>\r\n            <RadioGroup row value={customerType} onChange={(e) => setCustomerType(e.target.value)} sx={{ mb: 3, p: 3 }}>\r\n                <FormControlLabel\r\n                    value=\"individual\"\r\n                    control={<Radio disabled checked={customerType === \"individual\"} />}\r\n                    label=\"Individual\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"company\"\r\n                    control={<Radio disabled checked={customerType === \"company\"} />}\r\n                    label=\"Company\"\r\n                />\r\n            </RadioGroup>\r\n            {customerType == 'individual' ? <Box component={\"form\"} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n                <Box sx={{ p: 3 }}>\r\n\r\n\r\n                    <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                        <Grid item xs={2.8}><InputField\r\n                            label={\"Mobile *:\"}\r\n                            size={'small'}\r\n                            type={'number'}\r\n                            placeholder={\"Mobile\"}\r\n                            error={errors?.mobile?.message}\r\n                            register={register(\"mobile\", {\r\n                                required:\r\n                                    \"Please enter your mobile.\",\r\n                                pattern: {\r\n                                    value: /^05[0-9]{8}$/,\r\n                                    message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                },\r\n                                onChange: (e) => {\r\n                                    console.log('asdas');\r\n                                    if (getValues('mobile').length == 10) {\r\n                                        Debounce2(() => getCustomerDetail(getValues('mobile')));\r\n                                    }\r\n\r\n                                    // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                },\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Token Number *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Token Number\"}\r\n                                error={errors?.tokenNumber?.message}\r\n                                register={register(\"tokenNumber\", {\r\n                                    onChange: (e) => {\r\n                                        console.log('asdas');\r\n                                        if (getValues('tokenNumber')) {\r\n                                            Debounce2(() => getTokenValidation(getValues('tokenNumber')));\r\n                                        }\r\n\r\n                                        // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                    },\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Customer Name *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Customer Name\"}\r\n                                error={errors?.customerName?.message}\r\n                                register={register(\"customerName\", {\r\n                                    required: \"Please enter customer name.\",\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Reference *:\"}\r\n                                size={\"small\"}\r\n                                placeholder={\"Reference\"}\r\n                                error={errors?.reference?.message}\r\n                                register={register(\"reference\")}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid item xs={2.8}>\r\n                            <InputField\r\n                                label={\"Email *:\"}\r\n                                size={\"small\"}\r\n                                type={\"email\"}\r\n                                placeholder={\"Email\"}\r\n                                error={errors?.email?.message}\r\n                                register={register(\"email\", {\r\n                                    pattern: {\r\n                                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                        message: \"Please enter a valid email address.\",\r\n                                    },\r\n\r\n                                })}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container justifyContent={'flex-end'}>\r\n                            <PrimaryButton\r\n                                disabled={buttonDisabled}\r\n                               bgcolor={'#bd9b4a'}\r\n                                title=\"Update\"\r\n                                type={'submit'}\r\n\r\n\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n                :\r\n                <Box component={\"form\"} onSubmit={handleSubmit1(onSubmit1)}>\r\n\r\n\r\n                    <Box sx={{ p: 3 }}>\r\n\r\n\r\n                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                            <Grid item xs={2.8}><InputField\r\n                                label={\"Mobile *:\"}\r\n                                size={'small'}\r\n                                type={'number'}\r\n                                placeholder={\"Mobile\"}\r\n                                error={errors1?.mobile?.message}\r\n                                register={register1(\"mobile\", {\r\n                                    required:\r\n                                        \"Please enter your mobile.\",\r\n                                    pattern: {\r\n                                        value: /^05[0-9]{8}$/,\r\n                                        message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                    },\r\n                                    onChange: (e) => {\r\n                                        console.log('asdas');\r\n                                        if (getValues1('mobile').length == 10) {\r\n                                            Debounce2(() => getCustomerDetail2(getValues1('mobile')));\r\n                                        }\r\n\r\n                                        // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                    },\r\n\r\n                                })}\r\n                            /></Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Token Number *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Token Number\"}\r\n                                    error={errors1?.tokenNumber?.message}\r\n                                    register={register1(\"tokenNumber\", {\r\n                                        onChange: (e) => {\r\n                                            console.log('asdas');\r\n                                            if (getValues1('tokenNumber')) {\r\n                                                Debounce2(() => getTokenValidation2(getValues1('tokenNumber')));\r\n                                            }\r\n\r\n                                            // Delay the execution of verifyEmail by 2 seconds\r\n\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Customer Name *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Customer Name\"}\r\n                                    error={errors1?.customerName?.message}\r\n                                    register={register1(\"customerName\", {\r\n                                        required: \"Please enter customer name.\",\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Reference *:\"}\r\n                                    size={\"small\"}\r\n                                    placeholder={\"Reference\"}\r\n                                    error={errors1?.reference?.message}\r\n                                    register={register1(\"reference\")}\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n\r\n                            <Grid item xs={2.8}>\r\n                                <InputField\r\n                                    label={\"Email *:\"}\r\n                                    size={\"small\"}\r\n                                    type={\"email\"}\r\n                                    placeholder={\"Email\"}\r\n                                    error={errors1?.email?.message}\r\n                                    register={register1(\"email\", {\r\n                                        pattern: {\r\n                                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                            message: \"Please enter a valid email address.\",\r\n                                        },\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={2.8} >\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Customer *:'}\r\n\r\n                                    options={customers}\r\n                                    selected={selectedCustomer}\r\n                                    onSelect={(value) => {\r\n                                        setSelectedCustomer(value)\r\n                                        if (value?.name == 'Walk-In Customer') {\r\n                                            setSubCustDisable(true)\r\n                                            setValue1('customerName', '')\r\n                                            setValue1('email', '')\r\n                                            setValue1('mobile', '')\r\n                                        }\r\n                                        else {\r\n                                            console.log(value);\r\n\r\n                                            setValue1('customerName', value?.name)\r\n                                            setValue1('email', value?.email)\r\n                                            setValue1('mobile', value?.mobile)\r\n\r\n                                            setSubCustDisable(false)\r\n                                            Debounce2(() => getCompanies(value?.id));\r\n                                        }\r\n\r\n                                    }}\r\n                                    error={errors1?.customer?.message}\r\n                                    register={register1(\"customer\", {\r\n                                        required: 'Please select customer account.',\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2.8} >\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Company *:'}\r\n                                    disabled={subCustDisable}\r\n                                    options={companies}\r\n                                    selected={selectedCompany}\r\n                                    onSelect={(value) => {\r\n                                        setSelectedCompany(value)\r\n\r\n\r\n                                    }}\r\n                                    error={errors1?.company?.message}\r\n                                    register={register1(\"company\", {\r\n                                        required: 'Please select company .',\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2.8} mt={4} >\r\n                                <PrimaryButton\r\n\r\n                                    disabled={subCustDisable}\r\n                                   bgcolor={'#bd9b4a'}\r\n                                    onClick={() => setCompanyDialog(true)}\r\n                                    title=\"Add Company\"\r\n\r\n\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid container justifyContent={'flex-end'}>\r\n                                <PrimaryButton\r\n                                    disabled={buttonDisabled2}\r\n                                   bgcolor={'#bd9b4a'}\r\n                                    title=\"Update\"\r\n                                    type={'submit'}\r\n\r\n\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ReceptionDetail\r\n"
        }
    ]
}