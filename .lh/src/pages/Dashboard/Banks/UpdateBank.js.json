{
    "sourceFile": "src/pages/Dashboard/Banks/UpdateBank.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1744618655757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744618723845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,10 +161,28 @@\n     }\r\n   };\r\n \r\n \r\n+  const getData = async () => {\r\n+    try {\r\n+      let params = {\r\n+        customer_id: id\r\n+      };\r\n+  \r\n+      const { data } = await CustomerServices.getCustomerDetail(params);\r\n+      let detail = data?.customer\r\n+      console.log(detail);\r\n+  \r\n+  \r\n+  \r\n+    } catch (error) {\r\n+      console.error(\"Error fetching location:\", error);\r\n+    }\r\n+  };\r\n+  useEffect(() => {\r\n+    getData()\r\n+  }, [])\r\n \r\n-\r\n   \r\n \r\n   \r\n \r\n"
                },
                {
                    "date": 1744618740186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n import { useAuth } from 'context/UseContext';\r\n import DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n \r\n \r\n-function CreateBank() {\r\n+function UpdateBank() {\r\n   const theme = useTheme();\r\n   const { user } = useAuth()\r\n   const navigate = useNavigate()\r\n   const [formChange, setFormChange] = useState(false)\r\n@@ -141,9 +141,9 @@\n       \r\n       \r\n \r\n       };\r\n-      const promise = CustomerServices.CreateBank(obj);\r\n+      const promise = CustomerServices.UpdateBank(obj);\r\n \r\n       showPromiseToast(\r\n         promise,\r\n         'Saving...',\r\n@@ -167,9 +167,9 @@\n       let params = {\r\n         customer_id: id\r\n       };\r\n   \r\n-      const { data } = await CustomerServices.getCustomerDetail(params);\r\n+      const { data } = await CustomerServices.getBankDetail(params);\r\n       let detail = data?.customer\r\n       console.log(detail);\r\n   \r\n   \r\n@@ -283,5 +283,5 @@\n     </>\r\n   );\r\n }\r\n \r\n-export default CreateBank;\n\\ No newline at end of file\n+export default UpdateBank;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744618757668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import CustomerServices from 'services/Customer';\r\n import CustomerService from '../DashboardPages/CustomerService';\r\n import { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\n import moment from 'moment';\r\n-import { Link, useNavigate } from 'react-router-dom';\r\n+import { Link, useNavigate, useParams } from 'react-router-dom';\r\n import SystemServices from 'services/System';\r\n import UploadFileSingle from 'components/UploadFileSingle';\r\n import { Images } from 'assets';\r\n import { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\n@@ -39,8 +39,9 @@\n   const { user } = useAuth()\r\n   const navigate = useNavigate()\r\n   const [formChange, setFormChange] = useState(false)\r\n   const [submit, setSubmit] = useState(false)\r\n+  const {id}=useParams()\r\n \r\n   const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n   const {\r\n     register: register1,\r\n@@ -164,9 +165,9 @@\n \r\n   const getData = async () => {\r\n     try {\r\n       let params = {\r\n-        customer_id: id\r\n+        id: id\r\n       };\r\n   \r\n       const { data } = await CustomerServices.getBankDetail(params);\r\n       let detail = data?.customer\r\n"
                },
                {
                    "date": 1744618777631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,10 +169,10 @@\n         id: id\r\n       };\r\n   \r\n       const { data } = await CustomerServices.getBankDetail(params);\r\n-      let detail = data?.customer\r\n-      console.log(detail);\r\n+ \r\n+      console.log(data);\r\n   \r\n   \r\n   \r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1744619147314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,10 @@\n       };\r\n   \r\n       const { data } = await CustomerServices.getBankDetail(params);\r\n  \r\n-      console.log(data);\r\n+      console.log(data?.bank);\r\n+\r\n   \r\n   \r\n   \r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1744619166645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,256 +34,256 @@\n import DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n \r\n \r\n function UpdateBank() {\r\n-  const theme = useTheme();\r\n-  const { user } = useAuth()\r\n-  const navigate = useNavigate()\r\n-  const [formChange, setFormChange] = useState(false)\r\n-  const [submit, setSubmit] = useState(false)\r\n-  const {id}=useParams()\r\n+    const theme = useTheme();\r\n+    const { user } = useAuth()\r\n+    const navigate = useNavigate()\r\n+    const [formChange, setFormChange] = useState(false)\r\n+    const [submit, setSubmit] = useState(false)\r\n+    const { id } = useParams()\r\n \r\n-  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n-  const {\r\n-    register: register1,\r\n-    handleSubmit: handleSubmit1,\r\n-    setValue: setValue1,\r\n-    getValues: getValues1,\r\n-    watch,\r\n-    formState: { errors: errors1 },\r\n+    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n+    const {\r\n+        register: register1,\r\n+        handleSubmit: handleSubmit1,\r\n+        setValue: setValue1,\r\n+        getValues: getValues1,\r\n+        watch,\r\n+        formState: { errors: errors1 },\r\n \r\n-  } = useForm();\r\n+    } = useForm();\r\n \r\n-  // Watch all form data\r\n-console.log(watch());\r\n+    // Watch all form data\r\n+    console.log(watch());\r\n \r\n \r\n-  const isFormDataEmpty = (data) => {\r\n-    // Check if all form fields are empty\r\n-    return Object.values(data).every((value) => {\r\n-      // If the value is an object (like companyLogo), check if it's empty\r\n-      if (typeof value === 'object' && value !== null) {\r\n-        return Object.keys(value).length === 0;\r\n-      }\r\n-      // Otherwise, check if the value is an empty string\r\n-      return value === \"\";\r\n-    });\r\n-  };\r\n+    const isFormDataEmpty = (data) => {\r\n+        // Check if all form fields are empty\r\n+        return Object.values(data).every((value) => {\r\n+            // If the value is an object (like companyLogo), check if it's empty\r\n+            if (typeof value === 'object' && value !== null) {\r\n+                return Object.keys(value).length === 0;\r\n+            }\r\n+            // Otherwise, check if the value is an empty string\r\n+            return value === \"\";\r\n+        });\r\n+    };\r\n \r\n- \r\n \r\n \r\n \r\n \r\n-  const allowFilesType = [\r\n-    'image/png',\r\n-    'image/jpg',\r\n-    'image/jpeg',\r\n-    'application/pdf',\r\n-    'application/vnd.ms-excel',\r\n-    'application/msword',\r\n-    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n-  ];\r\n-  const allowFilesType2 = [\r\n-    'image/png',\r\n-    'image/jpg',\r\n-    'image/jpeg',\r\n \r\n-  ];\r\n-  const [guarantors, setGuarantors] = useState([])\r\n-  const [activeStep, setActiveStep] = React.useState(1);\r\n+    const allowFilesType = [\r\n+        'image/png',\r\n+        'image/jpg',\r\n+        'image/jpeg',\r\n+        'application/pdf',\r\n+        'application/vnd.ms-excel',\r\n+        'application/msword',\r\n+        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n+    ];\r\n+    const allowFilesType2 = [\r\n+        'image/png',\r\n+        'image/jpg',\r\n+        'image/jpeg',\r\n \r\n-  // *For Deposit Slip\r\n-  const [progress, setProgress] = useState(0);\r\n-  const [uploadedSize, setUploadedSize] = useState(0);\r\n-  const [slipDetail, setSlipDetail] = useState([]);\r\n+    ];\r\n+    const [guarantors, setGuarantors] = useState([])\r\n+    const [activeStep, setActiveStep] = React.useState(1);\r\n \r\n+    // *For Deposit Slip\r\n+    const [progress, setProgress] = useState(0);\r\n+    const [uploadedSize, setUploadedSize] = useState(0);\r\n+    const [slipDetail, setSlipDetail] = useState([]);\r\n \r\n-  const [emailVerify, setEmailVerify] = useState(false)\r\n-  \r\n \r\n-  const [center, setCenter] = useState(null)\r\n-  const [status, setStatus] = useState(null)\r\n+    const [emailVerify, setEmailVerify] = useState(false)\r\n \r\n-  // *For Stepper Forms Data\r\n-  const [stepFormData, setStepFormData] = useState()\r\n \r\n-  const [selectedType, setSelectedType] = useState(null)\r\n-  const [date, setDate] = useState(null)\r\n-  const [balanceType, setBalanceType] = useState(null)\r\n+    const [center, setCenter] = useState(null)\r\n+    const [status, setStatus] = useState(null)\r\n \r\n-  //documents array\r\n+    // *For Stepper Forms Data\r\n+    const [stepFormData, setStepFormData] = useState()\r\n \r\n+    const [selectedType, setSelectedType] = useState(null)\r\n+    const [date, setDate] = useState(null)\r\n+    const [balanceType, setBalanceType] = useState(null)\r\n \r\n+    //documents array\r\n \r\n \r\n \r\n \r\n-  const handleNext = () => {\r\n-    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n-  };\r\n \r\n \r\n+    const handleNext = () => {\r\n+        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n+    };\r\n \r\n \r\n- \r\n \r\n \r\n \r\n \r\n \r\n-  const submitForm1 = async (formData) => {\r\n-    console.log(formData);\r\n-    try {\r\n-      let obj = {\r\n-        name: formData?.name,\r\n-        account_title: formData?.title,\r\n-        account_number: formData?.accountnumber,\r\n-        account_ibn: formData?.ibn,\r\n-      \r\n-      \r\n \r\n-      };\r\n-      const promise = CustomerServices.UpdateBank(obj);\r\n \r\n-      showPromiseToast(\r\n-        promise,\r\n-        'Saving...',\r\n-        'Added Successfully',\r\n-        'Something Went Wrong'\r\n-      );\r\n-      const response = await promise;\r\n-      if (response?.responseCode === 200) {\r\n-        navigate(\"/bank-list\");\r\n-      }\r\n \r\n-      \r\n-    } catch (error) {\r\n-      ErrorToaster(error);\r\n-    }\r\n-  };\r\n+    const submitForm1 = async (formData) => {\r\n+        console.log(formData);\r\n+        try {\r\n+            let obj = {\r\n+                name: formData?.name,\r\n+                account_title: formData?.title,\r\n+                account_number: formData?.accountnumber,\r\n+                account_ibn: formData?.ibn,\r\n \r\n \r\n-  const getData = async () => {\r\n-    try {\r\n-      let params = {\r\n-        id: id\r\n-      };\r\n-  \r\n-      const { data } = await CustomerServices.getBankDetail(params);\r\n- \r\n-      console.log(data?.bank);\r\n \r\n-  \r\n-  \r\n-  \r\n-    } catch (error) {\r\n-      console.error(\"Error fetching location:\", error);\r\n-    }\r\n-  };\r\n-  useEffect(() => {\r\n-    getData()\r\n-  }, [])\r\n+            };\r\n+            const promise = CustomerServices.UpdateBank(obj);\r\n \r\n-  \r\n+            showPromiseToast(\r\n+                promise,\r\n+                'Saving...',\r\n+                'Added Successfully',\r\n+                'Something Went Wrong'\r\n+            );\r\n+            const response = await promise;\r\n+            if (response?.responseCode === 200) {\r\n+                navigate(\"/bank-list\");\r\n+            }\r\n \r\n-  \r\n \r\n+        } catch (error) {\r\n+            ErrorToaster(error);\r\n+        }\r\n+    };\r\n \r\n \r\n-  return (\r\n-    <>\r\n-      <Box sx={{ width: \"100%\" }}>\r\n+    const getData = async () => {\r\n+        try {\r\n+            let params = {\r\n+                id: id\r\n+            };\r\n \r\n+            const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n-      </Box>\r\n-      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n-        {<>\r\n+            console.log(data?.bank);\r\n+            setValue('name',data?.bank?.name)\r\n \r\n-          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n-            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n-              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n \r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+    };\r\n+    useEffect(() => {\r\n+        getData()\r\n+    }, [])\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+    return (\r\n+        <>\r\n+            <Box sx={{ width: \"100%\" }}>\r\n+\r\n+\r\n             </Box>\r\n+            <Box m={3} sx={{ backgroundColor: 'white', borderRadius: \"12px\" }} >\r\n+                {<>\r\n \r\n-            <Box sx={{ p: 3 }}>\r\n+                    <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n+                        <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n+                            <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n \r\n+                        </Box>\r\n \r\n-              <Grid container sx={{ gap: '5px 25px' }}>\r\n-                <Grid item xs={2.8}>\r\n-                  <InputField\r\n-                    label={\" Name :*\"}\r\n-                    size={'small'}\r\n-                    placeholder={\" Name\"}\r\n-                    error={errors1?.name?.message}\r\n-                    register={register1(\"name\", {\r\n-                      required:\r\n-                        \"Please enter your name.\"\r\n+                        <Box sx={{ p: 3 }}>\r\n \r\n-                    })}\r\n-                  /></Grid>\r\n-             \r\n-              \r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\" Account Title :*\"}\r\n-                  size={'small'}\r\n-                  placeholder={\" Account Title\"}\r\n-                  error={errors1?.title?.message}\r\n-                  register={register1(\"title\", {\r\n-                    required:\r\n-                      \"Please enter your  title.\"\r\n \r\n-                  })}\r\n-                /></Grid>\r\n+                            <Grid container sx={{ gap: '5px 25px' }}>\r\n+                                <Grid item xs={2.8}>\r\n+                                    <InputField\r\n+                                        label={\" Name :*\"}\r\n+                                        size={'small'}\r\n+                                        placeholder={\" Name\"}\r\n+                                        error={errors1?.name?.message}\r\n+                                        register={register1(\"name\", {\r\n+                                            required:\r\n+                                                \"Please enter your name.\"\r\n \r\n+                                        })}\r\n+                                    /></Grid>\r\n \r\n \r\n+                                <Grid item xs={2.8}><InputField\r\n+                                    label={\" Account Title :*\"}\r\n+                                    size={'small'}\r\n+                                    placeholder={\" Account Title\"}\r\n+                                    error={errors1?.title?.message}\r\n+                                    register={register1(\"title\", {\r\n+                                        required:\r\n+                                            \"Please enter your  title.\"\r\n \r\n+                                    })}\r\n+                                /></Grid>\r\n \r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Account Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Account Number\"}\r\n-                  error={errors1?.accountnumber?.message}\r\n-                  register={register1(\"accountnumber\", {\r\n-                    required:\r\n-                      \"Please enter your accountnumber.\"\r\n \r\n-                  })}\r\n-                /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Account IBN Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Account IBN Number\"}\r\n-                  error={errors1?.ibn?.message}\r\n-                  register={register1(\"ibn\", {\r\n-                    required:\r\n-                      \"Please enter your ibn.\"\r\n \r\n-                  })}\r\n-                /></Grid>\r\n-              \r\n-          \r\n-                \r\n \r\n-               \r\n-                <Grid  container justifyContent={'flex-end'}>\r\n-                <PrimaryButton \r\n-                 bgcolor={'#bd9b4a'}\r\n-                  title=\"Submit\"\r\n-                  type={'submit'}\r\n-                  \r\n \r\n-                />\r\n-                </Grid>\r\n-              </Grid>\r\n+                                <Grid item xs={2.8}><InputField\r\n+                                    label={\"Account Number :*\"}\r\n+                                    size={'small'}\r\n+                                    type={'number'}\r\n+                                    placeholder={\"Account Number\"}\r\n+                                    error={errors1?.accountnumber?.message}\r\n+                                    register={register1(\"accountnumber\", {\r\n+                                        required:\r\n+                                            \"Please enter your accountnumber.\"\r\n+\r\n+                                    })}\r\n+                                /></Grid>\r\n+                                <Grid item xs={2.8}><InputField\r\n+                                    label={\"Account IBN Number :*\"}\r\n+                                    size={'small'}\r\n+                                    type={'number'}\r\n+                                    placeholder={\"Account IBN Number\"}\r\n+                                    error={errors1?.ibn?.message}\r\n+                                    register={register1(\"ibn\", {\r\n+                                        required:\r\n+                                            \"Please enter your ibn.\"\r\n+\r\n+                                    })}\r\n+                                /></Grid>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                                <Grid container justifyContent={'flex-end'}>\r\n+                                    <PrimaryButton\r\n+                                        bgcolor={'#bd9b4a'}\r\n+                                        title=\"Submit\"\r\n+                                        type={'submit'}\r\n+\r\n+\r\n+                                    />\r\n+                                </Grid>\r\n+                            </Grid>\r\n+                        </Box>\r\n+                    </Box></>}\r\n+\r\n             </Box>\r\n-          </Box></>}\r\n-\r\n-      </Box>\r\n-    </>\r\n-  );\r\n+        </>\r\n+    );\r\n }\r\n \r\n export default UpdateBank;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744619172454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,13 @@\n             const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n             console.log(data?.bank);\r\n             setValue('name',data?.bank?.name)\r\n+            setValue('name',data?.bank?.name)\r\n+            setValue('name',data?.bank?.name)\r\n+            setValue('name',data?.bank?.name)\r\n \r\n \r\n-\r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1744619185124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,11 @@\n             const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n             console.log(data?.bank);\r\n             setValue('name',data?.bank?.name)\r\n+            setValue('title',data?.bank?.title)\r\n+            setValue('accountnumber',data?.bank?.name)\r\n             setValue('name',data?.bank?.name)\r\n-            setValue('name',data?.bank?.name)\r\n-            setValue('name',data?.bank?.name)\r\n \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744619191312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n \r\n             console.log(data?.bank);\r\n             setValue('name',data?.bank?.name)\r\n             setValue('title',data?.bank?.title)\r\n-            setValue('accountnumber',data?.bank?.name)\r\n+            setValue('accountnumber',data?.bank?.account_number)\r\n             setValue('name',data?.bank?.name)\r\n \r\n \r\n         } catch (error) {\r\n"
                },
                {
                    "date": 1744619199530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n             console.log(data?.bank);\r\n             setValue('name',data?.bank?.name)\r\n             setValue('title',data?.bank?.title)\r\n             setValue('accountnumber',data?.bank?.account_number)\r\n-            setValue('name',data?.bank?.name)\r\n+            setValue('ibn',data?.bank?.account_ibn)\r\n \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744619213164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n \r\n             const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n             console.log(data?.bank);\r\n-            setValue('name',data?.bank?.name)\r\n+            setValue1('name',data?.bank?.name)\r\n             setValue('title',data?.bank?.title)\r\n             setValue('accountnumber',data?.bank?.account_number)\r\n             setValue('ibn',data?.bank?.account_ibn)\r\n \r\n"
                },
                {
                    "date": 1744619219057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n             const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n             console.log(data?.bank);\r\n             setValue1('name',data?.bank?.name)\r\n-            setValue('title',data?.bank?.title)\r\n+            setValue1('title',data?.bank?.title)\r\n             setValue('accountnumber',data?.bank?.account_number)\r\n             setValue('ibn',data?.bank?.account_ibn)\r\n \r\n \r\n"
                },
                {
                    "date": 1744619258227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,11 @@\n             const { data } = await CustomerServices.getBankDetail(params);\r\n \r\n             console.log(data?.bank);\r\n             setValue1('name',data?.bank?.name)\r\n-            setValue1('title',data?.bank?.title)\r\n-            setValue('accountnumber',data?.bank?.account_number)\r\n-            setValue('ibn',data?.bank?.account_ibn)\r\n+            setValue1('title',data?.bank?.account_title)\r\n+            setValue1('accountnumber',data?.bank?.account_number)\r\n+            setValue1('ibn',data?.bank?.account_ibn)\r\n \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744619284222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,9 @@\n     const submitForm1 = async (formData) => {\r\n         console.log(formData);\r\n         try {\r\n             let obj = {\r\n+                id:id,\r\n                 name: formData?.name,\r\n                 account_title: formData?.title,\r\n                 account_number: formData?.accountnumber,\r\n                 account_ibn: formData?.ibn,\r\n"
                },
                {
                    "date": 1744619294751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n                 {<>\r\n \r\n                     <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n                         <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n-                            <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n+                            <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Update Bank</Typography>\r\n \r\n                         </Box>\r\n \r\n                         <Box sx={{ p: 3 }}>\r\n"
                },
                {
                    "date": 1744619300621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n \r\n                                 <Grid container justifyContent={'flex-end'}>\r\n                                     <PrimaryButton\r\n                                         bgcolor={'#bd9b4a'}\r\n-                                        title=\"Submit\"\r\n+                                        title=\"Update\"\r\n                                         type={'submit'}\r\n \r\n \r\n                                     />\r\n"
                }
            ],
            "date": 1744618655757,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { Box, Checkbox, Container, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material';\r\nimport RegisterContainer from 'container/Register'\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport Colors from 'assets/Style/Colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport UploadFile from 'components/UploadFile';\r\nimport InputField from 'components/Input';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { ErrorToaster } from 'components/Toaster';\r\nimport { FormControl } from '@mui/base';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport SelectField from 'components/Select';\r\nimport { CleanTypes, Debounce2, getFileSize, handleDownload } from 'utils';\r\nimport instance from 'config/axios';\r\nimport routes from 'services/System/routes';\r\nimport CustomerServices from 'services/Customer';\r\nimport CustomerService from '../DashboardPages/CustomerService';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport moment from 'moment';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport SystemServices from 'services/System';\r\nimport UploadFileSingle from 'components/UploadFileSingle';\r\nimport { Images } from 'assets';\r\nimport { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\nimport { addMonths } from 'date-fns';\r\nimport { useAuth } from 'context/UseContext';\r\nimport DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n\r\n\r\nfunction CreateBank() {\r\n  const theme = useTheme();\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [formChange, setFormChange] = useState(false)\r\n  const [submit, setSubmit] = useState(false)\r\n\r\n  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n  const {\r\n    register: register1,\r\n    handleSubmit: handleSubmit1,\r\n    setValue: setValue1,\r\n    getValues: getValues1,\r\n    watch,\r\n    formState: { errors: errors1 },\r\n\r\n  } = useForm();\r\n\r\n  // Watch all form data\r\nconsole.log(watch());\r\n\r\n\r\n  const isFormDataEmpty = (data) => {\r\n    // Check if all form fields are empty\r\n    return Object.values(data).every((value) => {\r\n      // If the value is an object (like companyLogo), check if it's empty\r\n      if (typeof value === 'object' && value !== null) {\r\n        return Object.keys(value).length === 0;\r\n      }\r\n      // Otherwise, check if the value is an empty string\r\n      return value === \"\";\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const allowFilesType = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n    'application/pdf',\r\n    'application/vnd.ms-excel',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n  ];\r\n  const allowFilesType2 = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n\r\n  ];\r\n  const [guarantors, setGuarantors] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n\r\n  // *For Deposit Slip\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadedSize, setUploadedSize] = useState(0);\r\n  const [slipDetail, setSlipDetail] = useState([]);\r\n\r\n\r\n  const [emailVerify, setEmailVerify] = useState(false)\r\n  \r\n\r\n  const [center, setCenter] = useState(null)\r\n  const [status, setStatus] = useState(null)\r\n\r\n  // *For Stepper Forms Data\r\n  const [stepFormData, setStepFormData] = useState()\r\n\r\n  const [selectedType, setSelectedType] = useState(null)\r\n  const [date, setDate] = useState(null)\r\n  const [balanceType, setBalanceType] = useState(null)\r\n\r\n  //documents array\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const submitForm1 = async (formData) => {\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        name: formData?.name,\r\n        account_title: formData?.title,\r\n        account_number: formData?.accountnumber,\r\n        account_ibn: formData?.ibn,\r\n      \r\n      \r\n\r\n      };\r\n      const promise = CustomerServices.CreateBank(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving...',\r\n        'Added Successfully',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        navigate(\"/bank-list\");\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      ErrorToaster(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\" }}>\r\n\r\n\r\n      </Box>\r\n      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n        {<>\r\n\r\n          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}>\r\n\r\n\r\n              <Grid container sx={{ gap: '5px 25px' }}>\r\n                <Grid item xs={2.8}>\r\n                  <InputField\r\n                    label={\" Name :*\"}\r\n                    size={'small'}\r\n                    placeholder={\" Name\"}\r\n                    error={errors1?.name?.message}\r\n                    register={register1(\"name\", {\r\n                      required:\r\n                        \"Please enter your name.\"\r\n\r\n                    })}\r\n                  /></Grid>\r\n             \r\n              \r\n                <Grid item xs={2.8}><InputField\r\n                  label={\" Account Title :*\"}\r\n                  size={'small'}\r\n                  placeholder={\" Account Title\"}\r\n                  error={errors1?.title?.message}\r\n                  register={register1(\"title\", {\r\n                    required:\r\n                      \"Please enter your  title.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n\r\n\r\n\r\n\r\n\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Account Number :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Account Number\"}\r\n                  error={errors1?.accountnumber?.message}\r\n                  register={register1(\"accountnumber\", {\r\n                    required:\r\n                      \"Please enter your accountnumber.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Account IBN Number :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Account IBN Number\"}\r\n                  error={errors1?.ibn?.message}\r\n                  register={register1(\"ibn\", {\r\n                    required:\r\n                      \"Please enter your ibn.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n              \r\n          \r\n                \r\n\r\n               \r\n                <Grid  container justifyContent={'flex-end'}>\r\n                <PrimaryButton \r\n                 bgcolor={'#bd9b4a'}\r\n                  title=\"Submit\"\r\n                  type={'submit'}\r\n                  \r\n\r\n                />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box></>}\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateBank;"
        }
    ]
}