{
    "sourceFile": "src/pages/Dashboard/Banks/CreateBank.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1744614001094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744614129456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,109 +318,10 @@\n                       required: 'Please select type account.',\r\n                     })}\r\n                   />\r\n                 </Grid>\r\n-                <Grid item xs={2.8} >\r\n-                  <SelectField\r\n-                    size={'small'}\r\n-                    label={'Credit Status *:'}\r\n+                \r\n \r\n-                    options={[{ id: 'Good History', name: 'Good History' }, { id: 'In Liquidation', name: 'In Liquidation' }, { id: 'No More Work until Payment Received', name: 'No More Work until Payment Received' }]}\r\n-                    selected={status}\r\n-                    onSelect={(value) => {\r\n-                      setStatus(value)\r\n-\r\n-\r\n-                    }}\r\n-                    error={errors?.status?.message}\r\n-                    register={register(\"status\", {\r\n-                      required: 'Please select status .',\r\n-                    })}\r\n-                  />\r\n-                </Grid>\r\n-                <Grid item xs={2.8} >\r\n-                  <SelectField\r\n-                    size={'small'}\r\n-                    label={'Cost Center *:'}\r\n-\r\n-                    options={[{ id: 'Tasheel', name: 'Tasheel' }, { id: 'DED', name: 'DED' }, { id: 'Typing', name: 'Typing' }, { id: 'General', name: 'General' }]}\r\n-                    selected={center}\r\n-                    onSelect={(value) => {\r\n-                      setCenter(value)\r\n-\r\n-\r\n-                    }}\r\n-                    error={errors?.center?.message}\r\n-                    register={register(\"center\", {\r\n-                      required: 'Please select center .',\r\n-                    })}\r\n-                  />\r\n-                </Grid>\r\n-                <Grid item xs={2.8} >\r\n-                  <SelectField\r\n-                    size={'small'}\r\n-                    label={'Balance Type *:'}\r\n-\r\n-                    options={[{ id: 'Credit', name: 'Credit' }, { id: 'Debit', name: 'Debit' }]}\r\n-                    selected={balanceType}\r\n-                    onSelect={(value) => {\r\n-                      setBalanceType(value)\r\n-\r\n-\r\n-                    }}\r\n-                    error={errors?.type?.message}\r\n-                    register={register(\"type\", {\r\n-                      required: 'Please select type account.',\r\n-                    })}\r\n-                  />\r\n-                </Grid>\r\n-                <Grid item xs={2.8}>\r\n-                  <DatePicker\r\n-                    label={\"Opening Balance Date :*\"}\r\n-                    value={date}\r\n-                    size={'small'}\r\n-\r\n-                    error={errors1?.date?.message}\r\n-                    register={register1(\"date\", {\r\n-                      required:\r\n-                        date ? false :\r\n-                          \"please enter  date.\"\r\n-\r\n-                    })}\r\n-                    onChange={(date) => {\r\n-\r\n-                      setValue1('date', date)\r\n-                      setDate(new Date(date));\r\n-\r\n-                    }\r\n-\r\n-                    }\r\n-                  /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Opening Balance :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Opening Balance \"}\r\n-                  error={errors1?.balance?.message}\r\n-                  register={register1(\"balance\", {\r\n-                    required:\r\n-                      \"Please enter your balance.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Credit Limit :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Credit Limit\"}\r\n-                  error={errors1?.credit?.message}\r\n-                  register={register1(\"credit\", {\r\n-                    required:\r\n-                      \"Please enter your credit.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-\r\n                 <Grid item xs={5.5}><InputField\r\n                   label={\"Notes :\"}\r\n                   multiline\r\n                   rows={4}\r\n"
                },
                {
                    "date": 1744614134633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,26 +300,9 @@\n                       \"Please enter your trade.\"\r\n \r\n                   })}\r\n                 /></Grid>\r\n-                <Grid item xs={2.8} >\r\n-                  <SelectField\r\n-                    size={'small'}\r\n-                    label={'Payment Type *:'}\r\n-\r\n-                    options={[{ id: 'Credit', name: 'Credit' }, { id: 'Cash', name: 'Cash' }]}\r\n-                    selected={selectedType}\r\n-                    onSelect={(value) => {\r\n-                      setSelectedType(value)\r\n-\r\n-\r\n-                    }}\r\n-                    error={errors?.type?.message}\r\n-                    register={register(\"type\", {\r\n-                      required: 'Please select type account.',\r\n-                    })}\r\n-                  />\r\n-                </Grid>\r\n+          \r\n                 \r\n \r\n                 <Grid item xs={5.5}><InputField\r\n                   label={\"Notes :\"}\r\n"
                },
                {
                    "date": 1744614141809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,30 +226,9 @@\n                     }\r\n \r\n                   })}\r\n                 /></Grid>\r\n-                <Grid item xs={2.8}>\r\n-                  <InputField\r\n-                    label={\"Email :*\"}\r\n-                    size={\"small\"}\r\n-                    placeholder={\"Email\"}\r\n-                    error={errors1?.email?.message}\r\n-                    register={register1(\"email\", {\r\n-                      required: \"Please enter your email.\",\r\n-                      onChange: (e) => {\r\n-                        console.log('asdas');\r\n-\r\n-\r\n-\r\n-                      },\r\n-                      pattern: {\r\n-                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n-                        message: \"Please enter a valid email address.\"\r\n-                      },\r\n-\r\n-                    })}\r\n-                  />\r\n-                </Grid>\r\n+              \r\n                 <Grid item xs={2.8}><InputField\r\n                   label={\" Address :*\"}\r\n                   size={'small'}\r\n                   placeholder={\" Address\"}\r\n"
                },
                {
                    "date": 1744614165103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -210,24 +210,9 @@\n                         \"Please enter your name.\"\r\n \r\n                     })}\r\n                   /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Mobile :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Mobile\"}\r\n-                  error={errors1?.mobile?.message}\r\n-                  register={register1(\"mobile\", {\r\n-                    required:\r\n-                      \"Please enter your mobile.\",\r\n-                    pattern: {\r\n-                      value: /^05[0-9]{8}$/,\r\n-                      message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n-                    }\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n+             \r\n               \r\n                 <Grid item xs={2.8}><InputField\r\n                   label={\" Address :*\"}\r\n                   size={'small'}\r\n"
                },
                {
                    "date": 1744614182943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,9 +213,9 @@\n                   /></Grid>\r\n              \r\n               \r\n                 <Grid item xs={2.8}><InputField\r\n-                  label={\" Address :*\"}\r\n+                  label={\" Account Title :*\"}\r\n                   size={'small'}\r\n                   placeholder={\" Address\"}\r\n                   error={errors1?.address?.message}\r\n                   register={register1(\"address\", {\r\n"
                },
                {
                    "date": 1744614190185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,302 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { Box, Checkbox, Container, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material';\r\n+import RegisterContainer from 'container/Register'\r\n+import { useTheme } from '@mui/material/styles';\r\n+import MobileStepper from '@mui/material/MobileStepper';\r\n+import Button from '@mui/material/Button';\r\n+import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\n+import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n+import { PrimaryButton } from 'components/Buttons';\r\n+import Colors from 'assets/Style/Colors';\r\n+import DeleteIcon from '@mui/icons-material/Delete';\r\n+import { Controller, useForm } from 'react-hook-form';\r\n+import UploadFile from 'components/UploadFile';\r\n+import InputField from 'components/Input';\r\n+import DatePicker from 'components/DatePicker';\r\n+import { ErrorToaster } from 'components/Toaster';\r\n+import { FormControl } from '@mui/base';\r\n+import LabelCustomInput from 'components/Input/LabelCustomInput';\r\n+import SelectField from 'components/Select';\r\n+import { CleanTypes, Debounce2, getFileSize, handleDownload } from 'utils';\r\n+import instance from 'config/axios';\r\n+import routes from 'services/System/routes';\r\n+import CustomerServices from 'services/Customer';\r\n+import CustomerService from '../DashboardPages/CustomerService';\r\n+import { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\n+import moment from 'moment';\r\n+import { Link, useNavigate } from 'react-router-dom';\r\n+import SystemServices from 'services/System';\r\n+import UploadFileSingle from 'components/UploadFileSingle';\r\n+import { Images } from 'assets';\r\n+import { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\n+import { addMonths } from 'date-fns';\r\n+import { useAuth } from 'context/UseContext';\r\n+import DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n+\r\n+\r\n+function CreateBank() {\r\n+  const theme = useTheme();\r\n+  const { user } = useAuth()\r\n+  const navigate = useNavigate()\r\n+  const [formChange, setFormChange] = useState(false)\r\n+  const [submit, setSubmit] = useState(false)\r\n+\r\n+  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n+  const {\r\n+    register: register1,\r\n+    handleSubmit: handleSubmit1,\r\n+    setValue: setValue1,\r\n+    getValues: getValues1,\r\n+    watch,\r\n+    formState: { errors: errors1 },\r\n+\r\n+  } = useForm();\r\n+\r\n+  // Watch all form data\r\n+console.log(watch());\r\n+\r\n+\r\n+  const isFormDataEmpty = (data) => {\r\n+    // Check if all form fields are empty\r\n+    return Object.values(data).every((value) => {\r\n+      // If the value is an object (like companyLogo), check if it's empty\r\n+      if (typeof value === 'object' && value !== null) {\r\n+        return Object.keys(value).length === 0;\r\n+      }\r\n+      // Otherwise, check if the value is an empty string\r\n+      return value === \"\";\r\n+    });\r\n+  };\r\n+\r\n+ \r\n+\r\n+\r\n+\r\n+\r\n+  const allowFilesType = [\r\n+    'image/png',\r\n+    'image/jpg',\r\n+    'image/jpeg',\r\n+    'application/pdf',\r\n+    'application/vnd.ms-excel',\r\n+    'application/msword',\r\n+    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n+  ];\r\n+  const allowFilesType2 = [\r\n+    'image/png',\r\n+    'image/jpg',\r\n+    'image/jpeg',\r\n+\r\n+  ];\r\n+  const [guarantors, setGuarantors] = useState([])\r\n+  const [activeStep, setActiveStep] = React.useState(1);\r\n+\r\n+  // *For Deposit Slip\r\n+  const [progress, setProgress] = useState(0);\r\n+  const [uploadedSize, setUploadedSize] = useState(0);\r\n+  const [slipDetail, setSlipDetail] = useState([]);\r\n+\r\n+\r\n+  const [emailVerify, setEmailVerify] = useState(false)\r\n+  \r\n+\r\n+  const [center, setCenter] = useState(null)\r\n+  const [status, setStatus] = useState(null)\r\n+\r\n+  // *For Stepper Forms Data\r\n+  const [stepFormData, setStepFormData] = useState()\r\n+\r\n+  const [selectedType, setSelectedType] = useState(null)\r\n+  const [date, setDate] = useState(null)\r\n+  const [balanceType, setBalanceType] = useState(null)\r\n+\r\n+  //documents array\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const handleNext = () => {\r\n+    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const submitForm1 = async (formData) => {\r\n+    console.log(formData);\r\n+    try {\r\n+      let obj = {\r\n+        name: formData?.name,\r\n+        type: selectedType?.id,\r\n+        mobile: formData?.mobile,\r\n+        trn: formData?.trn,\r\n+        eid: formData?.eid,\r\n+        trade_license_no: formData?.trade,\r\n+        opening_balance: formData?.balance,\r\n+        opening_balance_type:balanceType?.id,\r\n+        opening_balance_date:date,\r\n+        credit_limit: formData?.credit,\r\n+        credit_status: status?.id,\r\n+        cost_center: center?.id,\r\n+        general_notes: formData?.notes,\r\n+        email: formData?.email,\r\n+        address: formData?.address,\r\n+      \r\n+\r\n+      };\r\n+      const promise = CustomerServices.addCustomer(obj);\r\n+\r\n+      showPromiseToast(\r\n+        promise,\r\n+        'Saving...',\r\n+        'Added Successfully',\r\n+        'Something Went Wrong'\r\n+      );\r\n+      const response = await promise;\r\n+      if (response?.responseCode === 200) {\r\n+        navigate(\"/customer-list\");\r\n+      }\r\n+\r\n+      \r\n+    } catch (error) {\r\n+      ErrorToaster(error);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  \r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+      <Box sx={{ width: \"100%\" }}>\r\n+\r\n+\r\n+      </Box>\r\n+      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n+        {<>\r\n+\r\n+          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n+            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n+              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Customer</Typography>\r\n+\r\n+            </Box>\r\n+\r\n+            <Box sx={{ p: 3 }}>\r\n+\r\n+\r\n+              <Grid container sx={{ gap: '5px 25px' }}>\r\n+                <Grid item xs={2.8}>\r\n+                  <InputField\r\n+                    label={\" Name :*\"}\r\n+                    size={'small'}\r\n+                    placeholder={\" Name\"}\r\n+                    error={errors1?.name?.message}\r\n+                    register={register1(\"name\", {\r\n+                      required:\r\n+                        \"Please enter your name.\"\r\n+\r\n+                    })}\r\n+                  /></Grid>\r\n+             \r\n+              \r\n+                <Grid item xs={2.8}><InputField\r\n+                  label={\" Account Title :*\"}\r\n+                  size={'small'}\r\n+                  placeholder={\" Account Title\"}\r\n+                  error={errors1?.title?.message}\r\n+                  register={register1(\"title\", {\r\n+                    required:\r\n+                      \"Please enter your  title.\"\r\n+\r\n+                  })}\r\n+                /></Grid>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                <Grid item xs={2.8}><InputField\r\n+                  label={\"TRN Number :*\"}\r\n+                  size={'small'}\r\n+                  type={'number'}\r\n+                  placeholder={\"TRN Number\"}\r\n+                  error={errors1?.trn?.message}\r\n+                  register={register1(\"trn\", {\r\n+                    required:\r\n+                      \"Please enter your trn.\"\r\n+\r\n+                  })}\r\n+                /></Grid>\r\n+                <Grid item xs={2.8}><InputField\r\n+                  label={\"EID Number :*\"}\r\n+                  size={'small'}\r\n+                  type={'number'}\r\n+                  placeholder={\"EID Number\"}\r\n+                  error={errors1?.eid?.message}\r\n+                  register={register1(\"eid\", {\r\n+                    required:\r\n+                      \"Please enter your eid.\"\r\n+\r\n+                  })}\r\n+                /></Grid>\r\n+                <Grid item xs={2.8}><InputField\r\n+                  label={\"Trade License Number :*\"}\r\n+                  size={'small'}\r\n+                  type={'number'}\r\n+                  placeholder={\"Trade License Number\"}\r\n+                  error={errors1?.trade?.message}\r\n+                  register={register1(\"trade\", {\r\n+                    required:\r\n+                      \"Please enter your trade.\"\r\n+\r\n+                  })}\r\n+                /></Grid>\r\n+          \r\n+                \r\n+\r\n+                <Grid item xs={5.5}><InputField\r\n+                  label={\"Notes :\"}\r\n+                  multiline\r\n+                  rows={4}\r\n+                  size={'small'}\r\n+                  placeholder={\"Notes\"}\r\n+                  error={errors1?.notes?.message}\r\n+                  register={register1(\"notes\", {\r\n+                    required:\r\n+                      false\r\n+\r\n+                  })}\r\n+                /></Grid>\r\n+                <Grid  container justifyContent={'flex-end'}>\r\n+                <PrimaryButton \r\n+                 bgcolor={'#bd9b4a'}\r\n+                  title=\"Submit\"\r\n+                  type={'submit'}\r\n+                  \r\n+\r\n+                />\r\n+                </Grid>\r\n+              </Grid>\r\n+            </Box>\r\n+          </Box></>}\r\n+\r\n+      </Box>\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default CreateBank;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744614202960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,12 +229,12 @@\n \r\n \r\n \r\n                 <Grid item xs={2.8}><InputField\r\n-                  label={\"TRN Number :*\"}\r\n+                  label={\"Account Number :*\"}\r\n                   size={'small'}\r\n                   type={'number'}\r\n-                  placeholder={\"TRN Number\"}\r\n+                  placeholder={\"Account Number\"}\r\n                   error={errors1?.trn?.message}\r\n                   register={register1(\"trn\", {\r\n                     required:\r\n                       \"Please enter your trn.\"\r\n@@ -298,307 +298,5 @@\n     </>\r\n   );\r\n }\r\n \r\n-export default CreateBank;\n-import React, { useEffect, useState } from 'react';\r\n-import { Box, Checkbox, Container, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material';\r\n-import RegisterContainer from 'container/Register'\r\n-import { useTheme } from '@mui/material/styles';\r\n-import MobileStepper from '@mui/material/MobileStepper';\r\n-import Button from '@mui/material/Button';\r\n-import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\n-import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n-import { PrimaryButton } from 'components/Buttons';\r\n-import Colors from 'assets/Style/Colors';\r\n-import DeleteIcon from '@mui/icons-material/Delete';\r\n-import { Controller, useForm } from 'react-hook-form';\r\n-import UploadFile from 'components/UploadFile';\r\n-import InputField from 'components/Input';\r\n-import DatePicker from 'components/DatePicker';\r\n-import { ErrorToaster } from 'components/Toaster';\r\n-import { FormControl } from '@mui/base';\r\n-import LabelCustomInput from 'components/Input/LabelCustomInput';\r\n-import SelectField from 'components/Select';\r\n-import { CleanTypes, Debounce2, getFileSize, handleDownload } from 'utils';\r\n-import instance from 'config/axios';\r\n-import routes from 'services/System/routes';\r\n-import CustomerServices from 'services/Customer';\r\n-import CustomerService from '../DashboardPages/CustomerService';\r\n-import { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\n-import moment from 'moment';\r\n-import { Link, useNavigate } from 'react-router-dom';\r\n-import SystemServices from 'services/System';\r\n-import UploadFileSingle from 'components/UploadFileSingle';\r\n-import { Images } from 'assets';\r\n-import { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\n-import { addMonths } from 'date-fns';\r\n-import { useAuth } from 'context/UseContext';\r\n-import DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n-\r\n-\r\n-function CreateBank() {\r\n-  const theme = useTheme();\r\n-  const { user } = useAuth()\r\n-  const navigate = useNavigate()\r\n-  const [formChange, setFormChange] = useState(false)\r\n-  const [submit, setSubmit] = useState(false)\r\n-\r\n-  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n-  const {\r\n-    register: register1,\r\n-    handleSubmit: handleSubmit1,\r\n-    setValue: setValue1,\r\n-    getValues: getValues1,\r\n-    watch,\r\n-    formState: { errors: errors1 },\r\n-\r\n-  } = useForm();\r\n-\r\n-  // Watch all form data\r\n-console.log(watch());\r\n-\r\n-\r\n-  const isFormDataEmpty = (data) => {\r\n-    // Check if all form fields are empty\r\n-    return Object.values(data).every((value) => {\r\n-      // If the value is an object (like companyLogo), check if it's empty\r\n-      if (typeof value === 'object' && value !== null) {\r\n-        return Object.keys(value).length === 0;\r\n-      }\r\n-      // Otherwise, check if the value is an empty string\r\n-      return value === \"\";\r\n-    });\r\n-  };\r\n-\r\n- \r\n-\r\n-\r\n-\r\n-\r\n-  const allowFilesType = [\r\n-    'image/png',\r\n-    'image/jpg',\r\n-    'image/jpeg',\r\n-    'application/pdf',\r\n-    'application/vnd.ms-excel',\r\n-    'application/msword',\r\n-    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n-  ];\r\n-  const allowFilesType2 = [\r\n-    'image/png',\r\n-    'image/jpg',\r\n-    'image/jpeg',\r\n-\r\n-  ];\r\n-  const [guarantors, setGuarantors] = useState([])\r\n-  const [activeStep, setActiveStep] = React.useState(1);\r\n-\r\n-  // *For Deposit Slip\r\n-  const [progress, setProgress] = useState(0);\r\n-  const [uploadedSize, setUploadedSize] = useState(0);\r\n-  const [slipDetail, setSlipDetail] = useState([]);\r\n-\r\n-\r\n-  const [emailVerify, setEmailVerify] = useState(false)\r\n-  \r\n-\r\n-  const [center, setCenter] = useState(null)\r\n-  const [status, setStatus] = useState(null)\r\n-\r\n-  // *For Stepper Forms Data\r\n-  const [stepFormData, setStepFormData] = useState()\r\n-\r\n-  const [selectedType, setSelectedType] = useState(null)\r\n-  const [date, setDate] = useState(null)\r\n-  const [balanceType, setBalanceType] = useState(null)\r\n-\r\n-  //documents array\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const handleNext = () => {\r\n-    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const submitForm1 = async (formData) => {\r\n-    console.log(formData);\r\n-    try {\r\n-      let obj = {\r\n-        name: formData?.name,\r\n-        type: selectedType?.id,\r\n-        mobile: formData?.mobile,\r\n-        trn: formData?.trn,\r\n-        eid: formData?.eid,\r\n-        trade_license_no: formData?.trade,\r\n-        opening_balance: formData?.balance,\r\n-        opening_balance_type:balanceType?.id,\r\n-        opening_balance_date:date,\r\n-        credit_limit: formData?.credit,\r\n-        credit_status: status?.id,\r\n-        cost_center: center?.id,\r\n-        general_notes: formData?.notes,\r\n-        email: formData?.email,\r\n-        address: formData?.address,\r\n-      \r\n-\r\n-      };\r\n-      const promise = CustomerServices.addCustomer(obj);\r\n-\r\n-      showPromiseToast(\r\n-        promise,\r\n-        'Saving...',\r\n-        'Added Successfully',\r\n-        'Something Went Wrong'\r\n-      );\r\n-      const response = await promise;\r\n-      if (response?.responseCode === 200) {\r\n-        navigate(\"/customer-list\");\r\n-      }\r\n-\r\n-      \r\n-    } catch (error) {\r\n-      ErrorToaster(error);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  \r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-  return (\r\n-    <>\r\n-      <Box sx={{ width: \"100%\" }}>\r\n-\r\n-\r\n-      </Box>\r\n-      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n-        {<>\r\n-\r\n-          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n-            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n-              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Customer</Typography>\r\n-\r\n-            </Box>\r\n-\r\n-            <Box sx={{ p: 3 }}>\r\n-\r\n-\r\n-              <Grid container sx={{ gap: '5px 25px' }}>\r\n-                <Grid item xs={2.8}>\r\n-                  <InputField\r\n-                    label={\" Name :*\"}\r\n-                    size={'small'}\r\n-                    placeholder={\" Name\"}\r\n-                    error={errors1?.name?.message}\r\n-                    register={register1(\"name\", {\r\n-                      required:\r\n-                        \"Please enter your name.\"\r\n-\r\n-                    })}\r\n-                  /></Grid>\r\n-             \r\n-              \r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\" Account Title :*\"}\r\n-                  size={'small'}\r\n-                  placeholder={\" Address\"}\r\n-                  error={errors1?.address?.message}\r\n-                  register={register1(\"address\", {\r\n-                    required:\r\n-                      \"Please enter your  address.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"TRN Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"TRN Number\"}\r\n-                  error={errors1?.trn?.message}\r\n-                  register={register1(\"trn\", {\r\n-                    required:\r\n-                      \"Please enter your trn.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"EID Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"EID Number\"}\r\n-                  error={errors1?.eid?.message}\r\n-                  register={register1(\"eid\", {\r\n-                    required:\r\n-                      \"Please enter your eid.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Trade License Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Trade License Number\"}\r\n-                  error={errors1?.trade?.message}\r\n-                  register={register1(\"trade\", {\r\n-                    required:\r\n-                      \"Please enter your trade.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-          \r\n-                \r\n-\r\n-                <Grid item xs={5.5}><InputField\r\n-                  label={\"Notes :\"}\r\n-                  multiline\r\n-                  rows={4}\r\n-                  size={'small'}\r\n-                  placeholder={\"Notes\"}\r\n-                  error={errors1?.notes?.message}\r\n-                  register={register1(\"notes\", {\r\n-                    required:\r\n-                      false\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n-                <Grid  container justifyContent={'flex-end'}>\r\n-                <PrimaryButton \r\n-                 bgcolor={'#bd9b4a'}\r\n-                  title=\"Submit\"\r\n-                  type={'submit'}\r\n-                  \r\n-\r\n-                />\r\n-                </Grid>\r\n-              </Grid>\r\n-            </Box>\r\n-          </Box></>}\r\n-\r\n-      </Box>\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n export default CreateBank;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744614209161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,12 +233,12 @@\n                   label={\"Account Number :*\"}\r\n                   size={'small'}\r\n                   type={'number'}\r\n                   placeholder={\"Account Number\"}\r\n-                  error={errors1?.trn?.message}\r\n-                  register={register1(\"trn\", {\r\n+                  error={errors1?.accountnumber?.message}\r\n+                  register={register1(\"accountnumber\", {\r\n                     required:\r\n-                      \"Please enter your trn.\"\r\n+                      \"Please enter your accountnumber.\"\r\n \r\n                   })}\r\n                 /></Grid>\r\n                 <Grid item xs={2.8}><InputField\r\n"
                },
                {
                    "date": 1744614221831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,9 +241,9 @@\n \r\n                   })}\r\n                 /></Grid>\r\n                 <Grid item xs={2.8}><InputField\r\n-                  label={\"EID Number :*\"}\r\n+                  label={\"Account IBN Number :*\"}\r\n                   size={'small'}\r\n                   type={'number'}\r\n                   placeholder={\"EID Number\"}\r\n                   error={errors1?.eid?.message}\r\n"
                },
                {
                    "date": 1744614231956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,13 +244,13 @@\n                 <Grid item xs={2.8}><InputField\r\n                   label={\"Account IBN Number :*\"}\r\n                   size={'small'}\r\n                   type={'number'}\r\n-                  placeholder={\"EID Number\"}\r\n-                  error={errors1?.eid?.message}\r\n-                  register={register1(\"eid\", {\r\n+                  placeholder={\"Account IBN Number\"}\r\n+                  error={errors1?.inb?.message}\r\n+                  register={register1(\"inb\", {\r\n                     required:\r\n-                      \"Please enter your eid.\"\r\n+                      \"Please enter your inb.\"\r\n \r\n                   })}\r\n                 /></Grid>\r\n                 <Grid item xs={2.8}><InputField\r\n"
                },
                {
                    "date": 1744614237973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,27 +245,16 @@\n                   label={\"Account IBN Number :*\"}\r\n                   size={'small'}\r\n                   type={'number'}\r\n                   placeholder={\"Account IBN Number\"}\r\n-                  error={errors1?.inb?.message}\r\n-                  register={register1(\"inb\", {\r\n+                  error={errors1?.ibn?.message}\r\n+                  register={register1(\"ibn\", {\r\n                     required:\r\n-                      \"Please enter your inb.\"\r\n+                      \"Please enter your ibn.\"\r\n \r\n                   })}\r\n                 /></Grid>\r\n-                <Grid item xs={2.8}><InputField\r\n-                  label={\"Trade License Number :*\"}\r\n-                  size={'small'}\r\n-                  type={'number'}\r\n-                  placeholder={\"Trade License Number\"}\r\n-                  error={errors1?.trade?.message}\r\n-                  register={register1(\"trade\", {\r\n-                    required:\r\n-                      \"Please enter your trade.\"\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n+              \r\n           \r\n                 \r\n \r\n                 <Grid item xs={5.5}><InputField\r\n"
                },
                {
                    "date": 1744614260380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n         {<>\r\n \r\n           <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n             <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n-              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Customer</Typography>\r\n+              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Bank</Typography>\r\n \r\n             </Box>\r\n \r\n             <Box sx={{ p: 3 }}>\r\n@@ -256,21 +256,9 @@\n               \r\n           \r\n                 \r\n \r\n-                <Grid item xs={5.5}><InputField\r\n-                  label={\"Notes :\"}\r\n-                  multiline\r\n-                  rows={4}\r\n-                  size={'small'}\r\n-                  placeholder={\"Notes\"}\r\n-                  error={errors1?.notes?.message}\r\n-                  register={register1(\"notes\", {\r\n-                    required:\r\n-                      false\r\n-\r\n-                  })}\r\n-                /></Grid>\r\n+               \r\n                 <Grid  container justifyContent={'flex-end'}>\r\n                 <PrimaryButton \r\n                  bgcolor={'#bd9b4a'}\r\n                   title=\"Submit\"\r\n"
                },
                {
                    "date": 1744614283057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,23 +134,10 @@\n     console.log(formData);\r\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n-        type: selectedType?.id,\r\n-        mobile: formData?.mobile,\r\n-        trn: formData?.trn,\r\n-        eid: formData?.eid,\r\n-        trade_license_no: formData?.trade,\r\n-        opening_balance: formData?.balance,\r\n-        opening_balance_type:balanceType?.id,\r\n-        opening_balance_date:date,\r\n-        credit_limit: formData?.credit,\r\n-        credit_status: status?.id,\r\n-        cost_center: center?.id,\r\n-        general_notes: formData?.notes,\r\n-        email: formData?.email,\r\n-        address: formData?.address,\r\n       \r\n+      \r\n \r\n       };\r\n       const promise = CustomerServices.addCustomer(obj);\r\n \r\n"
                },
                {
                    "date": 1744614288503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,11 @@\n     console.log(formData);\r\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n+        name: formData?.name,\r\n+        name: formData?.name,\r\n+        name: formData?.name,\r\n       \r\n       \r\n \r\n       };\r\n"
                },
                {
                    "date": 1744614297681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,11 +134,11 @@\n     console.log(formData);\r\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n+        account_number: formData?.name,\r\n         name: formData?.name,\r\n         name: formData?.name,\r\n-        name: formData?.name,\r\n       \r\n       \r\n \r\n       };\r\n"
                },
                {
                    "date": 1744614308781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n     console.log(formData);\r\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n-        account_number: formData?.name,\r\n+        account_title: formData?.name,\r\n         name: formData?.name,\r\n         name: formData?.name,\r\n       \r\n       \r\n"
                },
                {
                    "date": 1744614323061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,11 +134,11 @@\n     console.log(formData);\r\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n-        account_title: formData?.name,\r\n+        account_title: formData?.title,\r\n+        account_number: formData?.name,\r\n         name: formData?.name,\r\n-        name: formData?.name,\r\n       \r\n       \r\n \r\n       };\r\n"
                },
                {
                    "date": 1744614332601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n     try {\r\n       let obj = {\r\n         name: formData?.name,\r\n         account_title: formData?.title,\r\n-        account_number: formData?.name,\r\n+        account_number: formData?.accountnumber,\r\n         name: formData?.name,\r\n       \r\n       \r\n \r\n"
                },
                {
                    "date": 1744614342167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n       let obj = {\r\n         name: formData?.name,\r\n         account_title: formData?.title,\r\n         account_number: formData?.accountnumber,\r\n-        name: formData?.name,\r\n+        account_ibn: formData?.name,\r\n       \r\n       \r\n \r\n       };\r\n"
                },
                {
                    "date": 1744614348263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n       let obj = {\r\n         name: formData?.name,\r\n         account_title: formData?.title,\r\n         account_number: formData?.accountnumber,\r\n-        account_ibn: formData?.name,\r\n+        account_ibn: formData?.ibn,\r\n       \r\n       \r\n \r\n       };\r\n"
                },
                {
                    "date": 1744614354458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n       \r\n       \r\n \r\n       };\r\n-      const promise = CustomerServices.addCustomer(obj);\r\n+      const promise = CustomerServices.CreateBank(obj);\r\n \r\n       showPromiseToast(\r\n         promise,\r\n         'Saving...',\r\n"
                },
                {
                    "date": 1744614637720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n         'Something Went Wrong'\r\n       );\r\n       const response = await promise;\r\n       if (response?.responseCode === 200) {\r\n-        navigate(\"/customer-list\");\r\n+        navigate(\"//bank-list\");\r\n       }\r\n \r\n       \r\n     } catch (error) {\r\n"
                }
            ],
            "date": 1744614001094,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { Box, Checkbox, Container, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material';\r\nimport RegisterContainer from 'container/Register'\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport Colors from 'assets/Style/Colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport UploadFile from 'components/UploadFile';\r\nimport InputField from 'components/Input';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { ErrorToaster } from 'components/Toaster';\r\nimport { FormControl } from '@mui/base';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport SelectField from 'components/Select';\r\nimport { CleanTypes, Debounce2, getFileSize, handleDownload } from 'utils';\r\nimport instance from 'config/axios';\r\nimport routes from 'services/System/routes';\r\nimport CustomerServices from 'services/Customer';\r\nimport CustomerService from '../DashboardPages/CustomerService';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport moment from 'moment';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport SystemServices from 'services/System';\r\nimport UploadFileSingle from 'components/UploadFileSingle';\r\nimport { Images } from 'assets';\r\nimport { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\nimport { addMonths } from 'date-fns';\r\nimport { useAuth } from 'context/UseContext';\r\nimport DoDisturbIcon from '@mui/icons-material/DoDisturb';\r\n\r\n\r\nfunction CreateBank() {\r\n  const theme = useTheme();\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [formChange, setFormChange] = useState(false)\r\n  const [submit, setSubmit] = useState(false)\r\n\r\n  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n  const {\r\n    register: register1,\r\n    handleSubmit: handleSubmit1,\r\n    setValue: setValue1,\r\n    getValues: getValues1,\r\n    watch,\r\n    formState: { errors: errors1 },\r\n\r\n  } = useForm();\r\n\r\n  // Watch all form data\r\nconsole.log(watch());\r\n\r\n\r\n  const isFormDataEmpty = (data) => {\r\n    // Check if all form fields are empty\r\n    return Object.values(data).every((value) => {\r\n      // If the value is an object (like companyLogo), check if it's empty\r\n      if (typeof value === 'object' && value !== null) {\r\n        return Object.keys(value).length === 0;\r\n      }\r\n      // Otherwise, check if the value is an empty string\r\n      return value === \"\";\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const allowFilesType = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n    'application/pdf',\r\n    'application/vnd.ms-excel',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n  ];\r\n  const allowFilesType2 = [\r\n    'image/png',\r\n    'image/jpg',\r\n    'image/jpeg',\r\n\r\n  ];\r\n  const [guarantors, setGuarantors] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n\r\n  // *For Deposit Slip\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadedSize, setUploadedSize] = useState(0);\r\n  const [slipDetail, setSlipDetail] = useState([]);\r\n\r\n\r\n  const [emailVerify, setEmailVerify] = useState(false)\r\n  \r\n\r\n  const [center, setCenter] = useState(null)\r\n  const [status, setStatus] = useState(null)\r\n\r\n  // *For Stepper Forms Data\r\n  const [stepFormData, setStepFormData] = useState()\r\n\r\n  const [selectedType, setSelectedType] = useState(null)\r\n  const [date, setDate] = useState(null)\r\n  const [balanceType, setBalanceType] = useState(null)\r\n\r\n  //documents array\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const submitForm1 = async (formData) => {\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        name: formData?.name,\r\n        type: selectedType?.id,\r\n        mobile: formData?.mobile,\r\n        trn: formData?.trn,\r\n        eid: formData?.eid,\r\n        trade_license_no: formData?.trade,\r\n        opening_balance: formData?.balance,\r\n        opening_balance_type:balanceType?.id,\r\n        opening_balance_date:date,\r\n        credit_limit: formData?.credit,\r\n        credit_status: status?.id,\r\n        cost_center: center?.id,\r\n        general_notes: formData?.notes,\r\n        email: formData?.email,\r\n        address: formData?.address,\r\n      \r\n\r\n      };\r\n      const promise = CustomerServices.addCustomer(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving...',\r\n        'Added Successfully',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        navigate(\"/customer-list\");\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      ErrorToaster(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\" }}>\r\n\r\n\r\n      </Box>\r\n      <Box m={3} sx={{backgroundColor:'white',borderRadius:\"12px\"}} >\r\n        {<>\r\n\r\n          <Box component={'form'} onSubmit={handleSubmit1(submitForm1)}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', p: 3, alignItems: 'flex-end' }}>\r\n              <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >Create Customer</Typography>\r\n\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}>\r\n\r\n\r\n              <Grid container sx={{ gap: '5px 25px' }}>\r\n                <Grid item xs={2.8}>\r\n                  <InputField\r\n                    label={\" Name :*\"}\r\n                    size={'small'}\r\n                    placeholder={\" Name\"}\r\n                    error={errors1?.name?.message}\r\n                    register={register1(\"name\", {\r\n                      required:\r\n                        \"Please enter your name.\"\r\n\r\n                    })}\r\n                  /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Mobile :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Mobile\"}\r\n                  error={errors1?.mobile?.message}\r\n                  register={register1(\"mobile\", {\r\n                    required:\r\n                      \"Please enter your mobile.\",\r\n                    pattern: {\r\n                      value: /^05[0-9]{8}$/,\r\n                      message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                    }\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8}>\r\n                  <InputField\r\n                    label={\"Email :*\"}\r\n                    size={\"small\"}\r\n                    placeholder={\"Email\"}\r\n                    error={errors1?.email?.message}\r\n                    register={register1(\"email\", {\r\n                      required: \"Please enter your email.\",\r\n                      onChange: (e) => {\r\n                        console.log('asdas');\r\n\r\n\r\n\r\n                      },\r\n                      pattern: {\r\n                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                        message: \"Please enter a valid email address.\"\r\n                      },\r\n\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\" Address :*\"}\r\n                  size={'small'}\r\n                  placeholder={\" Address\"}\r\n                  error={errors1?.address?.message}\r\n                  register={register1(\"address\", {\r\n                    required:\r\n                      \"Please enter your  address.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n\r\n\r\n\r\n\r\n\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"TRN Number :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"TRN Number\"}\r\n                  error={errors1?.trn?.message}\r\n                  register={register1(\"trn\", {\r\n                    required:\r\n                      \"Please enter your trn.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"EID Number :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"EID Number\"}\r\n                  error={errors1?.eid?.message}\r\n                  register={register1(\"eid\", {\r\n                    required:\r\n                      \"Please enter your eid.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Trade License Number :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Trade License Number\"}\r\n                  error={errors1?.trade?.message}\r\n                  register={register1(\"trade\", {\r\n                    required:\r\n                      \"Please enter your trade.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8} >\r\n                  <SelectField\r\n                    size={'small'}\r\n                    label={'Payment Type *:'}\r\n\r\n                    options={[{ id: 'Credit', name: 'Credit' }, { id: 'Cash', name: 'Cash' }]}\r\n                    selected={selectedType}\r\n                    onSelect={(value) => {\r\n                      setSelectedType(value)\r\n\r\n\r\n                    }}\r\n                    error={errors?.type?.message}\r\n                    register={register(\"type\", {\r\n                      required: 'Please select type account.',\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2.8} >\r\n                  <SelectField\r\n                    size={'small'}\r\n                    label={'Credit Status *:'}\r\n\r\n                    options={[{ id: 'Good History', name: 'Good History' }, { id: 'In Liquidation', name: 'In Liquidation' }, { id: 'No More Work until Payment Received', name: 'No More Work until Payment Received' }]}\r\n                    selected={status}\r\n                    onSelect={(value) => {\r\n                      setStatus(value)\r\n\r\n\r\n                    }}\r\n                    error={errors?.status?.message}\r\n                    register={register(\"status\", {\r\n                      required: 'Please select status .',\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2.8} >\r\n                  <SelectField\r\n                    size={'small'}\r\n                    label={'Cost Center *:'}\r\n\r\n                    options={[{ id: 'Tasheel', name: 'Tasheel' }, { id: 'DED', name: 'DED' }, { id: 'Typing', name: 'Typing' }, { id: 'General', name: 'General' }]}\r\n                    selected={center}\r\n                    onSelect={(value) => {\r\n                      setCenter(value)\r\n\r\n\r\n                    }}\r\n                    error={errors?.center?.message}\r\n                    register={register(\"center\", {\r\n                      required: 'Please select center .',\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2.8} >\r\n                  <SelectField\r\n                    size={'small'}\r\n                    label={'Balance Type *:'}\r\n\r\n                    options={[{ id: 'Credit', name: 'Credit' }, { id: 'Debit', name: 'Debit' }]}\r\n                    selected={balanceType}\r\n                    onSelect={(value) => {\r\n                      setBalanceType(value)\r\n\r\n\r\n                    }}\r\n                    error={errors?.type?.message}\r\n                    register={register(\"type\", {\r\n                      required: 'Please select type account.',\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2.8}>\r\n                  <DatePicker\r\n                    label={\"Opening Balance Date :*\"}\r\n                    value={date}\r\n                    size={'small'}\r\n\r\n                    error={errors1?.date?.message}\r\n                    register={register1(\"date\", {\r\n                      required:\r\n                        date ? false :\r\n                          \"please enter  date.\"\r\n\r\n                    })}\r\n                    onChange={(date) => {\r\n\r\n                      setValue1('date', date)\r\n                      setDate(new Date(date));\r\n\r\n                    }\r\n\r\n                    }\r\n                  /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Opening Balance :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Opening Balance \"}\r\n                  error={errors1?.balance?.message}\r\n                  register={register1(\"balance\", {\r\n                    required:\r\n                      \"Please enter your balance.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid item xs={2.8}><InputField\r\n                  label={\"Credit Limit :*\"}\r\n                  size={'small'}\r\n                  type={'number'}\r\n                  placeholder={\"Credit Limit\"}\r\n                  error={errors1?.credit?.message}\r\n                  register={register1(\"credit\", {\r\n                    required:\r\n                      \"Please enter your credit.\"\r\n\r\n                  })}\r\n                /></Grid>\r\n\r\n                <Grid item xs={5.5}><InputField\r\n                  label={\"Notes :\"}\r\n                  multiline\r\n                  rows={4}\r\n                  size={'small'}\r\n                  placeholder={\"Notes\"}\r\n                  error={errors1?.notes?.message}\r\n                  register={register1(\"notes\", {\r\n                    required:\r\n                      false\r\n\r\n                  })}\r\n                /></Grid>\r\n                <Grid  container justifyContent={'flex-end'}>\r\n                <PrimaryButton \r\n                 bgcolor={'#bd9b4a'}\r\n                  title=\"Submit\"\r\n                  type={'submit'}\r\n                  \r\n\r\n                />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box></>}\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateBank;"
        }
    ]
}