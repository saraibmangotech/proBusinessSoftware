{"version":3,"file":"static/js/9225.6c5a5bd0.chunk.js","mappings":"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","sources":["pages/Dashboard/Customers/CustomerQueue.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, tableCellClasses, IconButton, CircularProgress, Chip, Grid, InputLabel,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  ListItemText,\r\n  Tooltip,\r\n  Checkbox,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport { AllocateIcon, CheckIcon, EyeIcon, FontFamily, Images, MessageIcon, PendingIcon, RequestBuyerIdIcon } from 'assets';\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Colors from 'assets/Style/Colors';\r\nimport { CircleLoading } from 'components/Loaders';\r\nimport { ErrorToaster, SuccessToaster } from 'components/Toaster';\r\nimport FinanceStatusDialog from 'components/Dialog/FinanceStatusDialog';\r\nimport AllocateStatusDialog from 'components/Dialog/AllocateStatusDialog';\r\nimport AllocateDialog from 'components/Dialog/AllocateDialog';\r\nimport CustomerServices from 'services/Customer';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Pagination from 'components/Pagination';\r\nimport { Debounce, encryptData, formatPermissionData, handleExportWithComponent } from 'utils';\r\nimport InputField from 'components/Input';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPermission } from 'redux/slices/navigationDataSlice';\r\nimport SimpleDialog from 'components/Dialog/SimpleDialog';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport SelectField from 'components/Select';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { PDFExport } from '@progress/kendo-react-pdf';\r\nimport moment from 'moment';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport { useCallbackPrompt } from 'hooks/useCallBackPrompt';\r\nimport DataTable from 'components/DataTable';\r\nimport ConfirmationDialog from 'components/Dialog/ConfirmationDialog';\r\n\r\n// *For Table Style\r\nconst Row = styled(TableRow)(({ theme }) => ({\r\n  border: 0,\r\n\r\n}));\r\n\r\nconst Cell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    fontSize: 14,\r\n    fontFamily: 'Public Sans',\r\n    border: '1px solid #EEEEEE',\r\n    padding: '15px',\r\n    textAlign: 'left',\r\n    whiteSpace: 'nowrap',\r\n    color: '#434343',\r\n    paddingRight: '50px',\r\n    background: 'transparent',\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    fontFamily: 'Public Sans',\r\n\r\n    textWrap: 'nowrap',\r\n    padding: '5px !important',\r\n    paddingLeft: '15px !important',\r\n\r\n    '.MuiBox-root': {\r\n      display: 'flex',\r\n      gap: '6px',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      '.MuiBox-root': {\r\n        cursor: 'pointer'\r\n      }\r\n    },\r\n    'svg': {\r\n      width: 'auto',\r\n      height: '24px',\r\n    },\r\n    '.MuiTypography-root': {\r\n      textTransform: 'capitalize',\r\n      fontFamily: FontFamily.NunitoRegular,\r\n      textWrap: 'nowrap',\r\n    },\r\n    '.MuiButtonBase-root': {\r\n      padding: '8px',\r\n      width: '28px',\r\n      height: '28px',\r\n    }\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  loaderWrap: {\r\n    display: 'flex',\r\n    height: 100,\r\n    '& svg': {\r\n      width: '40px !important',\r\n      height: '40px !important'\r\n    }\r\n  }\r\n})\r\n\r\nfunction CustomerQueue() {\r\n\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const contentRef = useRef(null);\r\n  const [status, setStatus] = useState(null)\r\n  const [statusDialog, setStatusDialog] = useState(false)\r\n  const [selectedData, setSelectedData] = useState(null)\r\n  const [tableLoader, setTableLoader] = useState(false)\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n    getValues,\r\n    reset,\r\n  } = useForm();\r\n\r\n  const tableHead = [{ name: 'SR No.', key: '' }, { name: 'Customer ', key: 'name' }, { name: 'Registration Date', key: 'visa_eligibility' }, { name: 'Deposit Amount', key: 'deposit_total' }, { name: 'Status', key: '' }, { name: 'Actions', key: '' }]\r\n\r\n\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n\r\n  // *For Customer Queue\r\n  const [customerQueue, setCustomerQueue] = useState([]);\r\n\r\n\r\n\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [pageLimit, setPageLimit] = useState(50);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n\r\n\r\n  // *For Filters\r\n  const [filters, setFilters] = useState({});\r\n\r\n  // *For Permissions\r\n  const [permissions, setPermissions] = useState();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [sort, setSort] = useState('desc')\r\n\r\n  // *For Get Customer Queue\r\n  const getCustomerQueue = async (page, limit, filter) => {\r\n    setLoader(true)\r\n\r\n    try {\r\n      const Page = page ? page : currentPage\r\n      const Limit = limit ? limit : pageLimit\r\n      const Filter = filter ? { ...filters, ...filter } : null;\r\n      setCurrentPage(Page)\r\n      setPageLimit(Limit)\r\n      setFilters(Filter)\r\n      let params = {\r\n        page: Page,\r\n        limit: Limit,\r\n        sort_order: sort,\r\n\r\n      }\r\n      params = { ...params, ...Filter }\r\n      const { data } = await CustomerServices.getCustomerQueue(params)\r\n      setCustomerQueue(data?.rows)\r\n      setTotalCount(data?.count)\r\n      setPermissions(formatPermissionData(data?.permissions))\r\n      console.log(formatPermissionData(data?.permissions));\r\n\r\n      setPermissions(formatPermissionData(data?.permissions))\r\n      data?.permissions.forEach(e => {\r\n        if (e?.route && e?.identifier && e?.permitted) {\r\n          dispatch(addPermission(e?.route));\r\n        }\r\n      })\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoader(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSort = (key) => {\r\n    let data = {\r\n      sort_by: key,\r\n      sort_order: sort\r\n    }\r\n    Debounce(() => getCustomerQueue(1, '', data));\r\n  }\r\n\r\n\r\n\r\n  // *For Handle Filter\r\n\r\n  const handleFilter = () => {\r\n    let data = {\r\n      search: getValues('search')\r\n    }\r\n    Debounce(() => getCustomerQueue(1, '', data));\r\n  }\r\n  const handleDelete = async (item) => {\r\n \r\n\r\n    try {\r\n        let params = { customer_id: selectedData?.id }\r\n\r\n\r\n        const { message } = await CustomerServices.handleDeleteCustomer(params)\r\n\r\n        SuccessToaster(message);\r\n        getCustomerQueue()\r\n    } catch (error) {\r\n        showErrorToast(error)\r\n    } finally {\r\n        // setLoader(false)\r\n    }\r\n}\r\n  const UpdateStatus = async () => {\r\n    try {\r\n      let obj = {\r\n        customer_id: selectedData?.id,\r\n        is_active: status?.id,\r\n      };\r\n\r\n      const promise = CustomerServices.CustomerStatus(obj);\r\n      console.log(promise);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        \"Saving...\",\r\n        \"Added Successfully\",\r\n        \"Something Went Wrong\"\r\n      );\r\n\r\n      // Await the promise and then check its response\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        setStatusDialog(false);\r\n        setStatus(null)\r\n        getCustomerQueue();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      header: \"SR No.\",\r\n      accessorKey: \"id\",\r\n\r\n\r\n    },\r\n    {\r\n      header: \"Customer\",\r\n      accessorKey: \"name\",\r\n\r\n\r\n    },\r\n    {\r\n      header: \"Email\",\r\n      accessorKey: \"email\",\r\n\r\n\r\n    },\r\n    {\r\n      header: \"Cost Center\",\r\n      accessorKey: \"cost_center\",\r\n\r\n\r\n    },\r\n    {\r\n      id: \"created_at\",\r\n      header: \"Registration Date\",\r\n      // Remove accessorKey and fix accessorFn to use row directly\r\n      accessorFn: (row) => moment(row.created_at).format(\"MM-DD-YYYY\"),\r\n      cell: ({ row }) => (\r\n        <Box variant=\"contained\" color=\"primary\" sx={{ cursor: \"pointer\", display: \"flex\", gap: 2 }}>\r\n          {moment(row.original.created_at).format(\"MM-DD-YYYY\")}\r\n        </Box>\r\n      ),\r\n    },\r\n\r\n    {\r\n      header: \"Status\",\r\n      cell: ({ row }) => (\r\n\r\n        <Box component={'div'} sx={{ cursor: 'pointer' }} onClick={() => {\r\n          if (permissions?.status_update) {\r\n            setStatusDialog(true)\r\n          }\r\n        }}>\r\n          <Chip sx={{ backgroundColor: row?.original?.is_active ? '#05c105' : '#a13605', color: 'white' }} label={row?.original?.is_active ? 'Enabled' : 'Disabled'} />\r\n\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      header: \"Actions\",\r\n      cell: ({ row }) => (\r\n\r\n        <Box sx={{display:'flex',gap:1}}>\r\n          {row?.original?.name != \"Walk-In Customer\" && <Box component={'img'} sx={{ cursor: \"pointer\" }} onClick={() => { navigate(`/customer-detail/${row?.original?.id}`); localStorage.setItem(\"currentUrl\", '/customer-detail'); }} src={Images.detailIcon} width={'35px'}></Box>}\r\n          {row?.original?.name != \"Walk-In Customer\" && <Box component={'img'} sx={{ cursor: \"pointer\" }} onClick={() => { navigate(`/update-customer/${row?.original?.id}`); localStorage.setItem(\"currentUrl\", '/update-customer') }} src={Images.editIcon} width={'35px'}></Box>}\r\n          <Box>\r\n            {row?.original?.name != \"Walk-In Customer\" && <Box sx={{cursor:'pointer'}} component={'img'} src={Images.deleteIcon} onClick={() => { setSelectedData(row?.original); setConfirmationDialog(true) }} width={'35px'}></Box>}\r\n\r\n            {/* <Box component={'img'} src={Images.deleteIcon} width={'35px'}></Box>  */}\r\n          </Box>\r\n\r\n        </Box>\r\n      ),\r\n    },\r\n\r\n  ]\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getCustomerQueue()\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n\r\n      <ConfirmationDialog\r\n        open={confirmationDialog}\r\n        onClose={() => setConfirmationDialog(false)}\r\n        message={\"Are You Sure?\"}\r\n        action={() => {\r\n          setConfirmationDialog(false);\r\n          handleDelete()\r\n\r\n        }}\r\n      />\r\n      <SimpleDialog\r\n        open={statusDialog}\r\n        onClose={() => setStatusDialog(false)}\r\n        title={\"Change Status?\"}\r\n      >\r\n        <Box component=\"form\" onSubmit={handleSubmit(UpdateStatus)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <SelectField\r\n                size={\"small\"}\r\n                label={\"Select Status :\"}\r\n                options={\r\n\r\n                  [\r\n                    { id: false, name: \"Disabled\" },\r\n                    { id: true, name: \"Enabled\" },\r\n\r\n                  ]}\r\n                selected={status}\r\n                onSelect={(value) => {\r\n                  setStatus(value);\r\n                }}\r\n                error={errors?.status?.message}\r\n                register={register(\"status\", {\r\n                  required: \"Please select status.\",\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid container sx={{ justifyContent: \"center\" }}>\r\n              <Grid\r\n                item\r\n                xs={6}\r\n                sm={6}\r\n                sx={{\r\n                  mt: 2,\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  gap: \"25px\",\r\n                }}\r\n              >\r\n                <PrimaryButton\r\n                  bgcolor={Colors.primary}\r\n                  title=\"Yes,Confirm\"\r\n                  type=\"submit\"\r\n                />\r\n                <PrimaryButton\r\n                  onClick={() => setStatusDialog(false)}\r\n                  bgcolor={\"#FF1F25\"}\r\n                  title=\"No,Cancel\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </SimpleDialog>\r\n\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n        <Typography sx={{ fontSize: '24px', fontWeight: 'bold' }}>Customer List</Typography>\r\n        {true && <PrimaryButton\r\n         bgcolor={'#bd9b4a'}\r\n          title=\"Create Customer\"\r\n          onClick={() => { navigate('/create-customer'); localStorage.setItem(\"currentUrl\", '/create-customer') }}\r\n          loading={loading}\r\n        />}\r\n\r\n\r\n      </Box>\r\n\r\n      {/* Filters */}\r\n      <Box >\r\n\r\n\r\n        {<DataTable loading={loader} data={customerQueue} columns={columns} />}\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CustomerQueue;"],"names":["styled","TableRow","_ref","theme","border","TableCell","_ref2","tableCellClasses","head","fontSize","fontFamily","padding","textAlign","whiteSpace","color","paddingRight","background","fontWeight","body","textWrap","paddingLeft","display","gap","alignItems","justifyContent","cursor","width","height","textTransform","FontFamily","NunitoRegular","useStyles","makeStyles","loaderWrap","_errors$status","navigate","useNavigate","dispatch","useDispatch","status","setStatus","useRef","useState","statusDialog","setStatusDialog","selectedData","setSelectedData","tableLoader","setTableLoader","register","handleSubmit","formState","errors","setValue","getValues","reset","useForm","loader","setLoader","confirmationDialog","setConfirmationDialog","customerQueue","setCustomerQueue","totalCount","setTotalCount","pageLimit","setPageLimit","currentPage","setCurrentPage","filters","setFilters","permissions","setPermissions","loading","setLoading","sort","setSort","getCustomerQueue","async","page","limit","filter","Page","Limit","Filter","params","sort_order","data","CustomerServices","rows","count","formatPermissionData","console","log","forEach","e","route","identifier","permitted","addPermission","error","showErrorToast","columns","header","accessorKey","id","accessorFn","row","moment","created_at","format","cell","_ref3","_jsx","Box","variant","sx","children","original","_ref4","_row$original","_row$original2","component","onClick","status_update","Chip","backgroundColor","is_active","label","_ref5","_row$original3","_row$original5","_row$original7","_jsxs","name","_row$original4","localStorage","setItem","src","Images","detailIcon","_row$original6","editIcon","deleteIcon","useEffect","p","ConfirmationDialog","open","onClose","message","action","customer_id","handleDeleteCustomer","SuccessToaster","handleDelete","SimpleDialog","title","onSubmit","obj","promise","CustomerStatus","showPromiseToast","response","responseCode","Grid","container","spacing","item","xs","sm","SelectField","size","options","selected","onSelect","value","required","mt","PrimaryButton","bgcolor","Colors","primary","type","mb","Typography","DataTable"],"sourceRoot":""}