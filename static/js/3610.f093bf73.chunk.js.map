{"version":3,"file":"static/js/3610.f093bf73.chunk.js","mappings":"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","sources":["pages/Dashboard/UserManagement/UserList.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, tableCellClasses, IconButton, CircularProgress, Chip, Grid, InputLabel,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  ListItemText,\r\n  Tooltip,\r\n  Checkbox,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport { AllocateIcon, CheckIcon, EyeIcon, FontFamily, Images, MessageIcon, PendingIcon, RequestBuyerIdIcon } from 'assets';\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Colors from 'assets/Style/Colors';\r\nimport { CircleLoading } from 'components/Loaders';\r\nimport { ErrorToaster, SuccessToaster } from 'components/Toaster';\r\nimport FinanceStatusDialog from 'components/Dialog/FinanceStatusDialog';\r\nimport AllocateStatusDialog from 'components/Dialog/AllocateStatusDialog';\r\nimport AllocateDialog from 'components/Dialog/AllocateDialog';\r\nimport CustomerServices from 'services/Customer';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Pagination from 'components/Pagination';\r\nimport { Debounce, encryptData, formatPermissionData, handleExportWithComponent } from 'utils';\r\nimport InputField from 'components/Input';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPermission } from 'redux/slices/navigationDataSlice';\r\nimport SimpleDialog from 'components/Dialog/SimpleDialog';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport SelectField from 'components/Select';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { PDFExport } from '@progress/kendo-react-pdf';\r\nimport moment from 'moment';\r\nimport CommissionServices from 'services/Commission';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport { adjustSectionValue } from '@mui/x-date-pickers/internals/hooks/useField/useField.utils';\r\nimport SystemServices from 'services/System';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport UserServices from 'services/User';\r\n\r\n// *For Table Style\r\nconst Row = styled(TableRow)(({ theme }) => ({\r\n  border: 0,\r\n\r\n}));\r\n\r\nconst Cell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    fontSize: 14,\r\n    fontFamily: 'Public Sans',\r\n    border: '1px solid #EEEEEE',\r\n    padding: '15px',\r\n    textAlign: 'left',\r\n    whiteSpace: 'nowrap',\r\n    color: '#434343',\r\n    paddingRight: '50px',\r\n    background: 'transparent',\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    fontFamily: 'Public Sans',\r\n\r\n    textWrap: 'nowrap',\r\n    padding: '5px !important',\r\n    paddingLeft: '15px !important',\r\n    '.MuiBox-root': {\r\n      display: 'flex',\r\n      gap: '6px',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      '.MuiBox-root': {\r\n        cursor: 'pointer'\r\n      }\r\n    },\r\n    'svg': {\r\n      width: 'auto',\r\n      height: '24px',\r\n    },\r\n    '.MuiTypography-root': {\r\n      textTransform: 'capitalize',\r\n      fontFamily: FontFamily.NunitoRegular,\r\n      textWrap: 'nowrap',\r\n    },\r\n    '.MuiButtonBase-root': {\r\n      padding: '8px',\r\n      width: '28px',\r\n      height: '28px',\r\n    }\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  loaderWrap: {\r\n    display: 'flex',\r\n    height: 100,\r\n    '& svg': {\r\n      width: '40px !important',\r\n      height: '40px !important'\r\n    }\r\n  }\r\n})\r\n\r\nfunction UserList() {\r\n  const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const contentRef = useRef(null);\r\n\r\n\r\n  const tableHead = [{ name: 'Create Date', key: '' }, { name: 'User Name ', key: 'name' },{ name: 'Employee ID', key: 'employee_id' }, { name: 'User Role', key: '' }, { name: 'Status', key: '' }, { name: 'Actions', key: '' }]\r\n\r\n\r\n\r\n\r\n\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [sort, setSort] = useState('asc')\r\n\r\n\r\n  // *For Customer Queue\r\n  const [UserList, setUserList] = useState([]);\r\n\r\n\r\n\r\n  // *For setPermissions\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [pageLimit, setPageLimit] = useState(50);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [deleteDialog, setDeleteDialog] = useState(false)\r\n\r\n  const [itemAmount, setItemAmount] = useState()\r\n\r\n  // *For Filters\r\n  const [filters, setFilters] = useState({});\r\n\r\n  // *For Permissions\r\n  const [permissions, setPermissions] = useState();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [selectedID, setSelectedID] = useState()\r\n\r\n  // *For Get Customer Queue\r\n  const getUserRole = async (page, limit, filter) => {\r\n    // setLoader(true)\r\n    try {\r\n      const Page = page ? page : currentPage\r\n      const Limit = limit ? limit : pageLimit\r\n      const Filter = filter ?  { ...filters, ...filter } : null;\r\n      setCurrentPage(Page)\r\n      setPageLimit(Limit)\r\n      setFilters(Filter)\r\n      let params = {\r\n        page: Page,\r\n        limit: Limit,\r\n      }\r\n      params = { ...params, ...Filter }\r\n\r\n      const { data } = await UserServices.getUsers(params)\r\n      setUserList(data?.users?.rows)\r\n      setTotalCount(data?.users?.count)\r\n      console.log(formatPermissionData(data?.permissions)) \r\n      setPermissions(formatPermissionData(data?.permissions))\r\n      data?.permissions.forEach(e => {\r\n        if (e?.route && e?.identifier && e?.permitted) {\r\n          dispatch(addPermission(e?.route));\r\n        }\r\n      })\r\n\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n\r\n\r\n  // *For Create Role\r\n  const handleStatus = async (status) => {\r\n    setLoading(true)\r\n\r\n    try {\r\n      let obj = {\r\n        id: selectedID,\r\n        is_active:status\r\n      }\r\n\r\n\r\n      console.log(obj);\r\n      const promise = UserServices.updateUser(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving ...',\r\n        'Success',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        getUserRole()\r\n        setDeleteDialog(false)\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // *For Handle Filter\r\n  const handleFilter = () => {\r\n    let data = {\r\n      search: getValues('search')\r\n    }\r\n    Debounce(() => getUserRole(1, '', data));\r\n  }\r\n\r\n  const handleSort = (key) => {\r\n    let data = {\r\n      sort_by: key,\r\n      sort_order: sort\r\n    }\r\n    Debounce(() => getUserRole(1, '', data));\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getUserRole()\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <SimpleDialog\r\n        open={deleteDialog}\r\n        onClose={() => setDeleteDialog(false)}\r\n        title={'Are You Sure?'}\r\n      >\r\n\r\n        <Grid container spacing={2}>\r\n\r\n\r\n          <Grid container sx={{ justifyContent: 'center' }}>\r\n            <Grid item xs={6} sm={6} sx={{ mt: 2, display: 'flex', justifyContent: 'space-between', gap: '25px' }}>\r\n              <PrimaryButton bgcolor={Colors.primary} title=\"Activate\" onClick={() => handleStatus(true)} />\r\n              <PrimaryButton onClick={() => handleStatus(false)} bgcolor={'#FF1F25'} title=\"Deactivate\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </SimpleDialog>\r\n\r\n\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n        <Typography sx={{ fontSize: '24px', fontWeight: 'bold' }}>User Management</Typography>\r\n        {true && <PrimaryButton\r\n         bgcolor={'#bd9b4a'}\r\n          title=\"Create User\"\r\n          onClick={() => navigate('/create-user')}\r\n          loading={loading}\r\n        />}\r\n\r\n\r\n      </Box>\r\n\r\n      {/* Filters */}\r\n      <Box >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} >\r\n            <LabelCustomInput type={'text'} bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'Search'} placeholder={'Search'} register={register(\"search\")} />\r\n          </Grid>\r\n          {/* <Grid item xs={3} >\r\n                        <LabelCustomInput type={'text'} bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'By Customers'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <LabelCustomInput bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'By Commission'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <LabelCustomInput bgcolor={'#FAFAFA'} color={Colors.primary} border={'2px solid #FAFAFA'} StartLabel={'By Date'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid> */}\r\n          <Grid item xs={6} display={'flex'} justifyContent={'flex-end'} gap={2} >\r\n            <PrimaryButton\r\n             bgcolor={\"#0076bf\"}\r\n             textcolor={Colors.white}\r\n              // border={`1px solid ${Colors.primary}`}\r\n              title=\"Reset\"\r\n              onClick={() => {setValue('search', ''); getUserRole(1,'',null);  }}\r\n              loading={loading}\r\n            />\r\n            <PrimaryButton\r\n             bgcolor={'#bd9b4a'}\r\n              title=\"Search\"\r\n              onClick={() => handleFilter()}\r\n              loading={loading}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item md={11}>\r\n          {UserList && <Box>\r\n\r\n            <Grid container mb={2} >\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            {(\r\n              UserList && (\r\n                <Fragment>\r\n                  <PDFExport ref={contentRef} landscape={true} paperSize=\"A4\" margin={5} fileName='Import Customers' >\r\n\r\n                    <TableContainer\r\n                      component={Paper}\r\n                      sx={{\r\n                        maxHeight: 'calc(100vh - 200px)', mt: 5, backgroundColor: 'transparent', boxShadow: 'none !important', borderRadius: '0px !important'\r\n\r\n                      }}\r\n\r\n                    >\r\n                      <Table stickyHeader sx={{ minWidth: 500 }}>\r\n                        <TableHead>\r\n\r\n                          <Row>\r\n                            {tableHead.map((cell, index) => (\r\n                              <Cell style={{ textAlign: 'left !important' }} className=\"pdf-table\"\r\n                                key={index}\r\n\r\n                              >\r\n                                <Box >\r\n                                  {cell?.name}\r\n                                </Box>\r\n                              </Cell>\r\n                            ))}\r\n                          </Row>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {UserList.map((item, index) => {\r\n\r\n                            return (\r\n                              <Row\r\n                                key={index}\r\n                                sx={{\r\n                                  border: '1px solid #EEEEEE !important',\r\n                                }}\r\n                              >\r\n\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  {moment(item?.created_at).format('MM-DD-YYYY')}\r\n                                </Cell>\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  {item?.name}\r\n                                </Cell>\r\n\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  {item?.employee_id}\r\n                                </Cell>\r\n\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  {item?.role?.name}\r\n\r\n\r\n                                </Cell>\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  <Box component={'div'} onClick={() => { \r\n                                    if(permissions?.status_update){\r\n                                      setDeleteDialog(true); setSelectedID(item?.id)\r\n                                    }\r\n                                     }} sx={{ cursor: 'pointer', display: 'flex !important', justifyContent: 'flex-start !important' }}>\r\n                                    <Box component={'img'} src={item?.is_active ? Images.successIcon : Images.errorIcon} width={'13px'}></Box>\r\n                                    {item?.is_active ? \"Activated\" : 'Deactivated'}\r\n                                  </Box>\r\n\r\n\r\n                                </Cell>\r\n                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                  <Box sx={{ display: 'flex !important', justifyContent: 'flex-start !important' }}>\r\n\r\n                                    {permissions?.edit && <Box component={'img'} src={Images.editIcon} onClick={() => navigate(\r\n                                      `/update-user`,\r\n                                      { state: item }\r\n                                    )} width={'35px'}></Box>}\r\n\r\n\r\n                                  </Box>\r\n                                </Cell>\r\n\r\n\r\n\r\n\r\n                              </Row>\r\n\r\n                            );\r\n                          })}\r\n\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </PDFExport>\r\n                  {/* ========== Pagination ========== */}\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    pageSize={pageLimit}\r\n                    onPageSizeChange={(size) => getUserRole(1, size.target.value)}\r\n                    tableCount={UserList?.length}\r\n                    totalCount={totalCount}\r\n                    onPageChange={(page) => getUserRole(page, \"\")}\r\n                  />\r\n\r\n                </Fragment>\r\n              )\r\n            )}\r\n\r\n\r\n            {loader && <CircleLoading />}\r\n\r\n\r\n          </Box>}\r\n\r\n\r\n\r\n\r\n\r\n        </Grid>\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UserList;"],"names":["Row","styled","TableRow","_ref","theme","border","Cell","TableCell","_ref2","tableCellClasses","head","fontSize","fontFamily","padding","textAlign","whiteSpace","color","paddingRight","background","fontWeight","body","textWrap","paddingLeft","display","gap","alignItems","justifyContent","cursor","width","height","textTransform","FontFamily","NunitoRegular","useStyles","makeStyles","loaderWrap","register","handleSubmit","getValues","setValue","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","contentRef","useRef","loader","setLoader","useState","sort","setSort","UserList","setUserList","totalCount","setTotalCount","pageLimit","setPageLimit","currentPage","setCurrentPage","deleteDialog","setDeleteDialog","itemAmount","setItemAmount","filters","setFilters","permissions","setPermissions","loading","setLoading","selectedID","setSelectedID","getUserRole","async","page","limit","filter","_data$users","_data$users2","Page","Limit","Filter","params","data","UserServices","getUsers","users","rows","count","console","log","formatPermissionData","forEach","e","route","identifier","permitted","addPermission","error","showErrorToast","handleStatus","obj","id","is_active","status","promise","updateUser","showPromiseToast","response","responseCode","useEffect","_jsxs","Box","sx","p","children","_jsx","SimpleDialog","open","onClose","title","Grid","container","spacing","item","xs","sm","mt","PrimaryButton","bgcolor","Colors","primary","onClick","mb","Typography","LabelCustomInput","type","StartLabel","placeholder","textcolor","white","handleFilter","search","Debounce","md","Fragment","PDFExport","ref","landscape","paperSize","margin","fileName","TableContainer","component","Paper","maxHeight","backgroundColor","boxShadow","borderRadius","Table","stickyHeader","minWidth","TableHead","name","key","map","cell","index","style","className","TableBody","_item$role","moment","created_at","format","employee_id","role","status_update","src","Images","successIcon","errorIcon","edit","editIcon","state","Pagination","pageSize","onPageSizeChange","size","target","value","tableCount","length","onPageChange","CircleLoading"],"sourceRoot":""}