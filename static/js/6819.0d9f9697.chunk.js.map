{"version":3,"file":"static/js/6819.0d9f9697.chunk.js","mappings":"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","sources":["pages/Dashboard/AlDeed/CreateAldeed.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Checkbox,\r\n    Container,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    Table,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Typography,\r\n    TableBody,\r\n    TableHead,\r\n    TextField,\r\n    Paper,\r\n} from \"@mui/material\";\r\nimport RegisterContainer from \"container/Register\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport MobileStepper from \"@mui/material/MobileStepper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport { PrimaryButton } from \"components/Buttons\";\r\nimport Colors from \"assets/Style/Colors\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport UploadFile from \"components/UploadFile\";\r\nimport InputField from \"components/Input\";\r\nimport DatePicker from \"components/DatePicker\";\r\nimport { ErrorToaster } from \"components/Toaster\";\r\nimport { FormControl } from \"@mui/base\";\r\nimport LabelCustomInput from \"components/Input/LabelCustomInput\";\r\nimport SelectField from \"components/Select\";\r\nimport {\r\n    CleanTypes,\r\n    Debounce,\r\n    Debounce2,\r\n    getFileSize,\r\n    handleDownload,\r\n} from \"utils\";\r\nimport instance from \"config/axios\";\r\nimport routes from \"services/System/routes\";\r\nimport CustomerServices from \"services/Customer\";\r\nimport CustomerService from \"../DashboardPages/CustomerService\";\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\";\r\nimport moment from \"moment\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport SystemServices from \"services/System\";\r\nimport UploadFileSingle from \"components/UploadFileSingle\";\r\nimport { Images } from \"assets\";\r\nimport { useCallbackPrompt } from \"hooks/useCallBackPrompt\";\r\nimport { addMonths } from \"date-fns\";\r\nimport { useAuth } from \"context/UseContext\";\r\nimport DoDisturbIcon from \"@mui/icons-material/DoDisturb\";\r\nimport axios from \"axios\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport FinanceServices from \"services/Finance\";\r\nimport Barcode from \"react-barcode\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n// import { TableBody, TableHead } from \"mui-datatables\";\r\n\r\nfunction CreateAldeed() {\r\n  const invoiceRef = useRef(null);\r\n    const theme = useTheme();\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [formChange, setFormChange] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n    const [excludeFromSales, setExcludeFromSales] = useState(\"no\");\r\n    const [excludeFromPurchase, setExcludeFromPurchase] = useState(\"no\");\r\n    const [total, setTotal] = useState(0);\r\n    const [subTotal, setSubTotal] = useState(0);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const generatePDF = async () => {\r\n        if (!invoiceRef.current) return;\r\n      \r\n        // Temporarily hide the content while generating the PDF\r\n        const invoiceElement = invoiceRef.current;\r\n        invoiceElement.style.display = 'block';  // Hide the element\r\n      \r\n        // Capture the content using html2canvas\r\n        const canvas = await html2canvas(invoiceElement, {\r\n          scale: 1,\r\n          useCORS: true,\r\n          logging: false,\r\n        });\r\n      \r\n        const imgData = canvas.toDataURL(\"image/png\");\r\n        const pdf = new jsPDF({\r\n          orientation: \"portrait\",\r\n          unit: \"mm\",\r\n          format: \"a4\",\r\n        });\r\n      \r\n        const imgWidth = 210;\r\n        const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      \r\n        // Add image to the PDF\r\n        pdf.addImage(imgData, \"PNG\", 0, 0, imgWidth, imgHeight);\r\n      \r\n        // Save the generated PDF\r\n        pdf.save(\"invoice.pdf\");\r\n      \r\n        // Restore the content visibility after generating the PDF\r\n        invoiceElement.style.display = 'none';  // Show the content again\r\n      };\r\n      \r\n\r\n    console.log(rows, \"data\")\r\n    const [items, setItems] = useState([\r\n        {\r\n            itemCode: \"\",\r\n            itemDescription: \"TASHEEL AUTO 19\",\r\n            totalCharge: 17.1,\r\n            mbNo: \"\",\r\n            applicationId: \"\",\r\n            total: 17.1,\r\n        },\r\n    ]);\r\n\r\n    // const addItem = () => {\r\n    //   const newItem = {\r\n    //     itemCode: \"\",\r\n    //     itemDescription: \"\",\r\n    //     totalCharge: 0,\r\n    //     mbNo: \"\",\r\n    //     applicationId: \"\",\r\n    //     total: 0,\r\n    //   };\r\n    //   setItems([...items, newItem]);\r\n    // };\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        getValues,\r\n        setValue,\r\n        watch,\r\n        reset,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const {\r\n        register: register1,\r\n        handleSubmit: handleSubmit1,\r\n        setValue: setValue1,\r\n        getValues: getValues1,\r\n        control,\r\n        watch: watch1,\r\n        formState: { errors: errors1 },\r\n    } = useForm();\r\n\r\n    // Watch all form data\r\n\r\n    // Watch for changes in the fee-related fields\r\n    const govtFee = watch('govt_fee', 0);\r\n    const centerFee = watch('center_fee', 0);\r\n    const bankCharges = watch('bank_charges', 0);\r\n    const qty = watch('qty', 1);\r\n    useEffect(() => {\r\n        const feesTotal = (parseFloat(govtFee) || 0) + (parseFloat(centerFee) || 0) + (parseFloat(bankCharges) || 0);\r\n        const finalTotal = feesTotal * (parseFloat(qty) || 1);\r\n        setValue(\"total\", finalTotal);\r\n    }, [govtFee, centerFee, bankCharges, qty]);\r\n\r\n    const addItem = (data) => {\r\n        const total = data.total;\r\n        setRows((prevRows) => {\r\n            const updatedRows = [...prevRows, data];\r\n            const newSubTotal = updatedRows.reduce((sum, row) => sum + row.total, 0);\r\n            setSubTotal(newSubTotal);\r\n            return updatedRows;\r\n        });\r\n        reset();\r\n        setServiceItem(\"\")\r\n    };\r\n    const isFormDataEmpty = (data) => {\r\n        // Check if all form fields are empty\r\n        return Object.values(data).every((value) => {\r\n            // If the value is an object (like companyLogo), check if it's empty\r\n            if (typeof value === \"object\" && value !== null) {\r\n                return Object.keys(value).length === 0;\r\n            }\r\n            // Otherwise, check if the value is an empty string\r\n            return value === \"\";\r\n        });\r\n    };\r\n\r\n    const allowFilesType = [\r\n        \"image/png\",\r\n        \"image/jpg\",\r\n        \"image/jpeg\",\r\n        \"application/pdf\",\r\n        \"application/vnd.ms-excel\",\r\n        \"application/msword\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n    ];\r\n    const allowFilesType2 = [\"image/png\", \"image/jpg\", \"image/jpeg\"];\r\n    const [guarantors, setGuarantors] = useState([]);\r\n    const [activeStep, setActiveStep] = React.useState(1);\r\n\r\n    // *For Deposit Slip\r\n    const [progress, setProgress] = useState(0);\r\n    const [uploadedSize, setUploadedSize] = useState(0);\r\n    const [slipDetail, setSlipDetail] = useState([]);\r\n\r\n    const [selectedDue, setSelectedDue] = useState({\r\n        id: \"Instant\",\r\n        name: \"Instant\",\r\n    });\r\n    const [passport, setPassport] = useState();\r\n    const [allocation, setAllocation] = useState(false);\r\n    const [depositError, setDepositError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailVerify, setEmailVerify] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [center, setCenter] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const [fieldsDisabled, setFieldsDisabled] = useState(false)\r\n\r\n    // *For Stepper Forms Data\r\n    const [stepFormData, setStepFormData] = useState();\r\n    const [step1FormData, setStep1FormData] = useState();\r\n    const [selectedType, setSelectedType] = useState(null);\r\n    const [date, setDate] = useState(new Date());\r\n    const [balanceType, setBalanceType] = useState(null);\r\n    const [imageURL, setImageURL] = useState(null);\r\n    const fileInputRef = useRef(null);\r\n    const [hovered, setHovered] = useState(false);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [salesAccount, setSalesAccount] = useState(null);\r\n    const [inventoryAccount, setInventoryAccount] = useState(null);\r\n    const [cogsAccount, setCogsAccount] = useState(null);\r\n    const [adjustmentAccount, setAdjustmentAccount] = useState(null);\r\n    const [assemblyAccount, setAssemblyAccount] = useState(null);\r\n    const [itemType, setItemType] = useState(null);\r\n    const [unit, setUnit] = useState(null);\r\n    const [taxes, setTaxes] = useState([]);\r\n    const [tax, setTax] = useState(null);\r\n    const [category, setCategory] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [governmentAccount, setGovernmnentAccount] = useState(null);\r\n    const [description, setDescription] = useState(null);\r\n    const [ownGovBank, setOwnGovBank] = useState(null);\r\n    const [services, setServices] = useState(null);\r\n    const [serviceItem, setServiceItem] = useState(null);\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n    const [detail, setDetail] = useState(null)\r\n    const [invoiceData, setInvoiceData] = useState(null)\r\n    //documents array\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const submitForm1 = async (formData) => {\r\n\r\n        let invoice = {\r\n            date:moment(date).format(\"DD-MM-YYYY\"),\r\n            invoiceType: detail?.invoice_number,\r\n            \r\n            trn:formData?.trn,\r\n            tokenNumber: detail?.token_number,\r\n            customerName: formData?.display_customer,\r\n            mobileNo: formData?.mobile,\r\n            customerReference: formData?.ref,\r\n            customerAddress: formData?.address,\r\n            items: rows,\r\n            totalSales: 367.25,\r\n            netTaxableAmount: 27.5,\r\n            totalVAT: 1.38,\r\n            grossTotal: 396.13,\r\n            customerCardPayment: 0.0,\r\n            totalPayable: 396.13,\r\n          };\r\n    setInvoiceData(invoice)\r\n         \r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                id:detail?.id,\r\n                // token_number: formData?.token,\r\n                token_date: date,\r\n                invoice_prefix: \"AAD\",\r\n                cost_center: formData?.cost_center?.id,\r\n                trn: formData?.trn,\r\n                case_no: formData?.caseno,\r\n                customer_name: formData?.display_customer,\r\n                reception_id: detail?.id,\r\n                customer_mobile: formData?.mobile,\r\n                customer_email: formData?.email,\r\n                ref: formData?.ref,\r\n                total_amount: subTotal,\r\n\r\n                items: rows\r\n            };\r\n            console.log(formData, \"formData\");\r\n            const promise = CustomerServices.CreateAlDed(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                generatePDF()\r\n                navigate(\"/aldeed-list\");\r\n\r\n            }\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    // *For Get Account\r\n    const getReceptionDetail = async (state) => {\r\n        setFieldsDisabled(true)\r\n        try {\r\n            let params = {\r\n                token_number: getValues1(\"token\"),\r\n            };\r\n            if (state) {\r\n                params = {\r\n                    invoice_number: getValues1(\"invoicenumber\"),\r\n                };\r\n            }\r\n            const { data } = await CustomerServices.getReceiptDetail(params);\r\n            console.log(data, \"dataaa\");\r\n            if(  data?.receipt?.is_presale == true){\r\n\r\n                setDetail(data?.receipt)\r\n                setValue1(\"customer\", data?.receipt?.customer_name);\r\n                setValue1(\"invoice_date\", moment().toDate());\r\n                setValue1(\"mobile\", data?.receipt?.customer_mobile);\r\n                setValue1(\"ref\", data?.receipt?.ref);\r\n                setValue1(\"display_customer\", data?.receipt?.customer_name);\r\n                setValue1(\"email\", data?.receipt?.customer_email);\r\n                setValue1(\"address\", data?.receipt?.address);\r\n                setValue1(\"trn\", data?.receipt?.trn);\r\n                setValue1(\"cost_center\", data?.receipt?.cost_center);\r\n                setValue1(\"caseno\", data?.receipt?.case_no);\r\n                setSubTotal(data?.receipt?.total_amount)\r\n                setRows(data?.receipt?.sale_receipt_items)\r\n                setAccounts(data?.accounts?.rows);\r\n            }else if(data?.receipt == null){\r\n\r\n                ErrorToaster(\"Invoice Not  Found\")\r\n            }\r\n            else{\r\n                ErrorToaster(\"Invoice Already Created\")\r\n            }\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n\r\n    const getServiceItem = async () => {\r\n        // setLoader(true)\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n            };\r\n\r\n            const { data } = await CustomerServices.getServiceItem(params);\r\n\r\n            setServices(data?.rows);\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n    const handleServiceSelect = async (value) => {\r\n        console.log(value, \"idididid\");\r\n        setServiceItem(value);\r\n        // setLoader(true)\r\n        try {\r\n            let params = {\r\n                service_id: value?.id,\r\n            };\r\n\r\n            const { data } = await CustomerServices.DetailServiceItem(params);\r\n            setValue(\"item_code\", data?.service?.id);\r\n            setValue(\"govt_fee\", data?.service?.bank_service_charge);\r\n            setValue(\"center_fee\", data?.service?.center_fee);\r\n            setValue(\"bank_charges\", data?.service?.bank_service_charge);\r\n\r\n            setValue(\"qty\", 1);\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n\r\n    const getAccounts = async (page, limit, filter) => {\r\n        // setLoader(true)\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n            };\r\n\r\n            const { data } = await FinanceServices.getAccounts(params);\r\n            console.log(data?.accounts?.rows);\r\n\r\n            setAccounts(data?.accounts?.rows);\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n    const getTax = async () => {\r\n        // setLoader(true)\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n            };\r\n\r\n            const { data } = await FinanceServices.getTax(params);\r\n            console.log(data?.accounts?.rows);\r\n\r\n            setTaxes(data?.tax);\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n    const getCategories = async () => {\r\n        // setLoader(true)\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 1000,\r\n            };\r\n\r\n            const { data } = await CustomerServices.getCategoryList(params);\r\n\r\n            setCategories(data?.categories);\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAccounts();\r\n        getTax();\r\n        getCategories();\r\n        getServiceItem();\r\n        setSelectedCustomer({ id: \"walkin\", name: \"Walk-in Customer\" })\r\n        setValue1(\"customer\", { id: \"walkin\", name: \"Walk-in Customer\" })\r\n    }, []);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Box sx={{ width: \"100%\" }}></Box>\r\n            <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n                {\r\n                    <>\r\n                        <Box component={\"form\"} onSubmit={handleSubmit1(submitForm1)}>\r\n                            <Box\r\n                                sx={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    gap: \"10px\",\r\n                                    p: 3,\r\n                                    alignItems: \"flex-end\",\r\n                                }}\r\n                            >\r\n                                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>\r\n                                    Create Al-ADHEED\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box sx={{ p: 3 }}>\r\n                                <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container gap={2} alignItems={'center'}>\r\n                                            <Grid item md={3} sm={12} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Token\"\r\n                                                    size=\"small\"\r\n                                                    disabled={fieldsDisabled}\r\n                                                    placeholder=\"Enter Token\"\r\n                                                    register={register1(\"token\")}\r\n                                                    InputProps={{\r\n                                                        endAdornment: (\r\n                                                            <IconButton onClick={() => getReceptionDetail()}>\r\n                                                                <SearchIcon sx={{ color: \"#bd9b4a\" }} />\r\n                                                            </IconButton>\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3} sm={12} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Invoice Number\"\r\n                                                    size=\"small\"\r\n                                                    disabled={fieldsDisabled}\r\n                                                    placeholder=\"Invoice Number\"\r\n                                                    register={register1(\"invoicenumber\")}\r\n                                                    InputProps={{\r\n                                                        endAdornment: (\r\n                                                            <IconButton onClick={() => getReceptionDetail(true)}>\r\n                                                                <SearchIcon sx={{ color: \"#bd9b4a\" }} />\r\n                                                            </IconButton>\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={1} sm={12} xs={12} mt={2}>\r\n                                                <PrimaryButton\r\n                                                    bgcolor={'#bd9b4a'}\r\n                                                    title=\"Clear\"\r\n                                                    onClick={() => {\r\n                                                        setFieldsDisabled(false)\r\n                                                        setValue1('token', '')\r\n                                                        setValue1('invoicenumber', '')\r\n                                                        setValue1(\"customer\", '');\r\n                                                        setValue1(\"invoice_date\", '');\r\n                                                        setValue1(\"mobile\", '');\r\n                                                        setValue1(\"ref\", '');\r\n                                                        setValue1(\"display_customer\", '');\r\n                                                        setValue1(\"email\", '');\r\n                                                        setValue1(\"address\", '');\r\n                                                        setValue1(\"trn\", '');\r\n                                                        setValue1(\"cost_center\", '');\r\n                                                    }}\r\n                                                    loading={loading}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3} sm={12} xs={12}>\r\n                                                <DatePicker\r\n                                                    label={\"Invoice Date :*\"}\r\n                                                    value={date}\r\n                                                    size={'small'}\r\n\r\n                                                    error={errors1?.date?.message}\r\n                                                    register={register1(\"date\", {\r\n                                                        required:\r\n                                                            date ? false :\r\n                                                                \"please enter  date.\"\r\n\r\n                                                    })}\r\n                                                    maxDate={new Date()}\r\n                                                    onChange={(date) => {\r\n\r\n                                                        setValue1('date', date)\r\n                                                        setDate(new Date(date));\r\n\r\n                                                    }\r\n\r\n                                                    }\r\n                                                /></Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    {/* <Grid\r\n                                        item\r\n                                        md={5.5}\r\n                                        sm={12}\r\n                                        xs={12}\r\n                                        sx={{\r\n                                            border: \"2px solid black\",\r\n                                            p: 2,\r\n                                            borderRadius: \"15px\",\r\n                                        }}\r\n                                    >\r\n                                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n\r\n                                            <Grid item xs={5.7}>\r\n                                                <DatePicker\r\n                                                    label={\"Invoice Date :*\"}\r\n                                                    value={date}\r\n                                                    size={'small'}\r\n\r\n                                                    error={errors1?.date?.message}\r\n                                                    register={register1(\"date\", {\r\n                                                        required:\r\n                                                            date ? false :\r\n                                                                \"please enter  date.\"\r\n\r\n                                                    })}\r\n                                                    onChange={(date) => {\r\n\r\n                                                        setValue1('date', date)\r\n                                                        setDate(new Date(date));\r\n\r\n                                                    }\r\n\r\n                                                    }\r\n                                                /></Grid>\r\n\r\n                                            <Grid item xs={5.7} >\r\n                                                <SelectField\r\n                                                    size={'small'}\r\n                                                    label={'Customer *:'}\r\n                                                    disabled={true}\r\n                                                    options={[{ id: \"walkin\", name: \"Walk-in Customer\" }]}\r\n                                                    selected={selectedCustomer}\r\n                                                    onSelect={(value) => {\r\n                                                        setSelectedCustomer(value)\r\n\r\n\r\n                                                    }}\r\n                                                    error={errors1?.customer?.message}\r\n                                                    register={register1(\"customer\", {\r\n                                                        required: false,\r\n                                                    })}\r\n                                                />\r\n                                            </Grid>\r\n\r\n\r\n\r\n                                        </Grid>\r\n                                    </Grid> */}\r\n                                    <Grid\r\n                                        item\r\n                                        md={12}\r\n                                        sm={12}\r\n                                        xs={12}\r\n                                        sx={{\r\n                                            border: \"2px solid black\",\r\n                                            p: 2,\r\n                                            borderRadius: \"15px\",\r\n                                            mt: { md: 0, sm: 2, xs: 2 },\r\n                                        }}\r\n                                    >\r\n                                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Display Customer\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Walk-in Customer\"\r\n                                                    register={register1(\"display_customer\", {\r\n                                                        required: 'please enter display name.'\r\n                                                    })}\r\n                                                    error={errors1?.display_customer?.message}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Mobile\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Mobile No\"\r\n\r\n                                                    register={register1(\"mobile\", {\r\n                                                        required: 'please enter mobile .'\r\n                                                    })}\r\n                                                    error={errors1?.mobile?.message}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Email\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Email\"\r\n\r\n                                                    register={register1(\"email\", {\r\n                                                        required: 'please enter email .'\r\n                                                    })}\r\n                                                    error={errors1?.email?.message}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"TRN\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"TRN\"\r\n\r\n\r\n                                                    register={register1(\"trn\", {\r\n                                                        required: 'please enter trn .'\r\n                                                    })}\r\n                                                    error={errors1?.trn?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Case No\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Case No\"\r\n\r\n\r\n                                                    register={register1(\"caseno\", {\r\n                                                        required: 'please enter caseno .'\r\n                                                    })}\r\n                                                    error={errors1?.caseno?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Ref\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Reference\"\r\n                                                    register={register1(\"ref\")}\r\n                                                />\r\n                                            </Grid>\r\n\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <SelectField\r\n                                                    label=\"Cost Center\"\r\n                                                    size=\"small\"\r\n                                                    options={[{ id: 'Al-ADHEED', name: 'Al-ADHEED' }]}\r\n                                                    selected={watch1(\"cost_center\")}\r\n                                                    onSelect={(value) => setValue1(\"cost_center\", value)}\r\n\r\n                                                    register={register1(\"cost_center\", {\r\n                                                        required: 'please enter cost center .'\r\n                                                    })}\r\n                                                    error={errors1?.cost_center?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3.8} sm={5.5} xs={12} >\r\n                                                <SelectField\r\n                                                    size={'small'}\r\n                                                    label={'Customer *:'}\r\n                                                    disabled={true}\r\n                                                    options={[{ id: \"walkin\", name: \"Walk-in Customer\" }]}\r\n                                                    selected={selectedCustomer}\r\n                                                    onSelect={(value) => {\r\n                                                        setSelectedCustomer(value)\r\n\r\n\r\n                                                    }}\r\n                                                    error={errors1?.customer?.message}\r\n                                                    register={register1(\"customer\", {\r\n                                                        required: false,\r\n                                                    })}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item md={3.8} sm={5.5} xs={12}>\r\n                                                <InputField\r\n                                                    label=\"Address\"\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Address\"\r\n                                                    multiline\r\n                                                    rows={2}\r\n\r\n                                                    register={register1(\"address\", {\r\n                                                        required: 'please enter address .'\r\n                                                    })}\r\n                                                    error={errors1?.address?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n                                </Grid>\r\n                            </Box>\r\n                       \r\n\r\n\r\n                        <form >\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Item Code</TableCell>\r\n                                            <TableCell sx={{ width: \"400px\" }}>Service</TableCell>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Qty</TableCell>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Govt fee</TableCell>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Center fee</TableCell>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Bank Charge</TableCell>\r\n\r\n                                            <TableCell sx={{ width: \"150px\" }}>Total</TableCell>\r\n                                            <TableCell sx={{ width: \"150px\" }}>Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {/* <TableRow>\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    size=\"small\"\r\n                                                    disabled={true}\r\n                                                    placeholder=\"Item code\"\r\n                                                    register={register(\"item_code\", { required: \"Item code is required\" })}\r\n                                                />\r\n                                                {errors.item_code && <span>{errors.item_code.message}</span>}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <SelectField\r\n                                                    size=\"small\"\r\n                                                    options={services}\r\n                                                    selected={serviceItem}\r\n                                                    onSelect={handleServiceSelect}\r\n                                                    //  error={errors?.service?.message}\r\n                                                    register={register(\"service\", {\r\n                                                        required: \"Please select a service.\",\r\n                                                    })}\r\n                                                />\r\n                                                {errors.service && <span style={{ color: \"red\" }}>{errors.service.message}</span>}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Quantity\"\r\n                                                    type=\"number\"\r\n                                                    register={register(\"qty\", {\r\n                                                        required: \"Quantity is required\",\r\n                                                        min: {\r\n                                                            value: 1,\r\n                                                            message: \"Quantity must be at least 0\",\r\n                                                        },\r\n                                                    })}\r\n                                                />\r\n                                                {errors.qty && <span style={{ color: \"red\" }}>{errors.qty.message}</span>}\r\n                                            </TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Govt fee\"\r\n                                                    type=\"number\"\r\n                                                    register={register(\"govt_fee\", {\r\n                                                        required: \"Govt fee is required\",\r\n                                                        min: {\r\n                                                            value: 1,\r\n                                                            message: \"Govt fee must be at least 0\",\r\n                                                        },\r\n                                                    })}\r\n                                                />\r\n                                                {errors.govt_fee && <span style={{ color: \"red\" }}>{errors.govt_fee.message}</span>}\r\n                                            </TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Center Fee\"\r\n                                                    type=\"number\"\r\n                                                    register={register(\"center_fee\", {\r\n                                                        required: \"Center fee is required\",\r\n                                                        min: {\r\n                                                            value: 1,\r\n                                                            message: \"Center fee must be at least 0\",\r\n                                                        },\r\n                                                    })}\r\n                                                />\r\n                                                {errors.center_fee && <span style={{ color: \"red\" }}>{errors.center_fee.message}</span>}\r\n                                            </TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Bank Charges\"\r\n                                                    type=\"number\"\r\n                                                    register={register(\"bank_charges\", { required: \"Bank charges are required\" })}\r\n                                                    disabled\r\n                                                />\r\n                                                {errors.bank_charges && <span style={{ color: \"red\" }}>{errors.bank_charges.message}</span>}\r\n\r\n                                            </TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <InputField\r\n                                                    disabled={true}\r\n                                                    style={{ border: \"none\" }}\r\n                                                    size=\"small\"\r\n                                                    placeholder=\"Narration\"\r\n                                                    register={register(\"total\")}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    type=\"submit\"\r\n                                                    sx={{\r\n                                                        textTransform: 'capitalize',\r\n                                                        backgroundColor: \"rgb(189 155 74)\",\r\n                                                        fontSize: \"12px\",\r\n                                                        \":hover\": {\r\n                                                            backgroundColor: \"rgb(189 155 74)\",\r\n                                                        },\r\n                                                    }}\r\n                                                >\r\n                                                    Add Item\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow> */}\r\n\r\n                                        {rows.map((item, index) => (\r\n                                            <TableRow key={index}>\r\n                                                <TableCell>{item?.id}</TableCell>\r\n                                                <TableCell>{item?.service?.name}</TableCell>\r\n                                                <TableCell>{item?.quantity}</TableCell>\r\n                                                <TableCell>{item?.govt_fee}</TableCell>\r\n                                                <TableCell>{item?.center_fee}</TableCell>\r\n                                                <TableCell>{item?.bank_charge}</TableCell>\r\n\r\n                                                <TableCell>{item?.total}</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        ))}\r\n\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={7} align=\"right\">\r\n                                                <Typography variant=\"h6\" sx={{ fontSize: \"12px\" }}>Sub-total:</Typography>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h6\" sx={{ fontSize: \"12px\" }}>{subTotal}</Typography> {/* Display the Sub-total */}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n\r\n                                        {/* Amount Total Row (optional, if needed for the final sum) */}\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={7} align=\"right\">\r\n                                                <Typography variant=\"h6\" sx={{ fontSize: \"12px\" }}>Amount Total:</Typography>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <Typography variant=\"h6\" sx={{ fontSize: \"12px\" }}>{subTotal}</Typography> {/* This can be the same as Sub-total */}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        {/* </Grid> */}\r\n                                        \r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </form>\r\n\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                            <TableRow>\r\n                                            <TableCell colSpan={8} align=\"center\"> {/* adjust colSpan to match total columns */}\r\n                                                <Box sx={{display:'flex',gap:2,justifyContent:'center'}}>\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    \r\n                                                    disabled={rows?.length === 0}\r\n                                                    variant=\"contained\"\r\n                                                    sx={{\r\n                                                        width:'350px',\r\n                                                        textTransform: 'capitalize',\r\n                                                        backgroundColor: \"#bd9b4a\",\r\n                                                        \":hover\": {\r\n                                                            backgroundColor: \"rgb(189 155 74)\",\r\n                                                        },\r\n                                                    }}\r\n                                                >\r\n                                                    Place Invoice\r\n                                                </Button>\r\n                                                <Button\r\n                                                   onClick={()=> navigate('/aldeed-list')}\r\n                                                    \r\n                                                    variant=\"contained\"\r\n                                                    sx={{\r\n                                                        width:'350px',\r\n                                                        textTransform: 'capitalize',\r\n                                                        backgroundColor: \"#bd9b4a\",\r\n                                                        \":hover\": {\r\n                                                            backgroundColor: \"rgb(189 155 74)\",\r\n                                                        },\r\n                                                    }}\r\n                                                >\r\n                                                    Cancel\r\n                                                </Button>\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        </Box>\r\n                    </>\r\n                }\r\n            </Box>\r\n\r\n\r\n\r\n            <Box className=\"showPdf\"  ref={invoiceRef} sx={{ padding: \"20px 60px\" }}>\r\n      <div className=\"w-full h-[115px] flex justify-center items-center mb-4\">\r\n        <img\r\n          src={Images.header}\r\n          alt=\"Header\"\r\n          style={{ width: \"100%\" }}\r\n          className=\"max-w-full h-auto\"\r\n        />\r\n      </div>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          border: \"1px solid #000\",\r\n          my: 2,\r\n          fontSize: \"15px\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: \"50%\",\r\n            p: 2,\r\n            borderRight: \"1px solid #000\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Box sx={{ mb: 1 }}>\r\n            <Barcode\r\n              value={detail?.id}\r\n              width={1.4}\r\n              height={40}\r\n              displayValue={false}\r\n            />\r\n            <Typography\r\n              variant=\"body2\"\r\n              align=\"left\"\r\n              sx={{ fontSize: \"15px\", ml: 3 }}\r\n            >\r\n              {detail?.id}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                   fontWeight: \"bold\", fontSize: \"12px\" ,\r\n                   margin: 0\r\n                }}\r\n              >\r\n                Date/التاريخ والوقت\r\n              </p>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"12px\" }}>\r\n                {invoiceData?.date}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontWeight: \"bold\", fontSize: \"15px\" }}\r\n              >\r\n                Invoice Type - Invoice No\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.invoiceType}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontWeight: \"bold\", fontSize: \"15px\" }}\r\n              >\r\n                TRN:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.trn}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontWeight: \"bold\", fontSize: \"15px\" }}\r\n              >\r\n                Token Number\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.tokenNumber}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Box sx={{ width: \"50%\", p: 2 }}>\r\n          <p\r\n            variant=\"body2\"\r\n            style={{\r\n              fontSize: \"14px\",\r\n              textAlign: \"center\",\r\n             \r\n              marginBottom: 2,\r\n            }}\r\n          >\r\n            Customer Information معلومات المتعاملين\r\n          </p>\r\n\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                  fontWeight:\"bold\",\r\n                  margin: 0\r\n                  // textAlign:\"center\",\r\n                  // marginBottom:2\r\n                }}\r\n              >\r\n                Customer/المتعامل\r\n              </p>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"12px\" }}>\r\n                {invoiceData?.customerName}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                  fontWeight:\"bold\",\r\n                  margin: 0\r\n                }}\r\n              >\r\n                Mobile No./رقم الهاتف المتحرك\r\n              </p>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.mobileNo}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontWeight: \"bold\", fontSize: \"15px\" }}\r\n              >\r\n                Customer Reference\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.customerReference}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontWeight: \"bold\", fontSize: \"15px\" }}\r\n              >\r\n                Customer Address\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body2\" sx={{ fontSize: \"15px\" }}>\r\n                {invoiceData?.customerAddress}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ my: 5 }}>\r\n        <p\r\n          variant=\"h6\"\r\n          style={{\r\n            fontSize: \"15px\",\r\n          }}\r\n        >\r\n          Particulars تفاصيل\r\n        </p>\r\n\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#f5f5f5\" }}>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"5%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Sl.No الرقم</p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"30%\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Service - الخدمات</p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"8%\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Qty - الكمية</p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"18%\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Govt Fee and Bank Charge - الرسوم الحكومية\r\n                </p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"15%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Service Charge Taxable - تكلفة الخدمة\r\n                </p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"15%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Tax Amt - قيمة المضافة</p>\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  padding: \"8px\",\r\n                  textAlign: \"center\",\r\n                  width: \"15%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Total - الإجمالي بالدرهم</p>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {invoiceData?.items.map((item) => (\r\n              <tr key={item.id}>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {item?.id}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\r\n                      {item?.service?.name}\r\n                    </span>\r\n                    <span style={{ fontSize: \"12px\" }}>{item.service?.name_ar}</span>\r\n                  </div>\r\n                  {/* <p style={{ fontSize: \"9px\", textAlign: \"left\" }}>\r\n                    {item?.details}\r\n                  </p> */}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize:'12px'\r\n                  }}\r\n                >\r\n                  {item?.quantity}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize:'12px'\r\n\r\n                  }}\r\n                >\r\n                  {((item?.govt_fee ?? 0) + (item?.bank_charge ?? 0)).toFixed(2)}\r\n\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize:'12px'\r\n\r\n                  }}\r\n                >\r\n                  {item?.center_fee?.toFixed(2)}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize:'12px'\r\n\r\n                  }}\r\n                >\r\n                  {item?.bank_charge?.toFixed(2)}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize:'12px'\r\n\r\n                  }}\r\n                >\r\n                  {item?.total?.toFixed(2)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n          <tbody>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Total Govt.fee & Bank Charge</p>\r\n              </td>\r\n              <td\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                {(invoiceData?.items?.reduce((total, item) => total + (item?.govt_fee ?? 0) + (item?.bank_charge ?? 0), 0) )?.toFixed(2)} \r\n\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>Net Taxable Amount</p>\r\n              </td>\r\n              <td\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                {(invoiceData?.items?.reduce((total, item) => total + (item?.center_fee ?? 0), 0))?.toFixed(2)}\r\n\r\n\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    fontFamily: \"'Amiri', Arial, sans-serif\",\r\n                  }}\r\n                  className=\"arabic-text\"\r\n                >\r\n                  Total VAT إجمالي القيمة المضافة\r\n                </p>\r\n              </td>\r\n              <td\r\n                align=\"center\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                {(invoiceData?.items?.reduce((total, item) => total + (item?.bank_charge ?? 0), 0))?.toFixed(2)}\r\n\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                align=\"right\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    fontFamily: \"'Amiri', Arial, sans-serif\",\r\n                  }}\r\n                  className=\"arabic-text\"\r\n                >\r\n                  Gross Total إجمالي القيمة\r\n                </p>\r\n              </td>\r\n              <td\r\n                align=\"center\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  {detail?.total_amount?.toFixed(2)}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                align=\"right\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    fontFamily: \"'Amiri', Arial, sans-serif\",\r\n                  }}\r\n                  className=\"arabic-text\"\r\n                >\r\n                  Customer Card Payment الإجمالي\r\n                </p>\r\n              </td>\r\n              <td\r\n                align=\"right\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                {(invoiceData?.items?.reduce((total, item) => total + (item?.bank_charge ?? 0), 0))?.toFixed(2)}\r\n\r\n                \r\n\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={5}\r\n                align=\"right\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    fontFamily: \"'Amiri', Arial, sans-serif\",\r\n                  }}\r\n                  className=\"arabic-text\"\r\n                >\r\n                  Total Payable الإجمالي\r\n                </p>\r\n              </td>\r\n              <td\r\n                align=\"right\"\r\n                style={{\r\n                  border: \"1px solid #000\",\r\n                  padding: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                {detail?.total_amount?.toFixed(2)}\r\n\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n      <Box class=\"footer\">\r\n        <Box textAlign=\"center\" pb={2} sx={{ my: \"60px\", mt: \"100px\" }}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Box textAlign=\"center\">\r\n              <Typography\r\n                variant=\"h6\"\r\n                fontWeight=\"bold\"\r\n                sx={{ fontSize: \"12px\" }}\r\n              >\r\n                SabelahHaq Naqaz\r\n              </Typography>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                Authorized Signatory - المخول بالتوقيع\r\n              </p>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{ fontSize: \"12px\", textAlign: \"center\" }}\r\n              >\r\n                (REPRINT)\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box textAlign=\"right\" sx={{ fontSize: \"12px\" }}>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                Note - ملاحظات\r\n              </p>\r\n              <p\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                الرجاء التأكد من الفاتورة والمستندات قبل مغادرة الكاونتر\r\n              </p>\r\n              <Typography variant=\"body2\" dir=\"ltr\" sx={{ fontSize: \"12px\" }}>\r\n                Kindly check the invoice and documents before leaving the\r\n                counter\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Typography variant=\"body1\" fontWeight=\"bold\" color=\"error\" mt={2}>\r\n            \"save 10 aed on all DED transactions every Saturday in Premium\r\n            Businessmen Services\"\r\n          </Typography>\r\n        </Box>\r\n\r\n        <div className=\"w-full h-[115px] flex justify-center items-center mb-4\">\r\n          <img\r\n            src={Images.footer}\r\n            alt=\"Header\"\r\n            style={{ width: \"100%\" }}\r\n            className=\"max-w-full h-auto\"\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateAldeed;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["_errors1$date","_errors1$display_cust","_errors1$mobile","_errors1$email","_errors1$trn","_errors1$caseno","_errors1$cost_center","_errors1$customer","_errors1$address","_invoiceData$items","_invoiceData$items$re","_invoiceData$items2","_invoiceData$items2$r","_invoiceData$items3","_invoiceData$items3$r","_detail$total_amount","_invoiceData$items4","_invoiceData$items4$r","_detail$total_amount2","invoiceRef","useRef","user","useTheme","useAuth","navigate","useNavigate","formChange","setFormChange","useState","submit","setSubmit","excludeFromSales","setExcludeFromSales","excludeFromPurchase","setExcludeFromPurchase","total","setTotal","subTotal","setSubTotal","rows","setRows","console","log","items","setItems","itemCode","itemDescription","totalCharge","mbNo","applicationId","register","handleSubmit","getValues","setValue","watch","reset","formState","errors","useForm","register1","handleSubmit1","setValue1","getValues1","control","watch1","errors1","govtFee","centerFee","bankCharges","qty","useEffect","finalTotal","parseFloat","guarantors","setGuarantors","activeStep","setActiveStep","React","progress","setProgress","uploadedSize","setUploadedSize","slipDetail","setSlipDetail","selectedDue","setSelectedDue","id","name","passport","setPassport","allocation","setAllocation","depositError","setDepositError","loading","setLoading","emailVerify","setEmailVerify","isUploading","setIsUploading","loader","setLoader","center","setCenter","status","setStatus","fieldsDisabled","setFieldsDisabled","stepFormData","setStepFormData","step1FormData","setStep1FormData","selectedType","setSelectedType","date","setDate","Date","balanceType","setBalanceType","imageURL","setImageURL","hovered","setHovered","accounts","setAccounts","salesAccount","setSalesAccount","inventoryAccount","setInventoryAccount","cogsAccount","setCogsAccount","adjustmentAccount","setAdjustmentAccount","assemblyAccount","setAssemblyAccount","itemType","setItemType","unit","setUnit","taxes","setTaxes","tax","setTax","category","setCategory","categories","setCategories","governmentAccount","setGovernmnentAccount","description","setDescription","ownGovBank","setOwnGovBank","services","setServices","serviceItem","setServiceItem","selectedCustomer","setSelectedCustomer","detail","setDetail","invoiceData","setInvoiceData","getReceptionDetail","async","_data$receipt","params","token_number","state","invoice_number","data","CustomerServices","getReceiptDetail","_data$receipt2","_data$receipt3","_data$receipt4","_data$receipt5","_data$receipt6","_data$receipt7","_data$receipt8","_data$receipt9","_data$receipt10","_data$receipt11","_data$receipt12","_data$accounts","receipt","is_presale","customer_name","moment","toDate","customer_mobile","ref","customer_email","address","trn","cost_center","case_no","total_amount","sale_receipt_items","ErrorToaster","error","_data$accounts2","_data$accounts3","page","limit","FinanceServices","getAccounts","_data$accounts4","getTax","getCategoryList","getCategories","getServiceItem","_jsxs","_Fragment","children","_jsx","Box","sx","width","m","backgroundColor","borderRadius","component","onSubmit","invoice","format","invoiceType","formData","tokenNumber","customerName","display_customer","mobileNo","mobile","customerReference","customerAddress","totalSales","netTaxableAmount","totalVAT","grossTotal","customerCardPayment","totalPayable","_formData$cost_center","obj","token_date","invoice_prefix","caseno","reception_id","email","promise","CreateAlDed","showPromiseToast","response","responseCode","current","invoiceElement","style","display","canvas","html2canvas","scale","useCORS","logging","imgData","toDataURL","pdf","jsPDF","orientation","imgHeight","height","addImage","save","generatePDF","justifyContent","gap","p","alignItems","Typography","fontSize","fontWeight","Grid","container","item","xs","md","sm","InputField","label","size","disabled","placeholder","InputProps","endAdornment","IconButton","onClick","SearchIcon","color","mt","PrimaryButton","bgcolor","title","DatePicker","value","message","required","maxDate","onChange","border","SelectField","options","selected","onSelect","customer","multiline","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","index","_item$service","service","quantity","govt_fee","center_fee","bank_charge","colSpan","align","variant","Button","type","length","textTransform","className","padding","src","Images","header","alt","my","borderRight","flexDirection","mb","Barcode","displayValue","ml","spacing","margin","textAlign","marginBottom","borderCollapse","_item$service2","_item$service3","_item$govt_fee","_item$bank_charge","_item$center_fee","_item$bank_charge2","_item$total","name_ar","toFixed","reduce","_item$govt_fee2","_item$bank_charge3","_item$center_fee2","fontFamily","_item$bank_charge4","_item$bank_charge5","class","pb","dir","footer","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}