{"version":3,"file":"static/js/2510.d90ab151.chunk.js","mappings":"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","sources":["pages/Dashboard/Settings/CostSetup.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Box, Grid, InputAdornment, Paper, Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, TextField, Typography } from '@mui/material'\r\nimport { FontFamily, Images } from 'assets';\r\nimport Colors from 'assets/Style/Colors';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport InputField from 'components/Input'\r\nimport CustomTextField from 'components/Input/CustomInput';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPermission } from 'redux/slices/navigationDataSlice';\r\nimport SystemServices from 'services/System';\r\nimport { formatPermissionData } from 'utils';\r\nconst StyledInputAdornment = styled(InputAdornment)(({ theme }) => ({\r\n    backgroundColor: '#000', // Adjust the color to match your image\r\n    color: '#fff', // Text color\r\n    padding: '0 10px', // Adjust padding as needed\r\n    borderRadius: '4px 0 0 4px', // Match the rounded corners from the image\r\n}));\r\n// *For Table Style\r\nconst Row = styled(TableRow)(({ theme }) => ({\r\n    border: 0,\r\n}));\r\n\r\nconst Cell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        fontSize: 14,\r\n        fontFamily: \"Public Sans\",\r\n        border: \"1px solid #EEEEEE\",\r\n        padding: \"15px\",\r\n        textAlign: \"left\",\r\n        whiteSpace: \"nowrap\",\r\n        color: \"#434343\",\r\n        paddingRight: \"50px\",\r\n        background: \"transparent\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n        fontFamily: \"Public Sans\",\r\n\r\n        textWrap: \"nowrap\",\r\n        padding: \"5px !important\",\r\n\r\n        \".MuiBox-root\": {\r\n            display: \"flex\",\r\n            gap: \"6px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            \".MuiBox-root\": {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n        svg: {\r\n            width: \"auto\",\r\n            height: \"24px\",\r\n        },\r\n        \".MuiTypography-root\": {\r\n            textTransform: \"capitalize\",\r\n            fontFamily: FontFamily.NunitoRegular,\r\n            textWrap: \"nowrap\",\r\n        },\r\n        \".MuiButtonBase-root\": {\r\n            padding: \"8px\",\r\n            width: \"28px\",\r\n            height: \"28px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst CostSetup = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [charges, setCharges] = useState({})\r\n    const [statuses, setStatuses] = useState([])\r\n    const [statuses2, setStatuses2] = useState([])\r\n    const dispatch = useDispatch()\r\n    const handleRejectionChange = (e, index, item) => {\r\n        console.log(e.target.value);\r\n        console.log(item);\r\n        // Find the item in the `statuses` array and update its `rejection` property\r\n\r\n        const updatedStatuses = statuses.map((status) =>\r\n            status.id === item.id\r\n                ? { ...status, rejection: e.target.value }\r\n                : status\r\n        );\r\n        setStatuses(updatedStatuses)\r\n\r\n    }\r\n    const handleTypingChange = (e, index, item) => {\r\n        console.log(e.target.value);\r\n        console.log(item);\r\n        // Find the item in the `statuses` array and update its `rejection` property\r\n        const updatedStatuses = statuses.map((status) =>\r\n            status.id === item.id\r\n                ? { ...status, typing: e.target.value }\r\n                : status\r\n        );\r\n        setStatuses(updatedStatuses)\r\n    }\r\n\r\n    const handleRejectionChange2 = (e, index, item) => {\r\n        console.log(e.target.value);\r\n        console.log(item);\r\n        // Find the item in the `statuses` array and update its `rejection` property\r\n\r\n        const updatedStatuses = statuses2.map((status) =>\r\n            status.id === item.id\r\n                ? { ...status, rejection: e.target.value }\r\n                : status\r\n        );\r\n        setStatuses2(updatedStatuses)\r\n\r\n    }\r\n    const handleTypingChange2 = (e, index, item) => {\r\n        console.log(e.target.value);\r\n        console.log(item);\r\n        // Find the item in the `statuses` array and update its `rejection` property\r\n        const updatedStatuses = statuses2.map((status) =>\r\n            status.id === item.id\r\n                ? { ...status, typing: e.target.value }\r\n                : status\r\n        );\r\n        setStatuses2(updatedStatuses)\r\n    }\r\n    const tableHead1 = [\r\n        { name: \"Stage\", key: \"\" },\r\n\r\n        { name: \"Rejection Cost\", key: \"visa_eligibility\" },\r\n        { name: \"Typing Fee\", key: \"deposit_total\" },\r\n\r\n    ];\r\n    const { register, handleSubmit, getValues, setValue, formState: { errors } } = useForm();\r\n    const [permissions, setPermissions] = useState([])\r\n    const getData = async (formData) => {\r\n        setLoading(true)\r\n        console.log(formData);\r\n        try {\r\n            let params = {\r\n                charges_type: 'cost'\r\n\r\n            }\r\n\r\n            const { data } = await SystemServices.getRates(params);\r\n            console.log(data);\r\n            let details = data?.charges\r\n            setCharges(details)\r\n            setValue('1yearInsideRate', details?.one_year_inside)\r\n            setValue('1yearOutsideRate', details?.one_year_outside)\r\n            setValue('1yearRenewalRates', details?.one_year_renewal)\r\n            setValue('2yearInsideRate', details?.two_year_inside)\r\n            setValue('2yearOutsideRate', details?.two_year_outside)\r\n            setValue('2yearRenewalRates', details?.two_year_renewal)\r\n            setValue('oneyear', details?.one_year_commission)\r\n            setValue('twoyear', details?.two_year_commission)\r\n            setValue('oneyearoutside', details?.one_year_commission_out)\r\n            setValue('twoyearoutside', details?.two_year_commission_out)\r\n            setValue('monthlyVisaServiceCharges', details?.monthly_visa_service_below)\r\n            setValue('monthlyVisaServiceChargesabove', details?.monthly_visa_service_above)\r\n            setValue('vipMedical', details?.medical_extra)\r\n            setValue('insideCancellationRates', details?.cancellation)\r\n            setValue('outsideCancellationRates', details?.outside_cancellation)\r\n            setValue('cancellationInprogress', details?.cancellation_cost_inprogress)\r\n            setValue('rejectionCost', details?.rejection)\r\n            setValue('extraTyping', details?.typing_fee)\r\n            setValue('overstayCost', details?.overstay)\r\n            setValue('absconderFee', details?.absconder_fee)\r\n            setStatuses(\r\n                [\r\n                    { id: \"In Progress\", name: \"In Progress\", rejection: details?.rejection_inprogress, typing: details?.typing_inprogress },\r\n\r\n\r\n                    { id: \"Change Status\", name: \"Change Status\", rejection: details?.rejection_changestatus, typing: details?.typing_changestatus },\r\n                    { id: \"Medical\", name: \"Medical\", rejection: details?.rejection_medical, typing: details?.typing_medical },\r\n                    { id: \"Emirates Id\", name: \"Emirates Id\", rejection: details?.rejection_emirateid, typing: details?.typing_emirateid },\r\n\r\n                ]\r\n            )\r\n            setStatuses2(\r\n                [\r\n                    { id: \"In Progress\", name: \"In Progress\", rejection: details?.rejection_inprogress_out, typing: details?.typing_inprogress_out },\r\n                    { id: \"Entry Permit\", name: \"Entry Permit\", rejection: details?.rejection_entrypermit_out, typing: details?.typing_entrypermit_out },\r\n\r\n\r\n                    { id: \"Medical\", name: \"Medical\", rejection: details?.rejection_medical_out, typing: details?.typing_medical_out },\r\n                    { id: \"Emirates Id\", name: \"Emirates Id\", rejection: details?.rejection_emirateid_out, typing: details?.typing_emirateid_out },\r\n\r\n                ]\r\n            )\r\n            console.log(formatPermissionData(data?.permissions))\r\n            setPermissions(formatPermissionData(data?.permissions))\r\n            data?.permissions.forEach(e => {\r\n                if (e?.route && e?.identifier && e?.permitted) {\r\n                    dispatch(addPermission(e?.route));\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const UpdateCost = async (formData) => {\r\n        setLoading(true)\r\n        console.log(formData);\r\n        try {\r\n            let obj = {\r\n                charges_type: \"cost\",\r\n                one_year_inside: Number(formData?.['1yearInsideRate']),\r\n                one_year_outside: Number(formData?.['1yearOutsideRate']),\r\n                one_year_renewal: Number(formData?.['1yearRenewalRates']),\r\n                two_year_inside: Number(formData?.['2yearInsideRate']),\r\n                two_year_outside: Number(formData?.['2yearOutsideRate']),\r\n                two_year_renewal: Number(formData?.['2yearRenewalRates']),\r\n                one_year_commission: Number(formData?.['oneyear']),\r\n                two_year_commission: Number(formData?.['twoyear']),\r\n                one_year_commission_out: Number(formData?.['oneyearoutside']),\r\n                two_year_commission_out: Number(formData?.['twoyearoutside']),\r\n \r\n                monthly_visa_service_below: Number(formData?.['monthlyVisaServiceCharges']),\r\n                monthly_visa_service_above: Number(formData?.['monthlyVisaServiceChargesabove']),\r\n                overstay: Number(formData?.['overstayCost']),\r\n                medical_extra: Number(formData?.['vipMedical']),\r\n                typing_fee: Number(formData?.['extraTyping']),\r\n                cancellation: Number(formData?.['insideCancellationRates']),\r\n                outside_cancellation: Number(formData?.['outsideCancellationRates']),\r\n                cancellation_cost_inprogress: Number(formData?.['cancellationInprogress']),\r\n                rejection: Number(formData?.['rejectionCost']),\r\n                absconder_fee: Number(formData?.['absconderFee']),\r\n                rejection_changestatus: \"10.00\",\r\n                rejection_emirateid: \"10.00\",\r\n                rejection_entrypermit: \"10.00\",\r\n                rejection_inprogress: \"10.00\",\r\n                rejection_medical: \"10.00\",\r\n                typing_changestatus: \"10.00\",\r\n                typing_emirateid: \"10.00\",\r\n                typing_entrypermit: \"10.00\",\r\n               \r\n                typing_inprogress: \"10.00\",\r\n                typing_medical: \"10.00\",\r\n\r\n\r\n\r\n            }\r\n\r\n            for (let i = 0; i < statuses.length; i++) {\r\n                const status = statuses[i];\r\n\r\n                if (status.id == \"In Progress\") {\r\n                    obj.rejection_inprogress = status.rejection;\r\n                    obj.typing_inprogress = status.typing\r\n                }\r\n                else if (status.id == \"Entry Permit\") {\r\n                    obj.rejection_entrypermit = status.rejection;\r\n                    obj.typing_entrypermit = status.typing\r\n                }\r\n                else if (status.id == \"Change Status\") {\r\n                    obj.rejection_changestatus = status.rejection;\r\n                    obj.typing_changestatus = status.typing\r\n                }\r\n                else if (status.id == \"Medical\") {\r\n                    obj.rejection_medical = status.rejection;\r\n                    obj.typing_medical = status.typing\r\n                }\r\n                else if (status.id == \"Emirates Id\") {\r\n                    obj.rejection_emirateid = status.rejection;\r\n                    obj.typing_emirateid = status.typing\r\n                }\r\n            }\r\n            for (let i = 0; i < statuses2.length; i++) {\r\n                const status = statuses2[i];\r\n\r\n                if (status.id == \"In Progress\") {\r\n                    obj.rejection_inprogress_out = status.rejection;\r\n                    obj.typing_inprogress_out = status.typing\r\n                }\r\n                else if (status.id == \"Entry Permit\") {\r\n                    obj.rejection_entrypermit_out = status.rejection;\r\n                    obj.typing_entrypermit_out = status.typing\r\n                }\r\n                else if (status.id == \"Change Status\") {\r\n                    obj.rejection_changestatus_out = status.rejection;\r\n                    obj.typing_changestatus_out = status.typing\r\n                }\r\n                else if (status.id == \"Medical\") {\r\n                    obj.rejection_medical_out = status.rejection;\r\n                    obj.typing_medical_out = status.typing\r\n                }\r\n                else if (status.id == \"Emirates Id\") {\r\n                    obj.rejection_emirateid_out = status.rejection;\r\n                    obj.typing_emirateid_out = status.typing\r\n                }\r\n            }\r\n            console.log(obj);\r\n            const promise = SystemServices.UpdateCost(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving ...',\r\n                'Success',\r\n                'Something Went Wrong'\r\n            );\r\n\r\n            const result = await promise\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ p: 3 }}>\r\n                <Box component={'form'} onSubmit={handleSubmit(UpdateCost)}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n                        <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >COST MANAGEMENT</Typography>\r\n                        <Box sx={{ display: 'flex', gap: '10px' }}>\r\n                            {permissions?.save && <PrimaryButton\r\n                               bgcolor={'#bd9b4a'}\r\n                                title=\"Save\"\r\n                                type={'submit'}\r\n\r\n\r\n                            />}\r\n\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box sx={{ p: 3 }}>\r\n                        <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 2 }}>Visa Rates : </Typography>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2 }}>1 Year Rates : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Inside Rates : '} StartLabel={'AED'} register={register(\"1yearInsideRate\", { required: \"Enter year inside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Outside Rates : '} StartLabel={'AED'} register={register(\"1yearOutsideRate\", { required: \"Enter year outside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Renewal Rates : '} StartLabel={'AED'} register={register(\"1yearRenewalRates\", { required: \"Enter renewal rate\" })} />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>2 Year Rates : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Inside Rates : '} StartLabel={'AED'} register={register(\"2yearInsideRate\", { required: \"Enter year inside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Year Outside Rates : '} StartLabel={'AED'} register={register(\"2yearOutsideRate\", { required: \"Enter year outside rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Renewal Rates : '} StartLabel={'AED'} register={register(\"2yearRenewalRates\", { required: \"Enter renewal rate\" })} />\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>Visa Commission : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n                          \r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'1 Year Inside : '} StartLabel={'AED'} register={register(\"oneyear\", { required: \"enter 1 year inside Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'2 Years Inside : '} StartLabel={'AED'} register={register(\"twoyear\", { required: \"enter 2 year inside Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'1 Year Outside :  '} StartLabel={'AED'} register={register(\"oneyearoutside\", { required: \"enter 1 year outside Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'2 Years Outside : '} StartLabel={'AED'} register={register(\"twoyearoutside\", { required: \"enter 2 year outside Charges\" })} />\r\n                            </Grid>\r\n                            \r\n\r\n\r\n\r\n\r\n                        </Grid>\r\n                        <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>Extra Costing : </Typography>\r\n\r\n                        <Grid container sx={{ gap: '20px 25px' }}>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Monthly Visa Service Charges Below 2000 : '} max={2000} StartLabel={'AED'} register={register(\"monthlyVisaServiceCharges\", { required: \"Enter Monthly Visa Service Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Monthly Visa Service Charges Above 2000 : '} StartLabel={'AED'} register={register(\"monthlyVisaServiceChargesabove\", { required: \"Enter Monthly Visa Service Charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'VIP Medical  Charges : '} StartLabel={'AED'} register={register(\"vipMedical\", { required: \"Enter medical extra charges\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Overstay Cost : '} StartLabel={'AED'} register={register(\"overstayCost\", { required: \"Enter year overstay rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Inside Cancellation Rates : '} StartLabel={'AED'} register={register(\"insideCancellationRates\", { required: \"Enter cancellation rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Outside Cancellation Rates : '} StartLabel={'AED'} register={register(\"outsideCancellationRates\", { required: \"Enter cancellation rate\" })} />\r\n                            </Grid>\r\n                           \r\n\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Absconder Fee : '} StartLabel={'AED'} register={register(\"absconderFee\", { required: \"Enter absconder fee\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={'Typing Fee : '} StartLabel={'AED'} register={register(\"extraTyping\", { required: \"Enter typing fee\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={5} >\r\n                                <LabelCustomInput label={' Cancellation Cost In Progress : '} StartLabel={'AED'} register={register(\"cancellationInprogress\", { required: \"Enter cancellation rate\" })} />\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>Rejection Costings (In) : </Typography>\r\n                            </Grid>\r\n                            <TableContainer\r\n                                component={Paper}\r\n                                sx={{\r\n                                    maxHeight: \"calc(100vh - 200px)\",\r\n                                    backgroundColor: \"transparent\",\r\n                                    boxShadow: \"none !important\",\r\n                                    borderRadius: \"0px !important\",\r\n                                }}\r\n                            >\r\n                                <Table stickyHeader sx={{ minWidth: 500 }}>\r\n                                    <TableHead>\r\n                                        <Row>\r\n                                            {tableHead1.map((cell, index) => (\r\n                                                <Cell\r\n                                                    style={{\r\n                                                        textAlign:\r\n                                                            cell?.name == \"SR No.\"\r\n                                                                ? \"center\"\r\n                                                                : \"left\",\r\n                                                        paddingRight:\r\n                                                            cell?.name == \"SR No.\" ? \"15px\" : \"50px\",\r\n                                                    }}\r\n                                                    className=\"pdf-table\"\r\n                                                    key={index}\r\n                                                >\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            display: \"flex\",\r\n                                                            alignItems: \"flex-end\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {cell?.name}\r\n                                                    </Box>\r\n                                                </Cell>\r\n                                            ))}\r\n                                        </Row>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {statuses?.map((item, index) => {\r\n                                            console.log(item?.statuses);\r\n                                            let sorteddata = item?.statuses?.sort(\r\n                                                (a, b) => a.id - b.id\r\n                                            );\r\n                                            console.log(sorteddata);\r\n\r\n                                            return (\r\n                                                <Row\r\n                                                    key={index}\r\n                                                    sx={{\r\n                                                        border: \"1px solid #EEEEEE !important\",\r\n                                                    }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        style={{ textAlign: \"left\" }}\r\n                                                        className=\"pdf-table\"\r\n                                                    >\r\n                                                        {item?.name}\r\n                                                    </Cell>\r\n                                                    <Cell style={{ textAlign: \"left\" }} className=\"pdf-table\">\r\n                                                        <TextField\r\n                                                            size='small'\r\n                                                            defaultValue={item?.rejection || \"\"}\r\n                                                            onChange={(e) => handleRejectionChange(e, index, item)}\r\n                                                        />\r\n                                                    </Cell>\r\n                                                    <Cell style={{ textAlign: \"left\" }} className=\"pdf-table\">\r\n                                                        <TextField\r\n                                                            size='small'\r\n                                                            defaultValue={item?.typing || \"\"}\r\n                                                            onChange={(e) => handleTypingChange(e, index, item)}\r\n                                                        />\r\n                                                    </Cell>\r\n\r\n\r\n\r\n                                                </Row>\r\n                                            );\r\n                                        })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2, mt: 3 }}>Rejection Costings (Out) : </Typography>\r\n                            </Grid>\r\n                            <TableContainer\r\n                                component={Paper}\r\n                                sx={{\r\n                                    maxHeight: \"calc(100vh - 200px)\",\r\n                                    backgroundColor: \"transparent\",\r\n                                    boxShadow: \"none !important\",\r\n                                    borderRadius: \"0px !important\",\r\n                                }}\r\n                            >\r\n                                <Table stickyHeader sx={{ minWidth: 500 }}>\r\n                                    <TableHead>\r\n                                        <Row>\r\n                                            {tableHead1.map((cell, index) => (\r\n                                                <Cell\r\n                                                    style={{\r\n                                                        textAlign:\r\n                                                            cell?.name == \"SR No.\"\r\n                                                                ? \"center\"\r\n                                                                : \"left\",\r\n                                                        paddingRight:\r\n                                                            cell?.name == \"SR No.\" ? \"15px\" : \"50px\",\r\n                                                    }}\r\n                                                    className=\"pdf-table\"\r\n                                                    key={index}\r\n                                                >\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            display: \"flex\",\r\n                                                            alignItems: \"flex-end\",\r\n                                                        }}\r\n                                                    >\r\n                                                        {cell?.name}\r\n                                                    </Box>\r\n                                                </Cell>\r\n                                            ))}\r\n                                        </Row>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {statuses2?.map((item, index) => {\r\n                                            console.log(item?.statuses);\r\n                                            let sorteddata = item?.statuses?.sort(\r\n                                                (a, b) => a.id - b.id\r\n                                            );\r\n                                            console.log(sorteddata);\r\n\r\n                                            return (\r\n                                                <Row\r\n                                                    key={index}\r\n                                                    sx={{\r\n                                                        border: \"1px solid #EEEEEE !important\",\r\n                                                    }}\r\n                                                >\r\n                                                    <Cell\r\n                                                        style={{ textAlign: \"left\" }}\r\n                                                        className=\"pdf-table\"\r\n                                                    >\r\n                                                        {item?.name}\r\n                                                    </Cell>\r\n                                                    <Cell style={{ textAlign: \"left\" }} className=\"pdf-table\">\r\n                                                        <TextField\r\n                                                            size='small'\r\n                                                            defaultValue={item?.rejection || \"\"}\r\n                                                            onChange={(e) => handleRejectionChange2(e, index, item)}\r\n                                                        />\r\n                                                    </Cell>\r\n                                                    <Cell style={{ textAlign: \"left\" }} className=\"pdf-table\">\r\n                                                        <TextField\r\n                                                            size='small'\r\n                                                            defaultValue={item?.typing || \"\"}\r\n                                                            onChange={(e) => handleTypingChange2(e, index, item)}\r\n                                                        />\r\n                                                    </Cell>\r\n\r\n\r\n\r\n                                                </Row>\r\n                                            );\r\n                                        })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CostSetup\r\n"],"names":["styled","InputAdornment","_ref","theme","backgroundColor","color","padding","borderRadius","Row","TableRow","_ref2","border","Cell","TableCell","_ref3","tableCellClasses","head","fontSize","fontFamily","textAlign","whiteSpace","paddingRight","background","fontWeight","body","textWrap","display","gap","alignItems","justifyContent","cursor","svg","width","height","textTransform","FontFamily","NunitoRegular","CostSetup","loading","setLoading","useState","charges","setCharges","statuses","setStatuses","statuses2","setStatuses2","dispatch","useDispatch","tableHead1","name","key","register","handleSubmit","getValues","setValue","formState","errors","useForm","permissions","setPermissions","useEffect","async","console","log","formData","params","charges_type","data","SystemServices","getRates","details","one_year_inside","one_year_outside","one_year_renewal","two_year_inside","two_year_outside","two_year_renewal","one_year_commission","two_year_commission","one_year_commission_out","two_year_commission_out","monthly_visa_service_below","monthly_visa_service_above","medical_extra","cancellation","outside_cancellation","cancellation_cost_inprogress","rejection","typing_fee","overstay","absconder_fee","id","rejection_inprogress","typing","typing_inprogress","rejection_changestatus","typing_changestatus","rejection_medical","typing_medical","rejection_emirateid","typing_emirateid","rejection_inprogress_out","typing_inprogress_out","rejection_entrypermit_out","typing_entrypermit_out","rejection_medical_out","typing_medical_out","rejection_emirateid_out","typing_emirateid_out","formatPermissionData","forEach","e","route","identifier","permitted","addPermission","error","getData","_jsx","children","Box","sx","p","_jsxs","component","onSubmit","obj","Number","rejection_entrypermit","typing_entrypermit","i","length","status","rejection_changestatus_out","typing_changestatus_out","promise","UpdateCost","showPromiseToast","Typography","save","PrimaryButton","bgcolor","title","type","Colors","textColorDarkBlue","mb","mt","Grid","container","item","xs","LabelCustomInput","label","StartLabel","required","max","TableContainer","Paper","maxHeight","boxShadow","Table","stickyHeader","minWidth","TableHead","map","cell","index","style","className","TableBody","_item$statuses","sorteddata","sort","a","b","TextField","size","defaultValue","onChange","handleRejectionChange","target","value","updatedStatuses","handleTypingChange","_item$statuses2","handleRejectionChange2","handleTypingChange2"],"sourceRoot":""}