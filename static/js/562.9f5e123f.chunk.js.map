{"version":3,"file":"static/js/562.9f5e123f.chunk.js","mappings":"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","sources":["pages/Dashboard/Visa/AddVisa.js"],"sourcesContent":["import { Box, Button, Checkbox, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material'\r\nimport Colors from 'assets/Style/Colors'\r\nimport { PrimaryButton } from 'components/Buttons'\r\nimport DatePicker from 'components/DatePicker'\r\nimport InputField from 'components/Input'\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput'\r\nimport { showErrorToast, showPromiseToast } from 'components/NewToaster'\r\nimport SelectField from 'components/Select'\r\nimport { ErrorToaster } from 'components/Toaster'\r\nimport UploadFile from 'components/UploadFile'\r\nimport instance from 'config/axios'\r\nimport moment from 'moment'\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport CustomerServices from 'services/Customer'\r\nimport routes from 'services/System/routes'\r\nimport { CleanTypes, Debounce2, getFileSize } from 'utils'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisaServices from 'services/Visa'\r\nimport { useBlocker, useLocation, useNavigate } from 'react-router-dom'\r\nimport SystemServices from 'services/System'\r\nimport { useAuth } from 'context/UseContext'\r\nimport ConfirmationDialog from 'components/Dialog/ConfirmationDialog'\r\nimport { useCallbackPrompt } from 'hooks/useCallBackPrompt'\r\nimport { addDays, addMonths } from 'date-fns'\r\nimport ConfirmationDialog2 from 'components/Dialog/confrimationDialog2'\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\nconst AddVisa = () => {\r\n    const navigate = useNavigate()\r\n    const { register, handleSubmit, getValues, setValue, control, formState: { errors }, reset } = useForm();\r\n    const [submit, setSubmit] = useState(false)\r\n    const [handleBlockedNavigation] =\r\n        useCallbackPrompt(submit)\r\n    const {\r\n        register: register1,\r\n        handleSubmit: handleSubmit1,\r\n        setValue: setValue1,\r\n        formState: { errors: errors1 },\r\n\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        setValue: setValue2,\r\n        getValues: getValues2,\r\n        formState: { errors: errors2 },\r\n\r\n    } = useForm();\r\n    // *For Customer Queue\r\n    const [customerQueue, setCustomerQueue] = useState([]);\r\n\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('paper');\r\n    const [visaType, setVisaType] = useState('In')\r\n    const [visaTenture, setVisaTenture] = useState('1 year')\r\n    const [customerDetail, setCustomerDetail] = useState(null)\r\n    const [candidateIndex, setCandidateIndex] = useState()\r\n    const [eligibility, setEligibility] = useState()\r\n    const [salaryError, setSalaryError] = useState(false)\r\n    const [depositError, setDepositError] = useState(false)\r\n    const [countries, setCountries] = useState([])\r\n    const [selectedCountry, setSelectedCountry] = useState(null)\r\n    const [vipMedicalCheck, setVipMedicalCheck] = useState(false)\r\n    // *For setPermissions\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [pageLimit, setPageLimit] = useState(50);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const allowFilesType = [\r\n        'image/png',\r\n        'image/jpg',\r\n        'image/jpeg',\r\n        'application/pdf',\r\n        'application/vnd.ms-excel',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ];\r\n    const [progress, setProgress] = useState(0);\r\n    const [uploadedSize, setUploadedSize] = useState(0);\r\n    const [updateCandidate, setUpdateCandidate] = useState(null)\r\n    const [customerPaymentType, setCustomerPaymentType] = useState(null)\r\n    const [candidateSalary, setCandidateSalary] = useState()\r\n    const [payrollPercent, setPayrollPercent] = useState()\r\n    const [customerDeposit, setCustomerDeposit] = useState()\r\n    const [totalVisaCharges, setTotalVisaCharges] = useState()\r\n    const [totalDepositCharges, setTotalDepositCharges] = useState()\r\n    const [candidates, setCandidates] = useState([])\r\n    const [customerBalance, setCustomerBalance] = useState()\r\n    const { user, userLogout } = useAuth();\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n    const [confirmationDialog2, setConfirmationDialog2] = useState(false)\r\n    const [confirmationDialog3, setConfirmationDialog3] = useState(false)\r\n    const [wpsList, setWpsList] = useState([])\r\n    const [wpsValid, setWpsValid] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [depositScenario, setDepositScenario] = useState()\r\n    const [verifyPassport, setVerifyPassport] = useState(false)\r\n    const [verifyPassport2, setVerifyPassport2] = useState(false)\r\n    const [charges, setCharges] = useState(null)\r\n    const [byPass, setByPass] = useState(null)\r\n\r\n    // *For Filters\r\n    const [filters, setFilters] = useState({});\r\n    const [date, setDate] = useState(null)\r\n    const [fieldsDisabled, setFieldsDisabled] = useState({\r\n        monthlyVisaServiceCharges: true,\r\n        vipMedical: false,\r\n        extraTyping: true,\r\n    });\r\n    //documents array\r\n    const [documents, setDocuments] = useState([\r\n        {\r\n            name: \"Employee Undertaking\",\r\n            key: \"undertaking\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n\r\n\r\n        },\r\n        {\r\n            name: \"Company Undertaking\",\r\n            key: \"cundertaking\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n        },\r\n\r\n        {\r\n            name: \"Passport Copy\",\r\n            key: \"passportcopy\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n        },\r\n        {\r\n            name: \"Digital Photo\",\r\n            key: \"digitalphoto\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n        },\r\n        {\r\n            name: \"Employment Contract\",\r\n            key: \"contract\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n        },\r\n        {\r\n            name: \"Offer Letter\",\r\n            key: \"offerletter\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: true\r\n        },\r\n        {\r\n            name: \"Previous Emirates Ids\",\r\n            key: \"emiratesids\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n        {\r\n            name: \"Previous UAE Visa Copy\",\r\n            key: \"uaevisa\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n        {\r\n            name: \"Cancellation\",\r\n            key: \"cancellation\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n        {\r\n            name: \"UAE Driving License\",\r\n            key: \"drivinglicense\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n        {\r\n            name: \"Work Permit\",\r\n            key: \"workpermit\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n        {\r\n            name: \"Other Documents\",\r\n            key: \"otherdoc\",\r\n            path: \"\",\r\n            expiry_date: null,\r\n            is_required: false\r\n        },\r\n\r\n    ]\r\n    )\r\n    const handleDate = (newDate) => {\r\n        try {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (newDate == \"Invalid Date\") {\r\n                setDate(\"invalid\");\r\n                return;\r\n            }\r\n            setDate(new Date(newDate));\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = (scrollType) => {\r\n        console.log(selectedCustomer);\r\n        setDocuments([\r\n            {\r\n                name: \"Employee Undertaking\",\r\n                key: \"undertaking\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n\r\n\r\n            },\r\n            {\r\n                name: \"Company Undertaking\",\r\n                key: \"cundertaking\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n            },\r\n\r\n            {\r\n                name: \"Passport Copy\",\r\n                key: \"passportcopy\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n            },\r\n            {\r\n                name: \"Digital Photo\",\r\n                key: \"digitalphoto\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n            },\r\n            {\r\n                name: \"Employment Contract\",\r\n                key: \"contract\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n            },\r\n            {\r\n                name: \"Offer Letter\",\r\n                key: \"offerletter\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: true\r\n            },\r\n            {\r\n                name: \"Previous Emirates Ids\",\r\n                key: \"emiratesids\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n            {\r\n                name: \"Previous UAE Visa Copy\",\r\n                key: \"uaevisa\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n            {\r\n                name: \"Cancellation\",\r\n                key: \"cancellation\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n            {\r\n                name: \"UAE Driving License\",\r\n                key: \"drivinglicense\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n            {\r\n                name: \"Work Permit\",\r\n                key: \"workpermit\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n            {\r\n                name: \"Other Documents\",\r\n                key: \"otherdoc\",\r\n                path: \"\",\r\n                expiry_date: null,\r\n                is_required: false\r\n            },\r\n\r\n        ])\r\n        if (true) {\r\n\r\n            setSelectedCountry(null)\r\n            setDate('')\r\n            setSalaryError(false)\r\n            reset()\r\n            getCustomerDetail(selectedCustomer?.id, 'balance')\r\n            if (customerPaymentType == 'visa') {\r\n                if (eligibility == 0 && !byPass) {\r\n                    showErrorToast('Deposit Limit Reached')\r\n                }\r\n                else {\r\n                    setOpen(true);\r\n                    setScroll(scrollType);\r\n                }\r\n            }\r\n            else {\r\n                if (candidateSalary > customerDeposit && !byPass) {\r\n                    showErrorToast('Deposit Limit Reached')\r\n                }\r\n                else {\r\n                    setOpen(true);\r\n                    setScroll(scrollType);\r\n                }\r\n\r\n            }\r\n        }\r\n        else {\r\n            showErrorToast(\"WPS for last month has not been added.\")\r\n        }\r\n    };\r\n    // *For Get Countries\r\n    const getCountries = async (id) => {\r\n        try {\r\n            const { data } = await SystemServices.getCountries();\r\n            setCountries(data?.countries?.rows);\r\n\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const updateResult = (key, newResult) => {\r\n\r\n        console.log(newResult)\r\n        const updatedDocuments = documents.map(doc => {\r\n            if (doc.key === key) {\r\n                return { ...doc, path: newResult }; // Update the path\r\n            }\r\n            return doc; // Return the document as is if the key doesn't match\r\n        });\r\n        console.log(updatedDocuments, 'updatedDocuments');\r\n        setDocuments(updatedDocuments)\r\n    };\r\n\r\n    const handleUploadDocument = async (e, key) => {\r\n        setLoader(key)\r\n        try {\r\n            e.preventDefault();\r\n            let path = \"\";\r\n            console.log(e.target.files.length, \"length\");\r\n\r\n            const inputElement = e.target; // Store a reference to the file input element\r\n\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                const file = e.target.files[i];\r\n                let arr = [\r\n                    {\r\n                        name: file?.name,\r\n                        file: \"\",\r\n                        type: file?.type.split(\"/\")[1],\r\n                        size: getFileSize(file.size),\r\n                        isUpload: false,\r\n                    },\r\n                ];\r\n\r\n                let maxSize = 10 * 1024 * 1024;\r\n                if (file.size > maxSize) {\r\n                    showErrorToast('File Size Must Be Less than 10 MB');\r\n                } else {\r\n                    // Add the current date before the file name to ensure uniqueness\r\n                    const currentDate = new Date().toISOString().split('T')[0]; // e.g., \"2024-08-23\"\r\n                    const uniqueFileName = `${currentDate}_${file.name}`;\r\n\r\n                    // Create a new file with the date-prefixed name\r\n                    const newFile = new File([file], uniqueFileName, { type: file.type });\r\n\r\n                    // Upload the file with the new name\r\n                    const uploadedPath = await handleUpload(newFile, arr);\r\n\r\n                    if (path) {\r\n                        path += \",\" + uploadedPath;\r\n                    } else {\r\n                        path = uploadedPath;\r\n                    }\r\n                    setLoader(false)\r\n\r\n                }\r\n            }\r\n\r\n            console.log(path, \"path\");\r\n\r\n            // Clear the file input after processing\r\n            inputElement.value = \"\";\r\n\r\n            return path;\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    const getData = async (formData) => {\r\n\r\n        console.log(formData);\r\n        try {\r\n            let params = {\r\n                charges_type: \"cost\",\r\n            };\r\n\r\n            const { data } = await SystemServices.getRates(params);\r\n\r\n            let details = data?.charges;\r\n            setCharges(details);\r\n        } catch (error) {\r\n        } finally {\r\n\r\n        }\r\n    };\r\n\r\n    const CreateVisa = async (formData) => {\r\n        setSubmit(false)\r\n        console.log(selectedCustomer);\r\n        const total = candidates.reduce((total, item) => total + item.visa_charges, 0);\r\n        const total2 = candidates.reduce((total2, item) => total2 + item.visa_cost, 0);\r\n        const totalsal = candidates.reduce((totalsal, item) => totalsal + item.salary_total, 0);\r\n\r\n        let multiplier = payrollPercent / 100\r\n        let multiplied = totalsal * multiplier\r\n        if (customerBalance < candidateSalary && !byPass) {\r\n            showErrorToast('Deposit Balance Is Low')\r\n        }\r\n        else {\r\n\r\n            console.log(total);\r\n            try {\r\n\r\n                let charges = customerPaymentType === 'visa' ? parseFloat(totalDepositCharges) * candidates.length : candidateSalary;\r\n                let obj = {\r\n                    customer_id: selectedCustomer?.id,\r\n                    customer_name: selectedCustomer?.name,\r\n                    due_date: customerDetail?.due_date_policy,\r\n                    agent_id: customerDetail?.agent_id,\r\n                    force_create:byPass,\r\n\r\n                    deposit_balance: parseFloat(customerBalance) - parseFloat(charges),\r\n\r\n                    total_deposit_charges: customerPaymentType === 'visa' ? parseFloat(totalDepositCharges) * candidates.length : candidateSalary,\r\n                    total_visa_charges: total,\r\n                    total_visa_cost: total2,\r\n                    request_date: new Date(),\r\n                    candidates: candidates\r\n                };\r\n\r\n                console.log(obj, 'obj');\r\n\r\n                const promise = VisaServices.AddVisa(obj);\r\n\r\n                showPromiseToast(\r\n                    promise,\r\n                    'Saving...',\r\n                    'Added Successfully',\r\n                    'Something Went Wrong'\r\n                );\r\n\r\n                const response = await promise;\r\n                if (response?.responseCode === 200) {\r\n                    navigate(\"/visa-list\");\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpload = async (file, docs) => {\r\n        setProgress(0);\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"document\", file);\r\n            console.log(file);\r\n            const { data } = await instance.post(routes.uploadDocuments, formData, {\r\n                onUploadProgress: (progressEvent) => {\r\n                    const uploadedBytes = progressEvent.loaded;\r\n                    const percentCompleted = Math.round(\r\n                        (uploadedBytes * 100) / progressEvent.total\r\n                    );\r\n\r\n                    setProgress(percentCompleted);\r\n                    console.log(getFileSize(uploadedBytes));\r\n                    setUploadedSize(getFileSize(uploadedBytes));\r\n                },\r\n            });\r\n            if (data) {\r\n                docs[0].isUpload = true;\r\n                docs[0].file = data?.data?.nations;\r\n\r\n                console.log(data, 'asddasasd');\r\n                return data?.data?.path\r\n\r\n            }\r\n        } catch (error) {\r\n            ErrorToaster(error);\r\n        }\r\n    };\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n    const totalSalaryCalc = (type) => {\r\n        if (type == 'update') {\r\n            let basic = getValues2('basic')\r\n            let allowance = getValues2('allowance')\r\n            if (basic && allowance) {\r\n                let total = parseFloat(basic) + parseFloat(allowance)\r\n                setValue2('totalSalary', total)\r\n                console.log(total);\r\n\r\n                console.log(eligibility);\r\n\r\n                let multiplier = payrollPercent / 100\r\n                let multiplied = total * multiplier\r\n                if (multiplied > customerBalance) {\r\n\r\n                    setDepositError(true)\r\n                }\r\n                else {\r\n                    setDepositError(false)\r\n                }\r\n                if (total > eligibility) {\r\n                    if (depositScenario.toLowerCase() == 'payroll') {\r\n\r\n                        setSalaryError(true)\r\n                    }\r\n                }\r\n                else {\r\n                    setSalaryError(false)\r\n                    setDepositError(false)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let basic = getValues('basic')\r\n            let allowance = getValues('allowance')\r\n            if (basic && allowance) {\r\n                let total = parseFloat(basic) + parseFloat(allowance)\r\n                setValue('totalSalary', total)\r\n                console.log(total);\r\n                console.log(eligibility);\r\n                let multiplier = payrollPercent / 100\r\n                let multiplied = total * multiplier\r\n                if (multiplied > customerBalance) {\r\n\r\n                    setDepositError(true)\r\n                }\r\n                else {\r\n                    setDepositError(false)\r\n                }\r\n                if (total > eligibility) {\r\n                    if (depositScenario.toLowerCase() == 'payroll') {\r\n\r\n                        setSalaryError(true)\r\n                    }\r\n                }\r\n                else {\r\n                    setSalaryError(false)\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleCheckboxChange = (name) => (event) => {\r\n        console.log(name);\r\n        setFieldsDisabled({\r\n            ...fieldsDisabled,\r\n            [name]: !event.target.checked,\r\n        });\r\n    };\r\n\r\n    const handleUpdateCandidate = (item, index) => {\r\n        let serialId = item?.serial_id\r\n        console.log(item);\r\n        setCandidateIndex(item?.serial_id)\r\n        setDocuments(item?.documents)\r\n        setUpdateCandidate(item)\r\n        setOpen1(true)\r\n        console.log(item);\r\n\r\n        setVisaTenture(item?.visa_tenure)\r\n        setVisaType(item?.visa_type)\r\n\r\n        setValue2('candidateName', item?.name)\r\n        setValue2('Phone', item?.phone)\r\n        setValue2('email', item?.email)\r\n        setValue2('campLocation', item?.camp_location)\r\n        setValue2('passportNumber', item?.passport_number)\r\n        setValue2('employeeid', item?.employee_id)\r\n        setValue2('passportExp', moment(item?.passport_expiry).format('YYYY-MM-DD'))\r\n        handleDate(item?.passport_expiry)\r\n        if (item.vip_medical_extra) {\r\n            setVipMedicalCheck(true)\r\n        }\r\n        else {\r\n            setVipMedicalCheck(false)\r\n        }\r\n        setSelectedCountry(item?.nationality)\r\n        setValue2('nationality', item?.nationality)\r\n        setValue2('visaDesignation', item?.visa_designation)\r\n        setValue2('basic', item?.salary_basic)\r\n        setValue2('allowance', item?.salary_allowance)\r\n        setValue2('endConsumer', item?.end_consumer)\r\n        setValue2('endConsumerCompany', item?.end_consumer_company)\r\n        setValue2('totalSalary', item?.salary_total)\r\n\r\n        setValue2('2yearInsideRate', item?.inside_rate)\r\n        setValue2('2yearOutsideRate', item?.outside_rate)\r\n        setValue2('2yearRenewalRates', item?.renewal_rate)\r\n\r\n\r\n        setValue2('1yearInsideRate', item?.inside_rate)\r\n        setValue2('1yearOutsideRate', item?.outside_rate)\r\n        setValue2('1yearRenewalRates', item?.renewal_rate)\r\n\r\n\r\n\r\n        setValue2('monthlyVisaServiceCharges', item?.monthly_visa_service)\r\n        setValue2('vipMedical', item?.vip_medical_extra)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    const handleTotalVisaCharges = () => {\r\n        let fields = [];\r\n\r\n        // Determine which fields to use based on visaTenture and visaType\r\n        if (visaTenture.includes('1') && visaType.toLowerCase() == 'in') {\r\n            fields = [\r\n                '1yearInsideRate',\r\n                '1yearRenewalRates',\r\n                'monthlyVisaServiceCharges',\r\n                'vipMedical',\r\n                'extraTyping'\r\n            ];\r\n        } else if (visaTenture.includes('1') && visaType.toLowerCase() == 'out') {\r\n            fields = [\r\n                '1yearOutsideRate',\r\n                '1yearRenewalRates',\r\n                'monthlyVisaServiceCharges',\r\n                'vipMedical',\r\n                'extraTyping'\r\n            ];\r\n        } else if (visaTenture.includes('2') && visaType == 'in') {\r\n            fields = [\r\n                '2yearInsideRate',\r\n                '2yearRenewalRates',\r\n                'monthlyVisaServiceCharges',\r\n                'vipMedical',\r\n                'extraTyping'\r\n            ];\r\n        } else if (visaTenture.includes('2') && visaType.toLowerCase() === 'out') {\r\n            fields = [\r\n                '2yearOutsideRate',\r\n                '2yearRenewalRates',\r\n                'monthlyVisaServiceCharges',\r\n                'vipMedical',\r\n                'extraTyping'\r\n            ];\r\n        }\r\n\r\n        // Retrieve the current values of the specified fields\r\n        const values = getValues(fields);\r\n\r\n        // Convert non-numeric values to 0 and calculate the sum\r\n        const total = values.reduce((acc, value) => {\r\n            const numericValue = parseFloat(value) || 0;\r\n            return acc + numericValue;\r\n        }, 0);\r\n        setTotalVisaCharges(total)\r\n        console.log('Total Visa Charges:', total);\r\n    };\r\n    // *For Get Customer Detail\r\n    const getCustomerDetail = async (id, type) => {\r\n        try {\r\n            let params = { customer_id: id };\r\n            if (id) {\r\n\r\n                const { data } = await CustomerServices.getCustomerDetail(params);\r\n                console.log(data?.details?.security_deposit_scenario);\r\n                setByPass(data?.details?.bypass_requirements)\r\n                if(!data?.details?.bypass_requirements){\r\n                    getWPSList(1, 1, {}, id)\r\n                }\r\n                else{\r\n                    setWpsValid(false)\r\n                }\r\n               \r\n                // setCandidates([])\r\n                setCustomerPaymentType(data?.details?.security_deposit_scenario)\r\n\r\n\r\n                setCustomerBalance(data?.details?.deposit_balance)\r\n\r\n                setDepositScenario(data?.details?.security_deposit_scenario)\r\n                if (data?.details?.security_deposit_scenario == 'visa') {\r\n\r\n                    setEligibility(data?.details?.visa_eligibility_remaining)\r\n                    setTotalDepositCharges(data?.details?.deposit_per_visa)\r\n\r\n                }\r\n                else {\r\n                    setPayrollPercent(parseFloat(data?.details?.payroll_percentage))\r\n                    setEligibility(data?.details?.payroll_eligibility)\r\n                }\r\n                setCustomerDeposit(parseFloat(data?.details?.deposit_balance))\r\n                setCustomerDetail(data?.details);\r\n                let details = data?.details\r\n                if (type == 'update') {\r\n                    setValue2('1yearInsideRate', details?.one_year_inside)\r\n                    setValue2('1yearOutsideRate', details?.one_year_outside)\r\n                    setValue2('1yearRenewalRates', details?.one_year_renewal)\r\n                    setValue2('2yearInsideRate', details?.two_year_inside)\r\n                    setValue2('2yearOutsideRate', details?.two_year_outside)\r\n                    setValue2('2yearRenewalRates', details?.two_year_renewal)\r\n                    setValue2('monthlyVisaServiceCharges', details?.monthly_visa_service)\r\n\r\n\r\n\r\n                    handleTotalVisaCharges()\r\n                }\r\n                setValue('1yearInsideRate', details?.one_year_inside)\r\n                setValue('1yearOutsideRate', details?.one_year_outside)\r\n                setValue('1yearRenewalRates', details?.one_year_renewal)\r\n                setValue('2yearInsideRate', details?.two_year_inside)\r\n                setValue('2yearOutsideRate', details?.two_year_outside)\r\n                setValue('2yearRenewalRates', details?.two_year_renewal)\r\n                setValue('monthlyVisaServiceCharges', details?.monthly_visa_service)\r\n                setValue('vipMedical', details?.medical_extra)\r\n                setValue2('vipMedical', details?.medical_extra)\r\n                if (parseFloat(details?.medical_extra) > 0) {\r\n                    setVipMedicalCheck(true)\r\n                }\r\n                else {\r\n                    setVipMedicalCheck(false)\r\n                }\r\n\r\n\r\n                handleTotalVisaCharges()\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            showErrorToast(error);\r\n        }\r\n    };\r\n\r\n    // *For Get Customer Queue\r\n    const getWPSList = async (page, limit, filter, id) => {\r\n        // setLoader(true)\r\n        try {\r\n            const Page = page ? page : currentPage\r\n            const Limit = limit ? limit : pageLimit\r\n            const Filter = { ...filters, ...filter }\r\n            setCurrentPage(Page)\r\n            setPageLimit(Limit)\r\n            setFilters(Filter)\r\n            let params = {\r\n                page: Page,\r\n                limit: 1,\r\n                customer_id: user?.user_type == 'C' ? user?.customer_id : id,\r\n\r\n\r\n            }\r\n            params = { ...params, ...Filter }\r\n\r\n            const { data } = await CustomerServices.checkWPS(params)\r\n            setWpsValid(data?.wpsRequired)\r\n            console.log(data);\r\n\r\n            // if (data?.rows?.length > 0) {\r\n\r\n            //     let dateMonth = moment(data?.rows[0]?.date).startOf(\"month\");\r\n            //     let currentMonth = moment().startOf(\"month\");\r\n\r\n            //     let diff = currentMonth.diff((dateMonth), 'months')\r\n            //     console.log(diff, 'diff');\r\n            //     if (diff <= 1) {\r\n            //         setWpsValid(true)\r\n            //     }\r\n            //     else {\r\n            //         setWpsValid(false)\r\n            //     }\r\n            // }\r\n            // else {\r\n            //     setWpsValid(true)\r\n            // }\r\n\r\n\r\n        } catch (error) {\r\n            showErrorToast(error)\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    }\r\n\r\n    const verifyPassportNumber = async (value) => {\r\n        let passportNumber = getValues('passportNumber')\r\n        if (passportNumber) {\r\n\r\n            try {\r\n                let obj = {\r\n                    passport_number: passportNumber.toUpperCase(),\r\n                };\r\n\r\n                console.log(obj);\r\n\r\n                const { data } = await CustomerServices.getCandidateDetail(obj);\r\n\r\n                console.log(data);\r\n                 if (data?.customer_id && (data.approval_status == 'Pending' || data.approval_status == 'Approved' || data.admin_rejected == false || data.admin_rejected == null)) {\r\n                    setVerifyPassport(true)\r\n                    showErrorToast('Passport Number  already exists')\r\n                }\r\n                else {\r\n                    setVerifyPassport(false)\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                setVerifyPassport(false)\r\n                showErrorToast(error)\r\n            }\r\n        }\r\n    };\r\n\r\n    const verifyPassportNumber2 = async (value) => {\r\n        let passportNumber = getValues2('passportNumber')\r\n        if (passportNumber) {\r\n\r\n            try {\r\n                let obj = {\r\n                    passport_number: passportNumber.toUpperCase(),\r\n                };\r\n\r\n                console.log(obj);\r\n\r\n                const { data } = await CustomerServices.getCandidateDetail(obj);\r\n\r\n                console.log(data);\r\n                if (data?.customer_id && (data.approval_status == 'Pending' || data.approval_status == 'Approved' || data.admin_rejected == false || data.admin_rejected == null)){\r\n                    setVerifyPassport2(true)\r\n                    showErrorToast('Passport Number already existss')\r\n                }\r\n                else {\r\n                    setVerifyPassport2(false)\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                setVerifyPassport2(false)\r\n                showErrorToast(error)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        // Access the candidate to be deleted\r\n        const deletedCandidate = candidates[index];\r\n\r\n        // Log the deposit_consumed value\r\n        setCustomerBalance(parseFloat(customerBalance) + parseFloat(deletedCandidate.deposit_consumed))\r\n        if (customerPaymentType == 'visa') {\r\n            setEligibility(eligibility + 1)\r\n        }\r\n        console.log('Deleted deposit_consumed', parseFloat(customerBalance) + parseFloat(deletedCandidate.deposit_consumed));\r\n        setCandidates((prevCandidates) => prevCandidates.filter((_, i) => i !== index));\r\n    };\r\n\r\n\r\n    const handleDocArrayUpdate = async (field, value, key) => {\r\n        console.log(documents);\r\n\r\n        if (field === 'path') {\r\n            const updatedDocuments = documents.map(doc => {\r\n                if (doc.key === key) {\r\n                    return { ...doc, path: value }; // Update the path\r\n                }\r\n                return doc; // Return the document as is if the key doesn't match\r\n            });\r\n            console.log(updatedDocuments);\r\n            // Assuming you want to update the documents array\r\n            // You can replace the following line with your state updating logic\r\n            setDocuments(updatedDocuments)\r\n        } else {\r\n            const updatedDocuments = documents.map(doc => {\r\n                if (doc.key === key) {\r\n                    return { ...doc, expiry_date: moment(value).format('YYYY-MM-DD') }; // Update the path\r\n                }\r\n                return doc; // Return the document as is if the key doesn't match\r\n            });\r\n            console.log(updatedDocuments);\r\n            setDocuments(updatedDocuments)\r\n            // Handle other fields if needed\r\n        }\r\n    }\r\n    const AddCandidate = async (formData) => {\r\n        handleClose()\r\n        console.log(formData);\r\n        let sum = 0;\r\n        let sum2 = 0;\r\n\r\n        if (visaTenture.includes('1')) {\r\n            if (visaType.toLowerCase() === 'in') {\r\n                sum += parseFloat(Number(formData[\"1yearInsideRate\"]));\r\n            } else if (visaType.toLowerCase() === 'out') {\r\n                sum += parseFloat(Number(formData[\"1yearOutsideRate\"]));\r\n            }\r\n\r\n\r\n            sum += vipMedicalCheck ? parseFloat(Number(formData[\"vipMedical\"])) || 0 : 0;\r\n\r\n        } else if (visaTenture.includes('2')) {\r\n            if (visaType.toLowerCase() === 'in') {\r\n                sum += parseFloat(Number(formData[\"2yearInsideRate\"]));\r\n            } else if (visaType.toLowerCase() === 'out') {\r\n                sum += parseFloat(Number(formData[\"2yearOutsideRate\"]));\r\n            }\r\n            sum += vipMedicalCheck ? parseFloat(Number(formData[\"vipMedical\"])) || 0 : 0;\r\n\r\n        }\r\n\r\n        if (visaTenture.includes('1')) {\r\n            if (visaType.toLowerCase() === 'in') {\r\n                sum2 += parseFloat(Number(charges?.one_year_inside));\r\n            } else if (visaType.toLowerCase() === 'out') {\r\n                sum2 += parseFloat(Number(charges?.one_year_outside));\r\n            }\r\n\r\n\r\n            sum2 += vipMedicalCheck ? parseFloat(Number(charges?.medical_extra)) || 0 : 0;\r\n\r\n        } else if (visaTenture.includes('2')) {\r\n            if (visaType.toLowerCase() === 'in') {\r\n                sum2 += parseFloat(Number(charges?.two_year_inside));\r\n            } else if (visaType.toLowerCase() === 'out') {\r\n                sum2 += parseFloat(Number(charges?.two_year_outside));\r\n            }\r\n            sum2 += vipMedicalCheck ? parseFloat(Number(charges?.medical_extra)) || 0 : 0;\r\n\r\n        }\r\n        console.log(sum, 'sum');\r\n        console.log(sum2, 'sum');\r\n\r\n        try {\r\n            setCandidates((prevCandidates) => {\r\n                // const newSerialId = prevCandidates.length + 1;\r\n                // console.log(prevCandidates);\r\n                const lastElement = prevCandidates[prevCandidates.length - 1];\r\n                console.log(lastElement);\r\n                let multiplier = payrollPercent / 100\r\n\r\n\r\n                let obj = {\r\n                    serial_id: prevCandidates?.length > 0 ? Number(lastElement.serial_id) + 1 : 1,\r\n                    name: formData?.candidateName,\r\n                    phone: formData?.Phone,\r\n                    email: formData?.email,\r\n                    visa_charges: sum,\r\n                    visa_cost: sum2,\r\n                    visa_type: visaType,\r\n                    visa_tenure: visaTenture,\r\n                    employee_id: formData?.employeeid,\r\n                    deposit_consumed: customerPaymentType === 'visa' ? totalDepositCharges : parseFloat(parseFloat(formData?.basic) + parseFloat(formData?.allowance)) * multiplier,\r\n                    security_deposit_visa: totalDepositCharges,\r\n                    payroll_percentage: payrollPercent,\r\n                    inside_rate: visaTenture.includes('1') ? formData[\"1yearInsideRate\"] : formData[\"2yearInsideRate\"],\r\n                    outside_rate: visaTenture.includes('1') ? formData[\"1yearOutsideRate\"] : formData[\"2yearOutsideRate\"],\r\n                    renewal_rate: 0,\r\n                    vip_medical_temp: formData?.vipMedical,\r\n                    vip_medical_extra: vipMedicalCheck ? formData?.vipMedical ? formData?.vipMedical : null : null,\r\n                    camp_location: formData?.campLocation,\r\n                    nationality: selectedCountry,\r\n                    nationality_id: selectedCountry?.id,\r\n                    passport_number: formData?.passportNumber.toUpperCase(),\r\n                    passport_expiry: moment(formData?.passportExp).format('YYYY-MM-DD'),\r\n                    visa_designation: formData?.visaDesignation,\r\n                    salary_basic: formData?.basic,\r\n                    salary_allowance: formData?.allowance,\r\n                    salary_total: parseFloat(parseFloat(formData?.basic) + parseFloat(formData?.allowance)).toFixed(2),\r\n                    end_consumer: formData?.endConsumer,\r\n                    end_consumer_company: formData?.endConsumerCompany,\r\n                    documents: documents\r\n                };\r\n\r\n                console.log('Adding candidate:', obj);\r\n                console.log('Previous candidates:', prevCandidates);\r\n\r\n                return [...prevCandidates, obj];\r\n            });\r\n\r\n\r\n\r\n\r\n            setDocuments([\r\n                {\r\n                    name: \"Employee Undertaking\",\r\n                    key: \"undertaking\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n\r\n\r\n                },\r\n                {\r\n                    name: \"Company Undertaking\",\r\n                    key: \"cundertaking\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n                },\r\n\r\n                {\r\n                    name: \"Passport Copy\",\r\n                    key: \"passportcopy\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n                },\r\n                {\r\n                    name: \"Digital Photo\",\r\n                    key: \"digitalphoto\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n                },\r\n                {\r\n                    name: \"Employment Contract\",\r\n                    key: \"contract\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n                },\r\n                {\r\n                    name: \"Offer Letter\",\r\n                    key: \"offerletter\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: true\r\n                },\r\n                {\r\n                    name: \"Previous Emirates Ids\",\r\n                    key: \"emiratesids\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n                {\r\n                    name: \"Previous UAE Visa Copy\",\r\n                    key: \"uaevisa\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n                {\r\n                    name: \"Cancellation\",\r\n                    key: \"cancellation\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n                {\r\n                    name: \"UAE Driving License\",\r\n                    key: \"drivinglicense\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n                {\r\n                    name: \"Work Permit\",\r\n                    key: \"workpermit\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n                {\r\n                    name: \"Other Documents\",\r\n                    key: \"otherdoc\",\r\n                    path: \"\",\r\n                    expiry_date: null,\r\n                    is_required: false\r\n                },\r\n\r\n            ])\r\n            reset()\r\n\r\n            setDate(null)\r\n            setSelectedCountry(null)\r\n            console.log(candidates);\r\n            // Add your logic to handle the form data here, e.g., sending it to an API.\r\n        } catch (error) {\r\n            console.error('Error adding candidate:', error);\r\n            // Handle the error appropriately, e.g., displaying an error message to the user.\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    const UpdateCandidate = async (formData) => {\r\n        if (!salaryError && !byPass) {\r\n\r\n            handleClose()\r\n            console.log(candidateIndex);\r\n            let sum = 0\r\n            let sum2 = 0\r\n            if (visaTenture.includes('1')) {\r\n                if (visaType.toLowerCase() === 'in') {\r\n                    sum += parseFloat(Number(formData[\"1yearInsideRate\"]));\r\n                } else if (visaType.toLowerCase() === 'out') {\r\n                    sum += parseFloat(Number(formData[\"1yearOutsideRate\"]));\r\n                }\r\n\r\n\r\n                sum += vipMedicalCheck ? parseFloat(Number(formData[\"vipMedical\"])) || 0 : 0;\r\n\r\n            } else if (visaTenture.includes('2')) {\r\n                if (visaType.toLowerCase() === 'in') {\r\n                    sum += parseFloat(Number(formData[\"2yearInsideRate\"]));\r\n                } else if (visaType.toLowerCase() === 'out') {\r\n                    sum += parseFloat(Number(formData[\"2yearOutsideRate\"]));\r\n                }\r\n                sum += vipMedicalCheck ? parseFloat(Number(formData[\"vipMedical\"])) || 0 : 0;\r\n\r\n            }\r\n            if (visaTenture.includes('1')) {\r\n                if (visaType.toLowerCase() === 'in') {\r\n                    sum2 += parseFloat(Number(charges?.one_year_inside));\r\n                } else if (visaType.toLowerCase() === 'out') {\r\n                    sum2 += parseFloat(Number(charges?.one_year_outside));\r\n                }\r\n\r\n\r\n                sum2 += vipMedicalCheck ? parseFloat(Number(charges?.medical_extra)) || 0 : 0;\r\n\r\n            } else if (visaTenture.includes('2')) {\r\n                if (visaType.toLowerCase() === 'in') {\r\n                    sum2 += parseFloat(Number(charges?.two_year_inside));\r\n                } else if (visaType.toLowerCase() === 'out') {\r\n                    sum2 += parseFloat(Number(charges?.two_year_outside));\r\n                }\r\n                sum2 += vipMedicalCheck ? parseFloat(Number(charges?.medical_extra)) || 0 : 0;\r\n\r\n            }\r\n            console.log(sum2, 'sum');\r\n            console.log(vipMedicalCheck, 'sum2');\r\n\r\n            let multiplier = payrollPercent / 100\r\n\r\n            try {\r\n                let obj = {\r\n                    serial_id: candidateIndex,\r\n                    name: formData?.candidateName,\r\n                    phone: formData?.Phone,\r\n                    email: formData?.email,\r\n                    camp_location: formData?.campLocation,\r\n                    visa_charges: sum,\r\n                    visa_cost: sum2,\r\n                    visa_type: visaType,\r\n                    visa_tenure: visaTenture,\r\n                    deposit_consumed: customerPaymentType === 'visa' ? totalDepositCharges : parseFloat(parseFloat(formData?.basic) + parseFloat(formData?.allowance)) * multiplier,\r\n                    security_deposit_visa: totalDepositCharges,\r\n                    payroll_percentage: payrollPercent,\r\n                    inside_rate: visaTenture.includes('1') ? formData[\"1yearInsideRate\"] : formData[\"2yearInsideRate\"],\r\n                    outside_rate: visaTenture.includes('1') ? formData[\"1yearOutsideRate\"] : formData[\"2yearOutsideRate\"],\r\n                    renewal_rate: 0,\r\n                    vip_medical_temp: formData?.vipMedical,\r\n                    vip_medical_extra: vipMedicalCheck ? formData?.vipMedical : null,\r\n                    nationality: selectedCountry,\r\n                    nationality_id: selectedCountry?.id,\r\n                    passport_number: formData?.passportNumber.toUpperCase(),\r\n                    employee_id: formData?.employeeid,\r\n                    passport_expiry: moment(formData?.passportExp).format('YYYY-MM-DD'),\r\n                    visa_designation: formData?.visaDesignation,\r\n                    salary_basic: formData?.basic,\r\n                    salary_allowance: formData?.allowance,\r\n                    salary_total: parseFloat(parseFloat(formData?.basic) + parseFloat(formData?.allowance)).toFixed(2),\r\n                    end_consumer: formData?.endConsumer,\r\n                    end_consumer_company: formData?.endConsumerCompany,\r\n                    documents: documents\r\n                }\r\n                console.log(obj);\r\n                // setCandidates((prevCandidates) => [...prevCandidates, obj]);\r\n                const updatedCandidates = candidates.map(candidate =>\r\n                    candidate.serial_id === candidateIndex ? obj : candidate\r\n                );\r\n                console.log(updatedCandidates);\r\n                setOpen1(false)\r\n                // Update the state with the updated candidates array\r\n                setCandidates(updatedCandidates);\r\n                reset()\r\n                setDocuments([\r\n                    {\r\n                        name: \"Employee Undertaking\",\r\n                        key: \"undertaking\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n\r\n\r\n                    },\r\n                    {\r\n                        name: \"Company Undertaking\",\r\n                        key: \"cundertaking\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n                    },\r\n\r\n                    {\r\n                        name: \"Passport Copy\",\r\n                        key: \"passportcopy\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n                    },\r\n                    {\r\n                        name: \"Digital Photo\",\r\n                        key: \"digitalphoto\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n                    },\r\n                    {\r\n                        name: \"Employment Contract\",\r\n                        key: \"contract\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n                    },\r\n                    {\r\n                        name: \"Offer Letter\",\r\n                        key: \"offerletter\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: true\r\n                    },\r\n                    {\r\n                        name: \"Previous Emirates Ids\",\r\n                        key: \"emiratesids\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n                    {\r\n                        name: \"Previous UAE Visa Copy\",\r\n                        key: \"uaevisa\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n                    {\r\n                        name: \"Cancellation\",\r\n                        key: \"cancellation\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n                    {\r\n                        name: \"UAE Driving License\",\r\n                        key: \"drivinglicense\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n                    {\r\n                        name: \"Work Permit\",\r\n                        key: \"workpermit\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n                    {\r\n                        name: \"Other Documents\",\r\n                        key: \"otherdoc\",\r\n                        path: \"\",\r\n                        expiry_date: null,\r\n                        is_required: false\r\n                    },\r\n\r\n                ])\r\n                console.log(candidates);\r\n                // Add your logic to handle the form data here, e.g., sending it to an API.\r\n            } catch (error) {\r\n                console.error('Error adding candidate:', error);\r\n                // Handle the error appropriately, e.g., displaying an error message to the user.\r\n            }\r\n        }\r\n        else {\r\n            showErrorToast('Salary Limit Exceeded')\r\n        }\r\n    }\r\n    // *For Get Customer Queue\r\n\r\n    const getCustomerQueue = async (page, limit, filter) => {\r\n        // setLoader(true)\r\n        try {\r\n            const Page = page ? page : currentPage\r\n            const Limit = limit ? limit : pageLimit\r\n            const Filter = { ...filters, ...filter }\r\n            setCurrentPage(Page)\r\n            setPageLimit(Limit)\r\n            setFilters(Filter)\r\n            let params = {\r\n                page: Page,\r\n                limit: 1000,\r\n            }\r\n            params = { ...params, ...Filter }\r\n            const { data } = await CustomerServices.getCustomerQueue(params)\r\n            if (user?.user_type == 'C') {\r\n                console.log(customerQueue);\r\n                let currentUser = data?.rows?.find(item => item?.id == user?.customer_id)\r\n                console.log(currentUser);\r\n                setSelectedCustomer(currentUser)\r\n                setValue1('customer', currentUser)\r\n                getCustomerDetail(currentUser?.id)\r\n            }\r\n            setCustomerQueue(data?.rows)\r\n\r\n        } catch (error) {\r\n            showErrorToast(error)\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getCustomerQueue()\r\n        getCountries()\r\n        getData()\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        if (candidates.length > 0) {\r\n            setSubmit(true)\r\n        }\r\n        const totalSalary = candidates.reduce((sum, candidate) => sum + parseFloat(candidate.salary_total), 0);\r\n        // Update the candidateSalary state with the calculated sum\r\n        console.log(totalSalary);\r\n\r\n        let multiplier = payrollPercent / 100\r\n        setCandidateSalary(parseFloat(parseFloat(totalSalary) * parseFloat(multiplier)));\r\n\r\n\r\n    }, [candidates])\r\n\r\n    return (\r\n        <Box sx={{ p: 3 }}>\r\n            {/* ========== Confirmation Dialog ========== */}\r\n            <ConfirmationDialog2\r\n                warning={true}\r\n                open={confirmationDialog3}\r\n                onClose={() => setConfirmationDialog3(false)}\r\n\r\n                action={() => {\r\n                    setConfirmationDialog3(false);\r\n                    CreateVisa()\r\n                }}\r\n            />\r\n            <ConfirmationDialog\r\n                open={confirmationDialog}\r\n                onClose={() => setConfirmationDialog(false)}\r\n                message={\"You Have Unsaved Changes on this Page\"}\r\n                action={() => {\r\n                    setConfirmationDialog(false);\r\n                    handleClose()\r\n                    handleClose1()\r\n                }}\r\n            />\r\n            <ConfirmationDialog\r\n                open={confirmationDialog2}\r\n                onClose={() => setConfirmationDialog2(false)}\r\n                message={\"You Have Unsaved Changes on this Page\"}\r\n                action={() => {\r\n                    setConfirmationDialog2(false);\r\n\r\n                }}\r\n            />\r\n            <Dialog\r\n                component={'form'} onSubmit={handleSubmit(AddCandidate)}\r\n                open={open}\r\n\r\n                maxWidth={'md'}\r\n                fullWidth={true}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Add Candidate</DialogTitle>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        <Grid container spacing={2}>\r\n                            <Grid container mt={5} pl={3}>\r\n                                <Grid item xs={3} sm={3}>\r\n                                    <Typography sx={{ fontSize: '15px', color: Colors.black, mb: 2, fontWeight: 'bold' }}>Visa Type : </Typography>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            row\r\n                                            defaultValue={visaType}\r\n\r\n                                            onChange={(e) => {\r\n                                                setVisaType(e.target.value);\r\n                                                console.log(getValues('1yearInsideRate'));\r\n                                                console.log(getValues('1yearOutsideRate'));\r\n                                                setTimeout(() => {\r\n                                                    setValue('1yearInsideRate', getValues('1yearInsideRate'))\r\n                                                    setValue('1yearOutsideRate', getValues('1yearOutsideRate'))\r\n                                                    console.log(getValues('1yearInsideRate'), 'asdasdasdasd');\r\n                                                }, 1000);\r\n\r\n\r\n\r\n                                            }}\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"In\"\r\n                                                control={<Radio />}\r\n                                                label=\"In\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"out\"\r\n                                                control={<Radio />}\r\n                                                label=\"Out\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={3} sm={3}>\r\n                                    <Typography sx={{ fontSize: '15px', color: Colors.black, mb: 2, fontWeight: 'bold' }}>Visa Tenure : </Typography>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            row\r\n                                            defaultValue={visaTenture}\r\n                                            onChange={(e) => {\r\n                                                console.log(e.target.value);\r\n                                                setVisaTenture(e.target.value);\r\n\r\n                                            }}\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"1 year\"\r\n                                                control={<Radio />}\r\n                                                label=\"1 Year\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"2 year\"\r\n                                                control={<Radio />}\r\n                                                label=\"2 Years\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.textColorDarkBlue, p: 3 }}>Visa Rates : </Typography>\r\n                            {<Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mt: 3 }}>{visaTenture.includes('1') ? \"1 Year Rates \" : \"2 Years Rates \"}</Typography>}\r\n\r\n                            <Grid container pl={3}>\r\n\r\n                                {visaTenture.includes('1') && visaType.toLowerCase() == 'in' && <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n\r\n                                    <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Year Inside Rates :* '} StartLabel={'AED'} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} register={register(\"1yearInsideRate\", { required: \"Enter year inside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                    </Grid>\r\n\r\n                                    {/* <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Renewal Rates :*  '} StartLabel={'AED'} disabled={user?.user_type == 'C' ? true : false }  register={register(\"1yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                    </Grid> */}\r\n\r\n\r\n\r\n                                </Grid>}\r\n                                {visaTenture.includes('1') && visaType.toLowerCase() == 'out' && <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n\r\n                                    <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Year Outside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register(\"1yearOutsideRate\", { required: \"Enter year outside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                    </Grid>\r\n\r\n                                    {/* <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false }  StartLabel={'AED'} register={register(\"1yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                    </Grid> */}\r\n\r\n\r\n\r\n                                </Grid>}\r\n\r\n                                {visaTenture.includes('2') && visaType.toLowerCase() == 'in' && <>\r\n\r\n                                    <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                        <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Year Inside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register(\"2yearInsideRate\", { required: \"Enter year inside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                        {/* <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false }  StartLabel={'AED'} register={register(\"2yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                        </Grid> */}\r\n\r\n\r\n\r\n                                    </Grid></>}\r\n                                {visaTenture.includes('2') && visaType.toLowerCase() == 'out' && <>\r\n\r\n                                    <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                        <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Year Outside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register(\"2yearOutsideRate\", { required: \"Enter year outside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                        </Grid>\r\n\r\n\r\n                                        {/* <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false }  StartLabel={'AED'} register={register(\"2yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                        </Grid> */}\r\n\r\n\r\n\r\n                                    </Grid></>}\r\n                            </Grid>\r\n                            <Grid container p={3}>\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2 }}>Extra Costing : </Typography>\r\n\r\n                                <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                    <Grid item xs={5}>\r\n                                        <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n                                            <Box sx={{ marginTop: '22px' }}>\r\n                                                {<Checkbox checked={vipMedicalCheck} onChange={() => setVipMedicalCheck(!vipMedicalCheck)} />}\r\n                                                {/* <Controller\r\n                                                    \r\n                                                    \r\n                                                        <FormControlLabel\r\n                                                            control={<Checkbox checked={vipMedicalCheck} onChange={()=> setVipMedicalCheck(!vipMedicalCheck)} />\r\n\r\n                                                        />\r\n                                                    \r\n                                                /> */}\r\n                                            </Box>\r\n                                            <LabelCustomInput\r\n                                                label=\"VIP Medical Charges : \"\r\n                                                disabled={user?.user_type == 'C' || user?.user_type == 'A' || !vipMedicalCheck}\r\n                                                StartLabel=\"AED\"\r\n                                                register={register('vipMedical', { required: false })}\r\n                                                postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true}\r\n\r\n                                            />\r\n\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Candidate Name :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Candidate Name\"}\r\n                                    error={errors?.candidateName?.message}\r\n                                    register={register(\"candidateName\", {\r\n                                        required:\r\n                                            \"Please enter your candidate name.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Phone :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    type={'number'}\r\n                                    placeholder={\"Phone\"}\r\n                                    error={errors?.Phone?.message}\r\n                                    register={register(\"Phone\", {\r\n                                        required:\r\n                                            \"Please enter your Phone.\",\r\n                                        pattern: {\r\n                                            value: /^05[0-9]{8}$/,\r\n                                            message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                        }\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Email :*\"}\r\n                                    fullWidth={true}\r\n                                    size={'small'}\r\n                                    placeholder={\"Email\"}\r\n                                    error={errors?.email?.message}\r\n                                    register={register(\"email\", {\r\n                                        required: \"Please enter your email.\",\r\n                                        pattern: {\r\n                                            value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                            message: \"Please enter a valid email address.\"\r\n                                        }\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Camp Location  :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Camp Location \"}\r\n                                    error={errors?.campLocation?.message}\r\n                                    register={register(\"campLocation\", {\r\n                                        required:\r\n                                            \"Please enter your camp location.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Employee ID :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Employee ID\"}\r\n                                    error={errors?.employeeid?.message}\r\n                                    register={register(\"employeeid\", {\r\n                                        required:\r\n                                            \"Please enter your employee id.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Nationality :*'}\r\n                                    options={countries}\r\n                                    selected={selectedCountry}\r\n                                    onSelect={(value) => setSelectedCountry(value)}\r\n                                    error={errors?.nationality?.message}\r\n                                    register={register(\"nationality\", {\r\n                                        required: 'Please select nationality'\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Passport Number :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Passport Number\"}\r\n                                    error={errors?.passportNumber?.message}\r\n                                    register={register(\"passportNumber\", {\r\n                                        required:\r\n                                            \"Please enter your passport number.\",\r\n                                        onChange: (e) => {\r\n                                            console.log('asdas');\r\n\r\n                                            Debounce2(() => verifyPassportNumber());\r\n                                            // Delay the execution of verifyPassportNumber by 2 seconds\r\n\r\n                                        },\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                            <DatePicker\r\n                                    label={\"Passport Expiry :*\"}\r\n                                    value={date}\r\n                                    disablePast={true}\r\n                                    minDate={addDays(addMonths(new Date(), 6), 1)} \r\n                                    size={'small'}\r\n                                    error={errors?.passportExp?.message}\r\n                                    {...register(\"passportExp\", {\r\n                                        required: \"Please enter your passport expiry date.\",\r\n                                        validate: (value) => {\r\n                                            const minAllowedDate = addMonths(new Date(), 6);\r\n                                            console.log(value,'value');\r\n                                            console.log(moment(minAllowedDate),'value');\r\n                                            console.log(moment(value) > moment(minAllowedDate),'value');\r\n                                            \r\n                                            return moment(value) > moment(minAllowedDate) || \"Passport expiry date must be at least 6 months from today.\";\r\n                                        },\r\n                                    })}\r\n                                    onChange={(date) => {\r\n                                        handleDate(date);\r\n                                        setValue(\"passportExp\", date, { shouldValidate: true });\r\n                                    }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Visa Designation :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Visa Designation\"}\r\n                                    error={errors?.visaDesignation?.message}\r\n                                    register={register(\"visaDesignation\", {\r\n                                        required:\r\n                                            \"Please enter your visa designation .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue }}>Salary : </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <LabelCustomInput label={'Basic :* '} StartLabel={'AED'} placeholder={'Basic'} error={errors?.basic?.message} register={register(\"basic\", { required: \"Enter basic  salary\", onChange: (e) => totalSalaryCalc() })} />\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <LabelCustomInput allowance={true} label={'Allowance : '} StartLabel={'AED'} placeholder={'Allowance'} error={errors?.allowance?.message} register={register(\"allowance\", { required: \"Enter allowance \", onChange: (e) => totalSalaryCalc() })} />\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n\r\n                                <LabelCustomInput disabled={true} label={'Total Salary : '} StartLabel={'AED'} placeholder={'Total'} register={register(\"totalSalary\")} />\r\n                                {(customerPaymentType == 'payroll' && salaryError) ? <p style={{ color: 'red' }}>Salary Limit Exceeded </p> : ''}\r\n                                {(customerPaymentType == 'payroll' && depositError) ? <p style={{ color: 'red' }}>Deposit Balance is Low </p> : ''}\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"End Consumer :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"End Consumer\"}\r\n                                    error={errors?.endConsumer?.message}\r\n                                    register={register(\"endConsumer\", {\r\n                                        required:\r\n                                            \"Please enter your end consumer  .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid> */}\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"End Consumer Company :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"End Consumer Company \"}\r\n                                    error={errors?.endConsumerCompany?.message}\r\n                                    register={register(\"endConsumerCompany\", {\r\n                                        required:\r\n                                            \"Please enter your end consumer company .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue }}>Documents : </Typography>\r\n                            </Grid>\r\n                            {documents?.length > 0 && documents?.map((item, index) => (\r\n\r\n\r\n                                <Grid item xs={5} >\r\n                                    <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.gray }}>{item?.is_required ? item?.name : item?.name + \" \" + '(If Any)'} : {item?.is_required ? '*' : ''} </Typography>\r\n                                    <UploadFile\r\n                                        Memo={true}\r\n                                        accept={allowFilesType}\r\n                                        file={documents}\r\n                                        multiple={true}\r\n                                        updateResult={updateResult}\r\n                                        fileId={item?.key}\r\n                                        loader={loader}\r\n                                        error={errors[item?.key]?.message}\r\n                                        disabled={isUploading} // Disable while uploading\r\n                                        register={register(`${item?.key}`, {\r\n                                            required: item?.is_required ? documents.find((item2 => item2?.key == item?.key))?.path != '' ? false :\r\n                                                \"Please upload document.\" : false,\r\n                                            onChange: async (e) => {\r\n                                                setIsUploading(true); // Set uploading to true when the upload starts\r\n                                                const path = await handleUploadDocument(e, item?.key);\r\n                                                if (path) {\r\n                                                    handleDocArrayUpdate('path', path, item?.key);\r\n                                                    console.log(path);\r\n                                                }\r\n                                                setIsUploading(false); // Reset uploading status when done\r\n                                            }\r\n                                        })}\r\n                                    />\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n                            ))}\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button sx={{ fontFamily: 'Public Sans' }} onClick={() => {\r\n                        setConfirmationDialog(true)\r\n                        setVerifyPassport(false)\r\n                        setDocuments([\r\n                            {\r\n                                name: \"Employee Undertaking\",\r\n                                key: \"undertaking\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n\r\n\r\n                            },\r\n                            {\r\n                                name: \"Company Undertaking\",\r\n                                key: \"cundertaking\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n                            },\r\n\r\n                            {\r\n                                name: \"Passport Copy\",\r\n                                key: \"passportcopy\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n                            },\r\n                            {\r\n                                name: \"Digital Photo\",\r\n                                key: \"digitalphoto\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n                            },\r\n                            {\r\n                                name: \"Employment Contract\",\r\n                                key: \"contract\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n                            },\r\n                            {\r\n                                name: \"Offer Letter\",\r\n                                key: \"offerletter\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: true\r\n                            },\r\n                            {\r\n                                name: \"Previous Emirates Ids\",\r\n                                key: \"emiratesids\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n                            {\r\n                                name: \"Previous UAE Visa Copy\",\r\n                                key: \"uaevisa\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n                            {\r\n                                name: \"Cancellation\",\r\n                                key: \"cancellation\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n                            {\r\n                                name: \"UAE Driving License\",\r\n                                key: \"drivinglicense\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n                            {\r\n                                name: \"Work Permit\",\r\n                                key: \"workpermit\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n                            {\r\n                                name: \"Other Documents\",\r\n                                key: \"otherdoc\",\r\n                                path: \"\",\r\n                                expiry_date: null,\r\n                                is_required: false\r\n                            },\r\n\r\n                        ])\r\n\r\n                    }}>Cancel</Button>\r\n                    <Button sx={{ fontFamily: 'Public Sans' }} disabled={(customerPaymentType == 'payroll' && (salaryError || depositError)) || verifyPassport ? true : false} type='submit'>Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                component={'form'} onSubmit={handleSubmit2(UpdateCandidate)}\r\n                open={open1}\r\n\r\n                maxWidth={'md'}\r\n                fullWidth={true}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Update Candidate</DialogTitle>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        <Grid container spacing={2}>\r\n                            <Grid container mt={5} pl={3}>\r\n                                <Grid item xs={3} sm={3}>\r\n                                    <Typography sx={{ fontSize: '15px', color: Colors.black, mb: 2, fontWeight: 'bold' }}>Visa Type : </Typography>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            row\r\n                                            defaultValue={visaType}\r\n                                            onChange={(e) => {\r\n                                                setVisaType(e.target.value);\r\n                                                console.log(getValues('1yearInsideRate'));\r\n                                                console.log(getValues('1yearOutsideRate'));\r\n                                                getCustomerDetail(selectedCustomer?.id, 'update')\r\n                                                setTimeout(() => {\r\n                                                    setValue2('2yearInsideRate', getValues('2yearInsideRate'))\r\n                                                    setValue2('2yearOutsideRate', getValues('2yearOutsideRate'))\r\n                                                    console.log(getValues('1yearInsideRate'), 'asdasdasdasd');\r\n                                                }, 1000);\r\n                                            }}\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n                                                value=\"In\"\r\n                                                control={<Radio />}\r\n                                                label=\"In\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n                                                value=\"out\"\r\n                                                control={<Radio />}\r\n                                                label=\"Out\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={3} sm={3}>\r\n                                    <Typography sx={{ fontSize: '15px', color: Colors.black, mb: 2, fontWeight: 'bold' }}>Visa Tenure : </Typography>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            row\r\n                                            defaultValue={visaTenture}\r\n                                            onChange={(e) => {\r\n                                                console.log(e.target.value);\r\n                                                setVisaTenture(e.target.value);\r\n                                                getCustomerDetail(selectedCustomer?.id, 'update')\r\n                                            }}\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"1 year\"\r\n                                                control={<Radio />}\r\n                                                label=\"1 Year\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                sx={{ color: \"#000\" }}\r\n\r\n                                                value=\"2 year\"\r\n                                                control={<Radio />}\r\n                                                label=\"2 Years\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.textColorDarkBlue, p: 3 }}>Visa Rates : </Typography>\r\n                            {<Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mt: 3 }}>{visaTenture.includes('1') ? \"1 Year Rates \" : \"2 Years Rates \"}</Typography>}\r\n\r\n                            <Grid container pl={3}>\r\n\r\n                                {visaTenture.includes('1') && visaType.toLowerCase() == 'in' && <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n\r\n                                    <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Year Inside Rates :* '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register2(\"1yearInsideRate\", { required: \"Enter year inside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                    </Grid>\r\n\r\n                                    {/* <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false }  StartLabel={'AED'} register={register2(\"1yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                    </Grid> */}\r\n\r\n\r\n\r\n                                </Grid>}\r\n                                {visaTenture.includes('1') && visaType.toLowerCase() == 'out' && <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n\r\n                                    <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Year Outside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register2(\"1yearOutsideRate\", { required: \"Enter year outside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                    </Grid>\r\n\r\n                                    {/* <Grid item xs={5} >\r\n                                        <LabelCustomInput label={'Renewal Rates :*  '}  disabled={user?.user_type == 'C' ? true : false } StartLabel={'AED'} register={register2(\"1yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                    </Grid> */}\r\n\r\n\r\n\r\n                                </Grid>}\r\n\r\n                                {visaTenture.includes('2') && visaType.toLowerCase() == 'in' && <>\r\n\r\n                                    <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                        <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Year Inside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register2(\"2yearInsideRate\", { required: \"Enter year inside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                        {/* <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false } StartLabel={'AED'} register={register2(\"2yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                        </Grid> */}\r\n\r\n\r\n\r\n                                    </Grid></>}\r\n                                {visaTenture.includes('2') && visaType.toLowerCase() == 'out' && <>\r\n\r\n                                    <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                        <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Year Outside Rates :*  '} disabled={user?.user_type == 'C' || user?.user_type == 'A' ? true : false} StartLabel={'AED'} register={register2(\"2yearOutsideRate\", { required: \"Enter year outside rate\", onChange: () => handleTotalVisaCharges() })} postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true} />\r\n                                        </Grid>\r\n\r\n                                        {/* \r\n                                        <Grid item xs={5} >\r\n                                            <LabelCustomInput label={'Renewal Rates :*  '} disabled={user?.user_type == 'C' ? true : false } StartLabel={'AED'} register={register2(\"2yearRenewalRates\", { required: \"Enter renewal rate\", onChange: () => handleTotalVisaCharges() })} postfix={true} />\r\n                                        </Grid> */}\r\n\r\n\r\n\r\n                                    </Grid></>}\r\n                            </Grid>\r\n                            <Grid container p={3}>\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mb: 2 }}>Extra Costing : </Typography>\r\n\r\n                                <Grid container sx={{ gap: '20px 25px' }}>\r\n\r\n                                    <Grid item xs={5}>\r\n                                        <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n                                            <Box sx={{ marginTop: '22px' }}>\r\n                                                {<Checkbox checked={vipMedicalCheck} onChange={(e) => {\r\n                                                    console.log(!vipMedicalCheck);\r\n                                                    if (!vipMedicalCheck == true) {\r\n                                                        console.log(updateCandidate);\r\n\r\n\r\n                                                        setValue2('vipMedical', updateCandidate?.vip_medical_temp)\r\n                                                    }\r\n\r\n                                                    setVipMedicalCheck(!vipMedicalCheck)\r\n                                                }} />}\r\n                                            </Box>\r\n                                            <LabelCustomInput\r\n                                                label=\"VIP Medical Extra Charges : \"\r\n                                                StartLabel=\"AED\"\r\n                                                register={register2('vipMedical')}\r\n                                                postfix={user?.user_type == 'C' || user?.user_type == 'A' ? false : true}\r\n                                                disabled={user?.user_type == 'C' || user?.user_type == 'A' || !vipMedicalCheck}\r\n                                            />\r\n\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Candidate Name :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Candidate Name\"}\r\n                                    error={errors2?.candidateName?.message}\r\n                                    register={register2(\"candidateName\", {\r\n                                        required:\r\n                                            \"Please enter your candidate name.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Phone :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    type={'number'}\r\n                                    placeholder={\"Phone\"}\r\n                                    error={errors2?.Phone?.message}\r\n                                    register={register2(\"Phone\", {\r\n                                        required:\r\n                                            \"Please enter your Phone.\",\r\n                                        pattern: {\r\n                                            value: /^05[0-9]{8}$/,\r\n                                            message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                                        }\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Email :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Email \"}\r\n                                    error={errors2?.email?.message}\r\n                                    register={register2(\"email\", {\r\n                                        required:\r\n                                            \"Please enter your email.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Camp Location  :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Camp Location \"}\r\n                                    error={errors2?.campLocation?.message}\r\n                                    register={register2(\"campLocation\", {\r\n                                        required:\r\n                                            \"Please enter your camp location.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Employee ID :*\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Employee ID\"}\r\n                                    error={errors?.employeeid?.message}\r\n                                    register={register2(\"employeeid\", {\r\n                                        required:\r\n                                            \"Please enter your employee id.\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <SelectField\r\n                                    size={'small'}\r\n                                    label={'Nationality :*'}\r\n                                    options={countries}\r\n                                    selected={selectedCountry}\r\n                                    onSelect={(value) => setSelectedCountry(value)}\r\n                                    error={errors2?.nationality?.message}\r\n                                    register={register2(\"nationality\", {\r\n                                        required: 'Please select nationality'\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Passport Number :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Passport Number\"}\r\n                                    error={errors2?.passportNumber?.message}\r\n                                    register={register2(\"passportNumber\", {\r\n                                        required:\r\n                                            \"Please enter your passport number.\",\r\n                                        onChange: (e) => {\r\n                                            console.log('asdas');\r\n\r\n                                            Debounce2(() => verifyPassportNumber2());\r\n                                            // Delay the execution of verifyPassportNumber by 2 seconds\r\n\r\n                                        },\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                            <DatePicker\r\n                                    label={\"Passport Expiry :*\"}\r\n                                    value={date}\r\n                                    disablePast={true}\r\n                                    minDate={addDays(addMonths(new Date(), 6), 1)} \r\n                                    size={'small'}\r\n                                    error={errors2?.passportExp?.message}\r\n                                    {...register2(\"passportExp\", {\r\n                                        required: \"Please enter your passport expiry date.\",\r\n                                        validate: (value) => {\r\n                                            const minAllowedDate = addMonths(new Date(), 6);\r\n                                            console.log(value,'value');\r\n                                            console.log(moment(minAllowedDate),'value');\r\n                                            console.log(moment(value) > moment(minAllowedDate),'value');\r\n                                            \r\n                                            return moment(value) > moment(minAllowedDate) || \"Passport expiry date must be at least 6 months from today.\";\r\n                                        },\r\n                                    })}\r\n                                    onChange={(date) => {\r\n                                        handleDate(date);\r\n                                        setValue2(\"passportExp\", date, { shouldValidate: true });\r\n                                    }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"Visa Designation :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"Visa Designation\"}\r\n                                    error={errors2?.visaDesignation?.message}\r\n                                    register={register2(\"visaDesignation\", {\r\n                                        required:\r\n                                            \"Please enter your visa designation .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue }}>Salary : </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <LabelCustomInput label={'Basic : '} StartLabel={'AED'} placeholder={'Basic'} error={errors?.basic?.message} register={register2(\"basic\", { required: \"Enter basic  salary\", onChange: (e) => totalSalaryCalc('update') })} />\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <LabelCustomInput allowance={true} label={'Allowance : '} StartLabel={'AED'} placeholder={'Allowance'} error={errors?.allowance?.message} register={register2(\"allowance\", { required: \"Enter allowance \", onChange: (e) => totalSalaryCalc('update') })} />\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <LabelCustomInput disabled={true} label={'Total Salary : '} StartLabel={'AED'} placeholder={'Total'} register={register2(\"totalSalary\")} />\r\n                                {(customerPaymentType == 'payroll' && salaryError) ? <p style={{ color: 'red' }}>Salary Limit Exceeded </p> : ''}\r\n                            </Grid>\r\n                            {/* <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"End Consumer :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"End Consumer\"}\r\n                                    error={errors2?.endConsumer?.message}\r\n                                    register={register2(\"endConsumer\", {\r\n                                        required:\r\n                                            \"Please enter your end consumer  .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid> */}\r\n                            <Grid item xs={6}>\r\n                                <InputField\r\n                                    label={\"End Consumer Company :\"}\r\n                                    size={'small'}\r\n                                    fullWidth={true}\r\n                                    placeholder={\"End Consumer Company \"}\r\n                                    error={errors2?.endConsumerCompany?.message}\r\n                                    register={register2(\"endConsumerCompany\", {\r\n                                        required:\r\n                                            \"Please enter your end consumer company .\"\r\n\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} >\r\n                                <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue }}>Documents : </Typography>\r\n                            </Grid>\r\n                            {documents?.length > 0 && documents?.map((item, index) => (\r\n\r\n\r\n                                <Grid item xs={5} >\r\n                                    <Typography sx={{ fontSize: '18px', fontWeight: 'bold', color: Colors.gray }}>{item?.is_required ? item?.name : item?.name + '(If Any)'} :{item?.is_required ? '*' : ' '} </Typography>\r\n                                    <UploadFile\r\n                                        Memo={true}\r\n                                        accept={allowFilesType}\r\n                                        file={documents}\r\n                                        multiple={true}\r\n                                        updateResult={updateResult}\r\n                                        fileId={item?.key}\r\n                                        error={errors2[item?.key]?.message}\r\n                                        loader={loader}\r\n                                        disabled={isUploading}\r\n                                        register={register2(`${item?.key}`, {\r\n                                            required: item?.is_required ? documents.find((item2 => item2?.key == item?.key))?.path != '' ? false :\r\n                                                \"Please upload document.\" : false,\r\n                                            onChange: async (e) => {\r\n                                                setIsUploading(true); // Set uploading to true when the upload starts\r\n                                                const path = await handleUploadDocument(e, item?.key);\r\n                                                if (path) {\r\n                                                    handleDocArrayUpdate('path', path, item?.key);\r\n                                                    console.log(path);\r\n                                                }\r\n                                                setIsUploading(false); // Reset uploading status when done\r\n                                            }\r\n                                        })}\r\n                                    />\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n                            ))}\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button sx={{ fontFamily: 'Public Sans' }} onClick={() => {setConfirmationDialog(true); setVerifyPassport2(false)}}>Cancel</Button>\r\n                    <Button sx={{ fontFamily: 'Public Sans' }} disabled={verifyPassport2} type='submit'>Update</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Box component={'form'} onSubmit={handleSubmit1(CreateVisa)}>\r\n\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n                    <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >ADD NEW</Typography>\r\n                    <Box sx={{ display: 'flex', gap: '10px' }}>\r\n                        <PrimaryButton\r\n                           bgcolor={'#bd9b4a'}\r\n                            title=\"Save\"\r\n                            onClick={() => setConfirmationDialog3(true)}\r\n                            disabled={candidates.length > 0 ? false : true}\r\n                        // onClick={ ()=> navigate(`/update-customer/${id}`)}\r\n\r\n\r\n                        />\r\n\r\n                    </Box>\r\n                </Box>\r\n                <Grid container mt={5}>\r\n                    <Grid item xs={5} >\r\n                        <SelectField\r\n                            size={'small'}\r\n                            label={'Select Customer :'}\r\n                            disabled={user?.user_type == 'C' ? true : false}\r\n                            options={customerQueue}\r\n                            selected={selectedCustomer}\r\n                            onSelect={(value) => {\r\n                                console.log(value,'asdasdasasd');\r\n                                \r\n                                setSelectedCustomer(value)\r\n                                getCustomerDetail(value?.id)\r\n                                setValue1('customer', value)\r\n                                setCandidates([])\r\n\r\n                            }}\r\n                            error={errors1?.customer?.message}\r\n                            register={register1(\"customer\", {\r\n                                required: 'Please select customer account.',\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                <Grid container mt={2} xs={10} justifyContent={'flex-end'}>\r\n                    <PrimaryButton\r\n                       bgcolor={'#bd9b4a'}\r\n                        title=\"Add Candidate\"\r\n                        disabled={(selectedCustomer && customerDetail) ? false : true}\r\n                        onClick={() => {\r\n                            const today = moment();\r\n                            const tenthOfMonth = moment().startOf('month').add(9, 'days');\r\n                            let valid = false\r\n\r\n                            const lastMonth = moment().subtract(1, 'months');\r\n                            console.log(customerDetail, 'customerDetailcustomerDetail');\r\n                            console.log(today.isAfter(tenthOfMonth));\r\n                            console.log(moment(customerDetail.created_at).isSame(moment(), 'month'));\r\n\r\n                            const total = candidates.reduce((total, item) => total + item.salary_total, 0);\r\n\r\n                            let multiplier = payrollPercent / 100\r\n                            let multiplied = total * multiplier\r\n                            console.log(customerBalance, 'customerBalance');\r\n                            console.log(candidateSalary, 'customerBalance');\r\n\r\n                            if (customerBalance < candidateSalary && !byPass) {\r\n                                showErrorToast('Deposit Balance Is Low')\r\n                            }\r\n                            else {\r\n\r\n\r\n\r\n\r\n                                if (wpsValid) {\r\n                                    showErrorToast('Create WPS First')\r\n                                }\r\n                                else {\r\n                                    handleClickOpen('paper')\r\n                                    console.log(\"The 10th date of the current month has not passed yet.\");\r\n                                }\r\n                            }\r\n\r\n\r\n                        }}\r\n\r\n\r\n                    />\r\n                </Grid>\r\n\r\n\r\n                {candidates?.length > 0 && <Typography sx={{ fontSize: '20px', fontWeight: 'bold', color: Colors.textColorDarkBlue, mt: 5 }}>Candidates Details: </Typography>}\r\n                <Grid container mt={3} gap={2}>\r\n\r\n\r\n\r\n                    {candidates?.length > 0 && candidates?.map((item, index) => (\r\n\r\n                        <Grid item xs={5} >\r\n                            <Box\r\n                                component={'div'}\r\n\r\n                                sx={{\r\n                                    position: 'relative',\r\n                                    border: `2px solid ${Colors.primary}`,\r\n                                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                                    padding: '16px',\r\n                                    borderRadius: '8px',\r\n                                    maxWidth: '400px',\r\n                                    margin: '0 auto',\r\n                                    backgroundColor: '#fff',\r\n                                    fontFamily: 'Public Sans'\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    sx={{\r\n                                        position: 'absolute',\r\n                                        top: '8px',\r\n                                        right: '35px'\r\n                                    }}\r\n                                    aria-label=\"delete\"\r\n                                    onClick={() => {\r\n\r\n                                        handleUpdateCandidate(item, index)\r\n\r\n                                    }}\r\n                                >\r\n                                    <MoreHorizIcon />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    sx={{\r\n                                        position: 'absolute',\r\n                                        top: '8px',\r\n                                        right: '8px'\r\n                                    }}\r\n                                    aria-label=\"delete\"\r\n                                    onClick={() => {\r\n\r\n                                        handleDelete(index)\r\n\r\n                                    }}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                    <strong>Name:</strong>&nbsp; {item?.name?.length > 20 ? item?.name.slice(0, 20) + '...' : item?.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                    <strong>Email:</strong>&nbsp;{item?.email}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    <strong>Number:</strong>&nbsp;{item?.phone}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    <strong>Visa Type:</strong>&nbsp;{item?.visa_type.toLowerCase() == 'out' ? 'Out' : 'In'}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    <strong>Visa Tenure:</strong>&nbsp;{item?.visa_tenure.includes('1') ? '1 Year' : '2 Year'}\r\n                                </Typography>\r\n                            </Box>\r\n                            {/* <Chip\r\n                                label={item?.name}\r\n                                onClick={() => {\r\n                                    handleUpdateCandidate(item, index)\r\n\r\n                                }}\r\n                                onDelete={() => handleDelete(index)}\r\n                                deleteIcon={<DeleteIcon />}\r\n                                variant=\"outlined\"\r\n                            /> */}\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n                    ))}\r\n                </Grid>\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default AddVisa\r\n"],"names":["AddVisa","_errors$candidateName","_errors$Phone","_errors$email","_errors$campLocation","_errors$employeeid","_errors$nationality","_errors$passportNumbe","_errors$passportExp","_errors$visaDesignati","_errors$basic","_errors$allowance","_errors$endConsumerCo","_errors2$candidateNam","_errors2$Phone","_errors2$email","_errors2$campLocation","_errors$employeeid2","_errors2$nationality","_errors2$passportNumb","_errors2$passportExp","_errors2$visaDesignat","_errors$basic2","_errors$allowance2","_errors2$endConsumerC","_errors1$customer","navigate","useNavigate","register","handleSubmit","getValues","setValue","control","formState","errors","reset","useForm","submit","setSubmit","useState","handleBlockedNavigation","useCallbackPrompt","register1","handleSubmit1","setValue1","errors1","register2","handleSubmit2","setValue2","getValues2","errors2","customerQueue","setCustomerQueue","selectedCustomer","setSelectedCustomer","open","setOpen","React","open1","setOpen1","scroll","setScroll","visaType","setVisaType","visaTenture","setVisaTenture","customerDetail","setCustomerDetail","candidateIndex","setCandidateIndex","eligibility","setEligibility","salaryError","setSalaryError","depositError","setDepositError","countries","setCountries","selectedCountry","setSelectedCountry","vipMedicalCheck","setVipMedicalCheck","totalCount","setTotalCount","pageLimit","setPageLimit","currentPage","setCurrentPage","allowFilesType","progress","setProgress","uploadedSize","setUploadedSize","updateCandidate","setUpdateCandidate","customerPaymentType","setCustomerPaymentType","candidateSalary","setCandidateSalary","payrollPercent","setPayrollPercent","customerDeposit","setCustomerDeposit","totalVisaCharges","setTotalVisaCharges","totalDepositCharges","setTotalDepositCharges","candidates","setCandidates","customerBalance","setCustomerBalance","user","userLogout","useAuth","confirmationDialog","setConfirmationDialog","confirmationDialog2","setConfirmationDialog2","confirmationDialog3","setConfirmationDialog3","wpsList","setWpsList","wpsValid","setWpsValid","isUploading","setIsUploading","loader","setLoader","depositScenario","setDepositScenario","verifyPassport","setVerifyPassport","verifyPassport2","setVerifyPassport2","charges","setCharges","byPass","setByPass","filters","setFilters","date","setDate","fieldsDisabled","setFieldsDisabled","monthlyVisaServiceCharges","vipMedical","extraTyping","documents","setDocuments","name","key","path","expiry_date","is_required","handleDate","newDate","Date","error","ErrorToaster","handleClose","updateResult","newResult","console","log","updatedDocuments","map","doc","handleUploadDocument","async","e","preventDefault","target","files","length","inputElement","i","file","arr","type","split","size","getFileSize","isUpload","maxSize","showErrorToast","uniqueFileName","toISOString","newFile","File","uploadedPath","handleUpload","value","CreateVisa","total","reduce","item","visa_charges","total2","visa_cost","totalsal","salary_total","parseFloat","obj","customer_id","id","customer_name","due_date","due_date_policy","agent_id","force_create","deposit_balance","total_deposit_charges","total_visa_charges","total_visa_cost","request_date","promise","VisaServices","showPromiseToast","response","responseCode","docs","formData","FormData","append","data","instance","post","routes","uploadDocuments","onUploadProgress","progressEvent","uploadedBytes","loaded","percentCompleted","Math","round","_data$data","_data$data2","nations","descriptionElementRef","current","descriptionElement","focus","totalSalaryCalc","basic","allowance","toLowerCase","handleTotalVisaCharges","fields","includes","acc","getCustomerDetail","params","_data$details","_data$details2","_data$details3","_data$details4","_data$details5","_data$details6","_data$details7","_data$details12","CustomerServices","_data$details8","_data$details9","_data$details10","_data$details11","details","security_deposit_scenario","bypass_requirements","getWPSList","visa_eligibility_remaining","deposit_per_visa","payroll_percentage","payroll_eligibility","one_year_inside","one_year_outside","one_year_renewal","two_year_inside","two_year_outside","two_year_renewal","monthly_visa_service","medical_extra","page","limit","filter","Page","Limit","Filter","user_type","checkWPS","wpsRequired","handleDocArrayUpdate","field","moment","format","useEffect","getCustomerQueue","_data$rows","currentUser","rows","find","_data$countries","SystemServices","getCountries","charges_type","getRates","getData","totalSalary","sum","candidate","multiplier","_jsxs","Box","sx","p","children","_jsx","ConfirmationDialog2","warning","onClose","action","ConfirmationDialog","message","Dialog","component","onSubmit","sum2","Number","prevCandidates","lastElement","serial_id","candidateName","phone","Phone","email","visa_type","visa_tenure","employee_id","employeeid","deposit_consumed","security_deposit_visa","inside_rate","outside_rate","renewal_rate","vip_medical_temp","vip_medical_extra","camp_location","campLocation","nationality","nationality_id","passport_number","passportNumber","toUpperCase","passport_expiry","passportExp","visa_designation","visaDesignation","salary_basic","salary_allowance","toFixed","end_consumer","endConsumer","end_consumer_company","endConsumerCompany","maxWidth","fullWidth","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","Grid","container","spacing","mt","pl","xs","sm","Typography","fontSize","color","Colors","black","mb","fontWeight","FormControl","RadioGroup","row","defaultValue","onChange","setTimeout","FormControlLabel","Radio","label","textColorDarkBlue","gap","LabelCustomInput","StartLabel","disabled","required","postfix","_Fragment","display","alignItems","marginTop","Checkbox","checked","InputField","placeholder","pattern","SelectField","options","selected","onSelect","Debounce2","getCandidateDetail","approval_status","admin_rejected","verifyPassportNumber","DatePicker","disablePast","minDate","addDays","addMonths","validate","minAllowedDate","shouldValidate","style","index","_errors$item$key","_documents$find","gray","UploadFile","Memo","accept","multiple","fileId","item2","DialogActions","Button","fontFamily","onClick","updatedCandidates","verifyPassportNumber2","_errors2$item$key","_documents$find2","justifyContent","PrimaryButton","bgcolor","title","customer","today","tenthOfMonth","startOf","add","subtract","isAfter","created_at","isSame","scrollType","_item$name","position","border","primary","boxShadow","padding","borderRadius","margin","backgroundColor","IconButton","top","right","handleUpdateCandidate","MoreHorizIcon","deletedCandidate","_","handleDelete","DeleteIcon","variant","gutterBottom","slice"],"sourceRoot":""}