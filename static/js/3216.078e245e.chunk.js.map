{"version":3,"file":"static/js/3216.078e245e.chunk.js","mappings":"idAuoCA,QArmCA,WAA8B,IAADA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACbC,EAAAA,EAAAA,KAAd,MACM,KAAEC,IAASC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAS,OAClDK,EAAqBC,IAA0BN,EAAAA,EAAAA,UAAS,OACxDO,EAAOC,KAAYR,EAAAA,EAAAA,UAAS,IAC5BS,GAAUC,KAAeV,EAAAA,EAAAA,UAAS,IAClCW,GAAWC,KAAgBZ,EAAAA,EAAAA,WAAS,IACpCa,GAAMC,KAAWd,EAAAA,EAAAA,UAAS,KAC1Be,GAAgBC,KAAqBhB,EAAAA,EAAAA,WAAS,IAC9CiB,GAAaC,KAAkBlB,EAAAA,EAAAA,UAAS,IAC/CmB,QAAQC,IAAIP,GAAM,QAClB,MAAOQ,GAAOC,KAAYtB,EAAAA,EAAAA,UAAS,CACjC,CACEuB,SAAU,GACVC,gBAAiB,kBACjBC,YAAa,KACbC,KAAM,GACNC,cAAe,GACfpB,MAAO,SAgBL,SACJqB,GAAQ,aACRC,GAAY,UACZC,GAAS,SACTC,GAAQ,MACRC,GAAK,MACLC,GACAC,WAAW,OAAEC,MACXC,EAAAA,EAAAA,OAEFR,SAAUS,GACVR,aAAcS,GACdP,SAAUQ,GACVT,UAAWU,GAAU,QACrBC,GACAT,MAAOU,GACPR,WAAaC,OAAQQ,MACnBP,EAAAA,EAAAA,IAAQ,CACVQ,cAAe,CACbC,OAAQ,GACRC,QAAS,KACTC,KAAM,KACNC,KAAM,QAOJC,GAAUjB,GAAM,WAAY,GAC5BkB,GAAYlB,GAAM,aAAc,GAChCmB,GAAcnB,GAAM,eAAgB,GACpCoB,GAAMpB,GAAM,MAAO,GACnBqB,GAAgBX,GAAO,SAAU,GACjBA,GAAO,YAE7BY,EAAAA,EAAAA,YAAU,KACR,MAEMC,IADHC,OAAOC,WAAWR,KAAY,IAAMO,OAAOC,WAAWP,KAAc,IAAMM,OAAOC,WAAWN,KAAgB,KAC/EK,OAAOC,WAAWL,KAAQ,GAC1DrB,GAAS,QAASwB,EAAW,GAC5B,CAACN,GAASC,GAAWC,GAAaC,MAGrCE,EAAAA,EAAAA,YAAU,KACR,GAAID,IAAiBX,GAAO,SAAU,CACpC,MAAMG,EAASW,OAAOC,WAAWJ,IAC3B9C,EAAQiD,OAAOC,WAAWf,GAAO,UAEnCG,EAAStC,EACXW,GAAe,8BACN2B,GAAU,EACnB3B,GAAe,kCAEfA,GAAe,IAEfqB,GAAU,WAAYhC,EAAQsC,GAAQa,QAAQ,IAElD,IACC,CAACL,GAAeX,GAAO,WAE1B,MAaOiB,GAAYC,KAAiB5D,EAAAA,EAAAA,UAAS,KACtC6D,GAAYC,IAAiBC,EAAAA,SAAe,IAG5CC,GAAUC,KAAejE,EAAAA,EAAAA,UAAS,IAClCkE,GAAcC,KAAmBnE,EAAAA,EAAAA,UAAS,IAC1CoE,GAAYC,KAAiBrE,EAAAA,EAAAA,UAAS,KAEtCsE,GAAaC,KAAkBvE,EAAAA,EAAAA,UAAS,CAC7CwE,GAAI,UACJC,KAAM,aAEDC,GAAUC,KAAe3E,EAAAA,EAAAA,aACzB4E,GAAYC,KAAiB7E,EAAAA,EAAAA,WAAS,IACtC8E,GAAcC,KAAmB/E,EAAAA,EAAAA,WAAS,IAC1CgF,GAASC,KAAcjF,EAAAA,EAAAA,WAAS,IAChCkF,GAAaC,KAAkBnF,EAAAA,EAAAA,WAAS,IACxCoF,GAAaC,KAAkBrF,EAAAA,EAAAA,WAAS,IACxCsF,GAAcC,KAAmBvF,EAAAA,EAAAA,UAAS,OAC1CwF,GAAQC,KAAazF,EAAAA,EAAAA,WAAS,GACrCmB,QAAQC,IAAIkE,GAAc,UAE1B,MAAOI,GAAQC,KAAa3F,EAAAA,EAAAA,UAAS,OAC9B4F,GAAQC,KAAa7F,EAAAA,EAAAA,UAAS,OAC9B8F,GAAgBC,KAAqB/F,EAAAA,EAAAA,WAAS,IAG9CgG,GAAcC,KAAmBjG,EAAAA,EAAAA,aACjCkG,GAAeC,KAAoBnG,EAAAA,EAAAA,aACnCoG,GAAcC,KAAmBrG,EAAAA,EAAAA,UAAS,OAC1CsG,GAAMC,KAAWvG,EAAAA,EAAAA,UAAS,OAC1BwG,GAAaC,KAAkBzG,EAAAA,EAAAA,UAAS,OACxC0G,GAAUC,KAAe3G,EAAAA,EAAAA,UAAS,OAElC4G,GAASC,MADKC,EAAAA,EAAAA,QAAO,OACE9G,EAAAA,EAAAA,WAAS,KAChC+G,GAAUC,KAAehH,EAAAA,EAAAA,UAAS,KAClCiH,GAAcC,KAAmBlH,EAAAA,EAAAA,UAAS,OAC1CmH,GAAkBC,KAAuBpH,EAAAA,EAAAA,UAAS,OAClDqH,GAAaC,KAAkBtH,EAAAA,EAAAA,UAAS,OACxCuH,GAAmBC,KAAwBxH,EAAAA,EAAAA,UAAS,OACpDyH,GAAiBC,KAAsB1H,EAAAA,EAAAA,UAAS,OAChD2H,GAAUC,KAAe5H,EAAAA,EAAAA,UAAS,OAClC6H,GAAMC,KAAW9H,EAAAA,EAAAA,UAAS,OAC1B+H,GAAOC,KAAYhI,EAAAA,EAAAA,UAAS,KAC5BiI,GAAKC,KAAUlI,EAAAA,EAAAA,UAAS,OACxBmI,GAAUC,KAAepI,EAAAA,EAAAA,UAAS,OAClCqI,GAAYC,KAAiBtI,EAAAA,EAAAA,UAAS,OACtCuI,GAAmBC,KAAyBxI,EAAAA,EAAAA,UAAS,OACrDyI,GAAaC,KAAkB1I,EAAAA,EAAAA,UAAS,OACxC2I,GAAYC,KAAiB5I,EAAAA,EAAAA,UAAS,OACtC6I,GAAUC,KAAe9I,EAAAA,EAAAA,UAAS,OAClC+I,GAAaC,KAAkBhJ,EAAAA,EAAAA,UAAS,OACxCiJ,GAAkBC,KAAuBlJ,EAAAA,EAAAA,UAAS,OAClDmJ,GAAQC,KAAapJ,EAAAA,EAAAA,UAAS,OAC9BqJ,GAAOC,KAAYtJ,EAAAA,EAAAA,UAAS,KAC5BuJ,GAAWC,KAAgBxJ,EAAAA,EAAAA,WAAS,IACpCyJ,GAAcC,KAAmB1J,EAAAA,EAAAA,UAAS,OAC1C2J,GAAOC,KAAY5J,EAAAA,EAAAA,UAAS,KAC5B6J,GAAcC,KAAmB9J,EAAAA,EAAAA,UAAS,OAC1C+J,GAAoBC,KAAyBhK,EAAAA,EAAAA,UAAS,MAM7DmB,QAAQC,IAAI,SAAUsB,GAAO,SAE7B,MAqOMuH,GAAoBA,CAACC,EAAOC,EAAOC,KACvC,MAAMC,EAAc,IAAIxJ,IACxBwJ,EAAYH,GAAS,IAChBG,EAAYH,GACf,CAACC,GAAQC,GAEXtJ,GAAQuJ,EAAY,EAgItB,OA9HAlJ,QAAQC,IAAIP,KAkHZyC,EAAAA,EAAAA,YAAU,KAxSOgH,WACf7E,IAAU,GAEV,IACE,MAAM8E,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeC,EAAAA,EAAiBC,SAASL,GACjDjB,GAAa,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMrB,MACjB,CAAE,MAAOwB,IACPC,EAAAA,EAAAA,IAAeD,EACjB,CAAC,QACCpF,IAAU,EACZ,GA0RAmF,GAvReN,WACf7E,IAAU,GAEV,IAAK,IAADsF,EACF,MAAMR,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeC,EAAAA,EAAiBK,SAAST,GACjDX,GACM,OAAJc,QAAI,IAAJA,GAAW,QAAPK,EAAJL,EAAMf,aAAK,IAAAoB,OAAP,EAAJA,EAAaE,KAAKjI,IAAI,IACjBA,EACHyB,KAAMzB,EAAKkI,iBAGjB,CAAE,MAAOL,IACPC,EAAAA,EAAAA,IAAeD,EACjB,CAAC,QACCpF,IAAU,EACZ,GAoQAuF,GA/IkBV,WAElB,IAAK,IAADa,EAAAC,EACF,MAAMb,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeW,EAAAA,EAAgBC,YAAYf,GACnDpJ,QAAQC,IAAQ,OAAJsJ,QAAI,IAAJA,GAAc,QAAVS,EAAJT,EAAM3D,gBAAQ,IAAAoE,OAAV,EAAJA,EAAgBtK,MAE5BmG,GAAgB,OAAJ0D,QAAI,IAAJA,GAAc,QAAVU,EAAJV,EAAM3D,gBAAQ,IAAAqE,OAAV,EAAJA,EAAgBvK,KAC9B,CAAE,MAAOgK,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EAiIFS,GAnHahB,WAEb,IAAK,IAADkB,EACF,MAAMjB,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeW,EAAAA,EAAgBI,OAAOlB,GAC9CpJ,QAAQC,IAAQ,OAAJsJ,QAAI,IAAJA,GAAc,QAAVc,EAAJd,EAAM3D,gBAAQ,IAAAyE,OAAV,EAAJA,EAAgB3K,MAE5BmH,GAAa,OAAJ0C,QAAI,IAAJA,OAAI,EAAJA,EAAMzC,IACjB,CAAE,MAAO4C,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EAqGFY,GAlGoBnB,WAEpB,IACE,MAAMC,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeC,EAAAA,EAAiBe,gBAAgBnB,GAExDjC,GAAkB,OAAJoC,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,WACtB,CAAE,MAAOwC,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EAqFFc,GA1LqBrB,WAErB,IACE,MAAMC,EAAS,CACbC,KAAM,EACNC,MAAO,MAGH,KAAEC,SAAeC,EAAAA,EAAiBiB,eAAerB,GAEvDzB,GAAgB,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM7J,KACpB,CAAE,MAAOgK,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EA6KFe,GACArF,GAAQ,IAAIsF,MACZ3C,GAAoB,CAAE1E,GAAI,SAAUC,KAAM,qBAC1ClC,GAAU,WAAY,CAAEiC,GAAI,SAAUC,KAAM,oBAAqB,GAChE,KAGDqH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,WAClBH,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACG,EAAG,EAAGF,GAAI,CAAEG,gBAAiB,QAASC,aAAc,QAASP,UAE9DC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACM,UAAW,OAAQC,SAAUnK,IAjXxBgI,UAClBnJ,QAAQC,IAAIsL,EAAU,WACtB1L,IAAkB,GAClB,IAAK,IAAD2L,EAAAC,EAAAC,EAAAC,EAAAC,EACF,MAAMC,EAAM,CACVxI,GAAIhC,GAAW,iBACfyK,aAAsB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUnM,MACxBc,MAAOR,GAEPqM,aAAqB,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAU7J,UAAkB,OAAR6J,QAAQ,IAARA,OAAQ,EAARA,EAAUnM,OAC3C4M,gBAAwB,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAU7J,SAAiB,OAAR6J,QAAQ,IAARA,OAAQ,EAARA,EAAUnM,OAAQ,iBAAmB,OACxE6M,aAA0B,OAAZ3D,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,GAC5B6I,WACsB,SAAR,OAAZ5D,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IACV,OACoB,SAAR,OAAZiF,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IACA,OAAZc,SAAY,IAAZA,QAAY,EAAZA,GAAc+H,WACM,SAAR,OAAZ5D,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IACA,OAAZqF,SAAY,IAAZA,QAAY,EAAZA,GAAcwD,WACM,iBAAR,OAAZ5D,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IACZ,OACA,KACZ8I,OAA4B,SAAR,OAAZ7D,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IAA2B,OAAZc,SAAY,IAAZA,QAAY,EAAZA,GAAcd,GAAK,KACxD+I,QAAiB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUa,QACnBC,UAAmB,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAUc,UAErBC,QAAe,OAANtE,SAAM,IAANA,IAA0B,QAApBwD,EAANxD,GAAQuE,0BAAkB,IAAAf,OAApB,EAANA,EAA4BgB,QAAO,CAACC,EAAKC,IAASD,EAAMpK,QAAW,OAAJqK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAAc,IAAI,GAChGC,aAAoB,OAAN5E,SAAM,IAANA,IAA0B,QAApByD,EAANzD,GAAQuE,0BAAkB,IAAAd,OAApB,EAANA,EAA4Be,QAAO,CAACC,EAAKC,IAASD,EAAMpK,QAAW,OAAJqK,QAAI,IAAJA,OAAI,EAAJA,EAAMG,WAAY,IAAI,GACnGC,aAAoB,OAAN9E,SAAM,IAANA,IAA0B,QAApB0D,EAAN1D,GAAQuE,0BAAkB,IAAAb,OAApB,EAANA,EAA4Bc,QAAO,CAACC,EAAKC,IAASD,EAAMpK,QAAW,OAAJqK,QAAI,IAAJA,OAAI,EAAJA,EAAMK,cAAe,IAAI,GAEtGC,UAA+B,SAAR,OAAZ1E,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IAA2B,OAAZc,SAAY,IAAZA,QAAY,EAAZA,GAAcb,KAAO,GAC7D2J,QAA6B,SAAR,OAAZ3E,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,IAA2B,OAAZc,SAAY,IAAZA,QAAY,EAAZA,GAAcd,GAAK,GACzD6J,YAAmB,OAANlF,SAAM,IAANA,QAAM,EAANA,GAAQkF,YACrBC,eAAsB,OAANnF,SAAM,IAANA,QAAM,EAANA,GAAQmF,eACxBC,YAAmB,OAANpF,SAAM,IAANA,IAA6B,QAAvB2D,EAAN3D,GAAQuE,mBAAmB,UAAE,IAAAZ,GAAS,QAATC,EAA7BD,EAA+B0B,eAAO,IAAAzB,OAAhC,EAANA,EAAwCwB,aAIvD,GADApN,QAAQC,IAAI4L,EAAK,UACM,IAAb,OAAN7D,SAAM,IAANA,QAAM,EAANA,GAAQsF,UACVlD,EAAAA,EAAAA,IAAa,oBACR,CACL,MAAMmD,EAAU/D,EAAAA,EAAiBgE,WAAW3B,GACtC4B,QAAiBF,GACvBG,EAAAA,EAAAA,IAAiBH,EAAS,YAAa,qBAAsB,wBAC9B,OAAnB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUE,eACZlP,EAAS,iBAEb,CACF,CAAE,MAAOiL,IACPU,EAAAA,EAAAA,IAAaV,EACf,CAAC,QACC7J,IAAkB,EACpB,KA6TqEgL,SAAA,EAC3DC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACF4C,QAAS,OACTC,eAAgB,gBAChBC,IAAK,OACLC,EAAG,EACHC,WAAY,YACZnD,UAEFC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACjD,GAAI,CAAEkD,SAAU,OAAQC,WAAY,QAAStD,SAAC,mBAG5DC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAE+C,EAAG,GAAIlD,UAChBF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,WAAS,EAACrD,GAAI,CAAE8C,IAAK,YAAajD,SAAA,EACtCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAAC4B,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,WAAS,EAACP,IAAK,EAAGE,WAAY,SAASnD,SAAA,EAC3CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAAC4B,GAAI,EAAEzD,UACfC,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACTC,MAAO,kBACPvF,MAAO9D,GACPsJ,KAAM,QACNC,SAAU/J,GACV+E,MAAc,OAAPlI,SAAO,IAAPA,IAAa,QAANhE,EAAPgE,GAAS2D,YAAI,IAAA3H,OAAN,EAAPA,EAAemR,QACtBlO,SAAUS,GAAU,QACpB0N,SAAWzJ,IACT/D,GAAU,OAAQ+D,GAClBC,GAAQ,IAAIsF,KAAKvF,GAAM,OAI7B2F,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAIS,GAAI,EAAElE,UACtCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,iBACNC,KAAK,QACLC,SAAU/J,GACVsK,YAAY,iBACZxO,SAAUS,GAAU,iBACpBgO,WAAY,CACVC,cACErE,EAAAA,EAAAA,KAACsE,EAAAA,EAAU,CAACC,QAASA,IAzTtBlG,WACzBvE,IAAkB,GAClB,IACE,IAAIwE,EAAS,CACXkG,aAAcjO,GAAW,UAEvBkO,IACFnG,EAAS,CACPoG,eAAgBnO,GAAW,mBAG/B,MAAM,KAAEkI,SAAeC,EAAAA,EAAiBiG,iBAAiBrG,GAErC,IAADsG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADnBnR,QAAQC,IAAQ,OAAJsJ,QAAI,IAAJA,OAAI,EAAJA,EAAM6H,QAAS,UACnB,OAAJ7H,QAAI,IAAJA,GAAAA,EAAM6H,UACRzR,GAAY,OAAJ4J,QAAI,IAAJA,GAAa,QAATmG,EAAJnG,EAAM6H,eAAO,IAAA1B,OAAT,EAAJA,EAAenD,oBACvBtE,GAAc,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAM6H,SAEhBhQ,GAAU,OAAQ,GAClBA,GAAU,WAAgB,OAAJmI,QAAI,IAAJA,GAAa,QAAToG,EAAJpG,EAAM6H,eAAO,IAAAzB,OAAT,EAAJA,EAAe0B,eACrCjQ,GAAU,eAAgBkQ,MAASC,UACnCnM,GAAQ,IAAIsF,KAAS,OAAJnB,QAAI,IAAJA,GAAa,QAATqG,EAAJrG,EAAM6H,eAAO,IAAAxB,OAAT,EAAJA,EAAe4B,eAChCpQ,GAAU,SAAc,OAAJmI,QAAI,IAAJA,GAAa,QAATsG,EAAJtG,EAAM6H,eAAO,IAAAvB,OAAT,EAAJA,EAAe4B,iBACnCrQ,GAAU,MAAW,OAAJmI,QAAI,IAAJA,GAAa,QAATuG,EAAJvG,EAAM6H,eAAO,IAAAtB,OAAT,EAAJA,EAAe4B,KAChCtQ,GAAU,mBAAwB,OAAJmI,QAAI,IAAJA,GAAa,QAATwG,EAAJxG,EAAM6H,eAAO,IAAArB,OAAT,EAAJA,EAAesB,eAC7CjQ,GAAU,QAAa,OAAJmI,QAAI,IAAJA,GAAa,QAATyG,EAAJzG,EAAM6H,eAAO,IAAApB,OAAT,EAAJA,EAAe2B,gBAClCvQ,GAAU,UAAe,OAAJmI,QAAI,IAAJA,GAAa,QAAT0G,EAAJ1G,EAAM6H,eAAO,IAAAnB,OAAT,EAAJA,EAAe2B,kBACpCxQ,GAAU,MAAW,OAAJmI,QAAI,IAAJA,GAAa,QAAT2G,EAAJ3G,EAAM6H,eAAO,IAAAlB,OAAT,EAAJA,EAAe2B,KAChChJ,GAAsB,CAAExF,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT4G,EAAJ5G,EAAM6H,eAAO,IAAAjB,OAAT,EAAJA,EAAe2B,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT6G,EAAJ7G,EAAM6H,eAAO,IAAAhB,OAAT,EAAJA,EAAe0B,cAC7E1Q,GAAU,cAAe,CAAEiC,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT8G,EAAJ9G,EAAM6H,eAAO,IAAAf,OAAT,EAAJA,EAAeyB,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT+G,EAAJ/G,EAAM6H,eAAO,IAAAd,OAAT,EAAJA,EAAewB,cAChF1Q,GAAU,SAAc,OAAJmI,QAAI,IAAJA,GAAa,QAATgH,EAAJhH,EAAM6H,eAAO,IAAAb,OAAT,EAAJA,EAAewB,SACnCxS,GAAgB,OAAJgK,QAAI,IAAJA,GAAa,QAATiH,EAAJjH,EAAM6H,eAAO,IAAAZ,OAAT,EAAJA,EAAe1E,cAE3B1K,GACE,SAEEiB,OAAOC,WAAe,OAAJiH,QAAI,IAAJA,GAAa,QAATkH,EAAJlH,EAAM6H,eAAO,IAAAX,OAAT,EAAJA,EAAe3E,cASjC,KARI,OAAJvC,QAAI,IAAJA,GAAa,QAATmH,EAAJnH,EAAM6H,eAAO,IAAAV,GAAoB,QAApBC,EAAbD,EAAenE,0BAAkB,IAAAoE,OAA7B,EAAJA,EAAmCnE,QAAO,CAACpN,EAAOsN,KAAU,IAADsF,EAAAC,EACzD,MAAMC,EAAM7P,OAAOC,WAA2B,QAAjB0P,EAAK,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAAqF,EAAAA,EAAI,GAC5C/P,EAAMI,OAAOC,WAAyB,QAAf2P,EAAK,OAAJvF,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAAF,EAAAA,EAAI,GAIhD,OAHAjS,QAAQC,IAAIiS,GACZlS,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIb,GACLA,EAAQ8S,EAAMjQ,CAAG,GACvB,KAEHM,QAAQ,IAEZnB,GACE,WAEEiB,OAAOC,WAAe,OAAJiH,QAAI,IAAJA,GAAa,QAATqH,EAAJrH,EAAM6H,eAAO,IAAAR,OAAT,EAAJA,EAAe9E,cAUjC,KATI,OAAJvC,QAAI,IAAJA,GAAa,QAATsH,EAAJtH,EAAM6H,eAAO,IAAAP,GAAoB,QAApBC,EAAbD,EAAetE,0BAAkB,IAAAuE,OAA7B,EAAJA,EAAmCtE,QAAO,CAACpN,EAAOsN,KAAU,IAAD0F,EAAAC,EACzD,MAAMH,EAAM7P,OAAOC,WAA2B,QAAjB8P,EAAK,OAAJ1F,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAAyF,EAAAA,EAAI,GAC5CnQ,EAAMI,OAAOC,WAAyB,QAAf+P,EAAK,OAAJ3F,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAAE,EAAAA,EAAI,GAIhD,OAHArS,QAAQC,IAAIiS,GACZlS,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIb,GACLA,EAAQ8S,EAAMjQ,CAAG,GAEvB,KAEHM,QAAQ,IAEZsG,GAAsB,CAAExF,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAATwH,EAAJxH,EAAM6H,eAAO,IAAAL,OAAT,EAAJA,EAAee,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAATyH,EAAJzH,EAAM6H,eAAO,IAAAJ,OAAT,EAAJA,EAAec,cAC7E1Q,GAAU,cAAe,CAAEiC,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT0H,EAAJ1H,EAAM6H,eAAO,IAAAH,OAAT,EAAJA,EAAea,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT2H,EAAJ3H,EAAM6H,eAAO,IAAAF,OAAT,EAAJA,EAAeY,cAChFjM,GAAgB,OAAJ0D,QAAI,IAAJA,GAAc,QAAV4H,EAAJ5H,EAAM3D,gBAAQ,IAAAuL,OAAV,EAAJA,EAAgBzR,MAEhC,CAAE,MAAOgK,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EAmPmD4I,EAAmB,GAAMzH,UAClDC,EAAAA,EAAAA,KAACyH,EAAAA,EAAU,CAACvH,GAAI,CAAEwH,MAAO,qBAMnC1H,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,QACNC,KAAK,QACLC,SAAU/J,GACVsK,YAAY,cACZxO,SAAUS,GAAU,SACpBgO,WAAY,CACVC,cACErE,EAAAA,EAAAA,KAACsE,EAAAA,EAAU,CACTC,QAASA,KAtJdlG,WACvBvE,IAAkB,GAClB,IACE,MAAMwE,EAAS,CACbkG,aAAcjO,GAAW,SACzBmQ,aAAcrM,KAGV,KAAEoE,SAAeC,EAAAA,EAAiBiG,iBAAiBrG,GAErC,IAADqJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADnBnU,QAAQC,IAAIsJ,GACJ,OAAJA,QAAI,IAAJA,GAAAA,EAAM6H,SACR/I,IAAa,GAEb1I,GAAY,OAAJ4J,QAAI,IAAJA,GAAa,QAATkJ,EAAJlJ,EAAM6H,eAAO,IAAAqB,OAAT,EAAJA,EAAelG,oBACvBtE,GAAc,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAM6H,SAEhBhQ,GAAU,OAAQ,GAClBA,GAAU,WAAgB,OAAJmI,QAAI,IAAJA,GAAa,QAATmJ,EAAJnJ,EAAM6H,eAAO,IAAAsB,OAAT,EAAJA,EAAerB,eACrCjQ,GAAU,eAAgBkQ,MAASC,UACnCnQ,GAAU,gBAAqB,OAAJmI,QAAI,IAAJA,GAAa,QAAToJ,EAAJpJ,EAAM6H,eAAO,IAAAuB,OAAT,EAAJA,EAAetP,IAC1C+B,GAAQ,IAAIsF,KAAS,OAAJnB,QAAI,IAAJA,GAAa,QAATqJ,EAAJrJ,EAAM6H,eAAO,IAAAwB,OAAT,EAAJA,EAAepB,eAChCpQ,GAAU,SAAc,OAAJmI,QAAI,IAAJA,GAAa,QAATsJ,EAAJtJ,EAAM6H,eAAO,IAAAyB,OAAT,EAAJA,EAAepB,iBACnCrQ,GAAU,MAAW,OAAJmI,QAAI,IAAJA,GAAa,QAATuJ,EAAJvJ,EAAM6H,eAAO,IAAA0B,OAAT,EAAJA,EAAepB,KAChCtQ,GAAU,mBAAwB,OAAJmI,QAAI,IAAJA,GAAa,QAATwJ,EAAJxJ,EAAM6H,eAAO,IAAA2B,OAAT,EAAJA,EAAe1B,eAC7CjQ,GAAU,QAAa,OAAJmI,QAAI,IAAJA,GAAa,QAATyJ,EAAJzJ,EAAM6H,eAAO,IAAA4B,OAAT,EAAJA,EAAerB,gBAClCvQ,GAAU,UAAe,OAAJmI,QAAI,IAAJA,GAAa,QAAT0J,EAAJ1J,EAAM6H,eAAO,IAAA6B,OAAT,EAAJA,EAAemB,SACpChT,GAAU,MAAW,OAAJmI,QAAI,IAAJA,GAAa,QAAT2J,EAAJ3J,EAAM6H,eAAO,IAAA8B,OAAT,EAAJA,EAAerB,KAChChJ,GAAsB,CAAExF,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT4J,EAAJ5J,EAAM6H,eAAO,IAAA+B,OAAT,EAAJA,EAAerB,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT6J,EAAJ7J,EAAM6H,eAAO,IAAAgC,OAAT,EAAJA,EAAetB,cAC7E1Q,GAAU,cAAe,CAAEiC,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT8J,EAAJ9J,EAAM6H,eAAO,IAAAiC,OAAT,EAAJA,EAAevB,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT+J,EAAJ/J,EAAM6H,eAAO,IAAAkC,OAAT,EAAJA,EAAexB,cAChF1Q,GAAU,SAAc,OAAJmI,QAAI,IAAJA,GAAa,QAATgK,EAAJhK,EAAM6H,eAAO,IAAAmC,OAAT,EAAJA,EAAexB,SACnCxS,GAAgB,OAAJgK,QAAI,IAAJA,GAAa,QAATiK,EAAJjK,EAAM6H,eAAO,IAAAoC,OAAT,EAAJA,EAAe1H,cAC3B1K,GACE,SAEEiB,OAAOC,WAAe,OAAJiH,QAAI,IAAJA,GAAa,QAATkK,EAAJlK,EAAM6H,eAAO,IAAAqC,OAAT,EAAJA,EAAe3H,cAUjC,KATI,OAAJvC,QAAI,IAAJA,GAAa,QAATmK,EAAJnK,EAAM6H,eAAO,IAAAsC,GAAoB,QAApBC,EAAbD,EAAenH,0BAAkB,IAAAoH,OAA7B,EAAJA,EAAmCnH,QAAO,CAACpN,EAAOsN,KAAU,IAAD2H,EAAAC,EACzD,MAAMpC,EAAM7P,OAAOC,WAA2B,QAAjB+R,EAAK,OAAJ3H,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAA0H,EAAAA,EAAI,GAC5CpS,EAAMI,OAAOC,WAAyB,QAAfgS,EAAK,OAAJ5H,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAAmC,EAAAA,EAAI,GAIhD,OAHAtU,QAAQC,IAAIiS,GACZlS,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIb,GACLA,EAAQ8S,EAAMjQ,CAAG,GAEvB,KAEHM,QAAQ,IAEZnB,GACE,WAEEiB,OAAOC,WAAe,OAAJiH,QAAI,IAAJA,GAAa,QAATqK,EAAJrK,EAAM6H,eAAO,IAAAwC,OAAT,EAAJA,EAAe9H,cAUjC,KATI,OAAJvC,QAAI,IAAJA,GAAa,QAATsK,EAAJtK,EAAM6H,eAAO,IAAAyC,GAAoB,QAApBC,EAAbD,EAAetH,0BAAkB,IAAAuH,OAA7B,EAAJA,EAAmCtH,QAAO,CAACpN,EAAOsN,KAAU,IAAD6H,EAAAC,EACzD,MAAMtC,EAAM7P,OAAOC,WAA2B,QAAjBiS,EAAK,OAAJ7H,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAA4H,EAAAA,EAAI,GAC5CtS,EAAMI,OAAOC,WAAyB,QAAfkS,EAAK,OAAJ9H,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAAqC,EAAAA,EAAI,GAIhD,OAHAxU,QAAQC,IAAIiS,GACZlS,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIb,GACLA,EAAQ8S,EAAMjQ,CAAG,GAEvB,KAEHM,QAAQ,IAEZsG,GAAsB,CAAExF,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAATwK,EAAJxK,EAAM6H,eAAO,IAAA2C,OAAT,EAAJA,EAAejC,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAATyK,EAAJzK,EAAM6H,eAAO,IAAA4C,OAAT,EAAJA,EAAelC,cAC7E1Q,GAAU,cAAe,CAAEiC,GAAQ,OAAJkG,QAAI,IAAJA,GAAa,QAAT0K,EAAJ1K,EAAM6H,eAAO,IAAA6C,OAAT,EAAJA,EAAenC,YAAaxO,KAAU,OAAJiG,QAAI,IAAJA,GAAa,QAAT2K,EAAJ3K,EAAM6H,eAAO,IAAA8C,OAAT,EAAJA,EAAepC,cAChFjM,GAAgB,OAAJ0D,QAAI,IAAJA,GAAc,QAAV4K,EAAJ5K,EAAM3D,gBAAQ,IAAAuO,OAAV,EAAJA,EAAgBzU,QAE5BiK,EAAAA,EAAAA,IAAe,iBAEnB,CAAE,MAAOD,IACPU,EAAAA,EAAAA,IAAaV,EACf,CACE,EA+E4B+F,EAAkB,EAClB5E,UAEFC,EAAAA,EAAAA,KAACyH,EAAAA,EAAU,CAACvH,GAAI,CAAEwH,MAAO,qBAMnC1H,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAIS,GAAI,IAAIlE,UACxCC,EAAAA,EAAAA,KAAC2J,EAAAA,GAAa,CACZC,QAAS,UACTC,MAAM,QACNtF,QAASA,KACPzK,IAAkB,GAClBxD,GAAU,QAAS,IACnBA,GAAU,gBAAiB,IAC3BA,GAAU,WAAY,IACtBA,GAAU,eAAgB,IAC1BA,GAAU,SAAU,IACpBA,GAAU,MAAO,IACjBA,GAAU,mBAAoB,IAC9BA,GAAU,QAAS,IACnBA,GAAU,UAAW,IACrBA,GAAU,MAAO,IACjBA,GAAU,cAAe,IACzBzB,GAAQ,IACRF,IAAa,GACbF,GAAY,EAAE,EAEhBsE,QAASA,aA0CjBiH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CACH1B,MAAI,EACJmC,GAAI,GACJC,GAAI,GACJR,GAAI,GACJtD,GAAI,CACF4J,OAAQ,kBACR7G,EAAG,EACH3C,aAAc,OACd2D,GAAI,CAAEF,GAAI,EAAGC,GAAI,EAAGR,GAAI,IACxBzD,UAEFF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,WAAS,EAACrD,GAAI,CAAE8C,IAAK,YAAajD,SAAA,EACtCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CACVpG,KAAM,QACND,MAAO,cACPE,UAAU,EACVoG,QAAS,CAAC,CAAEzR,GAAI,SAAUC,KAAM,qBAChCyR,SAAUjN,GACVkN,SAAW/L,IACTlB,GAAoBkB,EAAM,EAE5BS,MAAc,OAAPlI,SAAO,IAAPA,IAAiB,QAAV/D,EAAP+D,GAASyT,gBAAQ,IAAAxX,OAAV,EAAPA,EAAmBkR,QAC1BlO,SAAUS,GAAU,iBAGxB4J,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,mBACNC,KAAK,QACLC,UAAU,EACVO,YAAY,mBACZxO,SAAUS,GAAU,oBACpBwI,MAAc,OAAPlI,SAAO,IAAPA,IAAyB,QAAlB9D,EAAP8D,GAAS0T,wBAAgB,IAAAxX,OAAlB,EAAPA,EAA2BiR,aAItC7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,SACNC,KAAK,QACLQ,YAAY,YACZP,UAAU,EACVjO,SAAUS,GAAU,SAAS,CAC3BiU,QAAS,CACPlM,MAAO,eACP0F,QAAS,4EAGbjF,MAAc,OAAPlI,SAAO,IAAPA,IAAe,QAAR7D,EAAP6D,GAAS4T,cAAM,IAAAzX,OAAR,EAAPA,EAAiBgR,aAI5B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,QACNC,KAAK,QACLQ,YAAY,QACZP,UAAU,EACVjO,SAAUS,GAAU,SACpBwI,MAAc,OAAPlI,SAAO,IAAPA,IAAc,QAAP5D,EAAP4D,GAAS6T,aAAK,IAAAzX,OAAP,EAAPA,EAAgB+Q,aAI3B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,MACNC,KAAK,QACLQ,YAAY,MACZP,UAAU,EACVjO,SAAUS,GAAU,MAAO,CACzBoU,UAAU,SAgBhBxK,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,MACNE,UAAU,EACVD,KAAK,QACLQ,YAAY,YACZxO,SAAUS,GAAU,YAIxB4J,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CACVrG,MAAM,cACNC,KAAK,QACLC,UAAU,EACVoG,QAAS,CAAC,CAAEzR,GAAI,YAAaC,KAAM,cACnCyR,SAAUnM,GACVoM,SAAW/L,GAAUJ,GAAsBI,GAC3CxI,SAAUS,GAAU,cAAe,CACjCoU,UAAU,SAIhBxK,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,IAAKC,GAAI,IAAKR,GAAI,GAAGzD,UAClCC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,UACNC,KAAK,QACLQ,YAAY,UACZsG,WAAS,EACT7G,UAAU,EACVhP,KAAM,EACNe,SAAUS,GAAU,WACpBwI,MAAc,OAAPlI,SAAO,IAAPA,IAAgB,QAAT3D,EAAP2D,GAAS4S,eAAO,IAAAvW,OAAT,EAAPA,EAAkB8Q,uBAQrC7D,EAAAA,EAAAA,KAAC0K,EAAAA,EAAc,CAACnK,UAAWoK,EAAAA,EAAM5K,UAC/BF,EAAAA,EAAAA,MAAC+K,EAAAA,EAAK,CAAA7K,SAAA,EACJC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAA9K,UACRF,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,eACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,aACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,SACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,cACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,gBACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,iBACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,WACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,cACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,YACnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,YAEnCC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAC7K,GAAI,CAAEC,MAAO,SAAUJ,SAAC,iBAGvCF,EAAAA,EAAAA,MAACmL,EAAAA,EAAS,CAAAjL,SAAA,CACH,OAAJnL,SAAI,IAAJA,QAAI,EAAJA,GAAMoK,KAAI,CAAC4C,EAAM3D,KAAK,IAAAgN,EAAA,OACrBpL,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMrJ,MAClByH,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,GAAa,QAATqJ,EAAJrJ,EAAMW,eAAO,IAAA0I,OAAT,EAAJA,EAAezS,QAC3BwH,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,YAClBrH,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMG,YAClB/B,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMC,cAClB7B,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMK,eAClBjC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,SAAM,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMtN,SAElB0L,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,UACRC,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CACRvH,KAAK,QACLQ,YAAY,iBACZgH,KAAK,SACLhN,MAAOyD,EAAKwJ,gBAAkB,GAC9BtH,SAAWuH,GAAMrN,GAAkBC,EAAO,iBAAkBoN,EAAEC,OAAOnN,YAIzE6B,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,UACRC,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CACRvH,KAAK,QACLQ,YAAY,iBACZgH,KAAK,SACLvH,UAAU,EACVzF,MAAOyD,EAAK2J,gBAAkB,GAC9BzH,SAAWuH,GAAMrN,GAAkBC,EAAO,iBAAkBoN,EAAEC,OAAOnN,YAIzE6B,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAAAhL,UACRC,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CACRvH,KAAK,QACLQ,YAAY,SACZgH,KAAK,SACLvH,UAAU,EACVzF,MAAOyD,EAAK4J,QAAU,GACtB1H,SAAWuH,GAAMrN,GAAkBC,EAAO,SAAUoN,EAAEC,OAAOnN,aArCpDF,EAwCJ,KAGb4B,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAACU,QAAS,EAAGC,MAAM,QAAO3L,UAClCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAAC,kBAIrDF,EAAAA,EAAAA,MAACkL,EAAAA,EAAS,CAAAhL,SAAA,EACRC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAC/CvL,KACW,WAOlBqL,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAACU,QAAS,EAAGC,MAAM,QAAO3L,UAClCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAAC,2BAIrDF,EAAAA,EAAAA,MAACkL,EAAAA,EAAS,CAAAhL,SAAA,EACRC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAC3C,OAAJnL,SAAI,IAAJA,QAAI,EAAJA,GACG8M,QAAO,CAACpN,EAAOsN,KAAU,IAADgK,EAAAC,EAGxB,OAAOvX,EAFKiD,OAAOC,WAA2B,QAAjBoU,EAAK,OAAJhK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAA+J,EAAAA,EAAI,GACtCrU,OAAOuU,SAAuB,QAAfD,EAAK,OAAJjK,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAAwE,EAAAA,EAAI,EACtB,GACvB,GACFpU,QAAQ,KACC,WAIlBoI,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAACU,QAAS,EAAGC,MAAM,QAAO3L,UAClCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAAC,kBAIrDF,EAAAA,EAAAA,MAACkL,EAAAA,EAAS,CAAAhL,SAAA,EACRC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,UAMtC,KAJJ,OAAJnL,SAAI,IAAJA,QAAI,EAAJA,GAAM8M,QAAO,CAACpN,EAAOsN,KAAU,IAADmK,EAAAC,EAG5B,OAAO1X,EAFKiD,OAAOC,WAA2B,QAAjBuU,EAAK,OAAJnK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAAkK,EAAAA,EAAI,GACtCxU,OAAOC,WAAyB,QAAfwU,EAAK,OAAJpK,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAA2E,EAAAA,EAAI,EACxB,GACvB,KACHvU,QAAQ,KACE,WAKlBoI,EAAAA,EAAAA,MAACiL,EAAAA,EAAQ,CAAA/K,SAAA,EACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAACU,QAAS,EAAGC,MAAM,QAAO3L,UAClCC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,SAAC,qBAIrDF,EAAAA,EAAAA,MAACkL,EAAAA,EAAS,CAAAhL,SAAA,EACRC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACwI,QAAQ,KAAKzL,GAAI,CAAEkD,SAAU,QAASrD,UAE9CxI,OAAOC,WAAWhD,IAMlB,KALI,OAAJI,SAAI,IAAJA,QAAI,EAAJA,GAAM8M,QAAO,CAACpN,EAAOsN,KAAU,IAADqK,EAAAC,EAG5B,OAAO5X,EAFKiD,OAAOC,WAA2B,QAAjByU,EAAK,OAAJrK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,kBAAU,IAAAoK,EAAAA,EAAI,GACtC1U,OAAOC,WAAyB,QAAf0U,EAAK,OAAJtK,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,gBAAQ,IAAA6E,EAAAA,EAAI,EACxB,GACvB,KAEHzU,QAAQ,KACE,WAIlBuI,EAAAA,EAAAA,KAAC8K,EAAAA,EAAQ,CAAA/K,UACPC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAS,CAACU,QAAS,GAAIC,MAAM,QAAO3L,UACnCF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,WAAS,EAACP,IAAK,EAAGD,eAAgB,SAAShD,SAAA,EAC/CC,EAAAA,EAAAA,KAACmM,EAAAA,EAAM,CACL5H,QAASA,IAAM5P,IAAa,GAC5BiP,SAA0B,IAAZ,OAAJhP,SAAI,IAAJA,QAAI,EAAJA,GAAMwX,QAChBT,QAAQ,YACRzL,GAAI,CACFmM,cAAe,aACfhM,gBAAiB,UACjBF,MAAO,QACP,SAAU,CACRE,gBAAiB,oBAEnBN,SACH,SAGDC,EAAAA,EAAAA,KAACmM,EAAAA,EAAM,CACL5H,QAASA,IAAM5P,IAAa,GAC5BgX,QAAQ,YACRzL,GAAI,CACFmM,cAAe,aACfhM,gBAAiB,UACjBF,MAAO,QACP,SAAU,CACRE,gBAAiB,oBAEnBN,SACH,0BASZrL,KACCmL,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,WAAS,EAACU,GAAI,EAAGqI,QAAS,EAAEvM,SAAA,EAChCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,eACNC,KAAK,QACLC,UAAU,EACVO,YAAY,eACZxO,SAAUS,GAAU,QAAS,CAC3BoU,SAAU,yBAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAc,QAAP1D,EAAP0D,GAASpC,aAAK,IAAAtB,OAAP,EAAPA,EAAgB6Q,aAG3B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,cACNvF,MAAO,EACPyF,UAAU,EACVD,KAAK,QACLQ,YAAY,eAEZxO,SAAUS,GAAU,SAAU,CAC5BoU,UAAU,IAGZ5L,OAAc,OAAPlI,SAAO,IAAPA,IAAe,QAARzD,EAAPyD,GAASE,cAAM,IAAA3D,OAAR,EAAPA,EAAiB4Q,UAAW7O,QAGvCgL,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,iBACNC,KAAK,QACLC,UAAU,EACVO,YAAY,iBACZxO,SAAUS,GAAU,UAAW,CAC7BoU,SAAU,2BAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAgB,QAATxD,EAAPwD,GAAS6V,eAAO,IAAArZ,OAAT,EAAPA,EAAkB2Q,aAG7B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CACVrG,MAAM,eACNC,KAAK,QACLqG,QAAS,CACP,CAAEzR,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,eAAgBC,KAAM,iBAE9ByR,SAAUxT,GAAO,WACjByT,SAAW/L,IACT7H,GAAU,UAAW6H,GACrBV,GAAgBU,EAAM,EAExBxI,SAAUS,GAAU,UAAW,CAC7BoU,SAAU,+BAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAgB,QAATvD,EAAPuD,GAASG,eAAO,IAAA1D,OAAT,EAAPA,EAAkB0Q,YAGR,SAAR,OAAZrG,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,MACbyH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CACVrG,MAAM,QACNC,KAAK,QACLqG,QAAS5M,GACT6M,SAAU5Q,GACV6Q,SAAW/L,IACT7E,GAAgB6E,EAAM,EAExBxI,SAAUS,GAAU,OAAQ,CAC1BoU,SAAU,yBAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAa,QAANtD,EAAPsD,GAASI,YAAI,IAAA1D,OAAN,EAAPA,EAAeyQ,YAIP,SAAR,OAAZrG,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,MACbyH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CACVrG,MAAM,OACNC,KAAK,QACLqG,QAAStM,GACTuM,SAAUrM,GACVsM,SAAW/L,IACTN,GAAgBM,EAAM,EAExBxI,SAAUS,GAAU,OAAQ,CAC1BoU,SAAU,yBAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAa,QAANrD,EAAPqD,GAASK,YAAI,IAAA1D,OAAN,EAAPA,EAAewQ,YAIP,SAAR,OAAZrG,SAAY,IAAZA,QAAY,EAAZA,GAAcjF,MAAgByH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC9DC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,qBACNC,KAAK,QACLQ,YAAY,qBACZxO,SAAUS,GAAU,UAAW,CAC7BoU,SAAU,sBAEZ5L,MAAc,OAAPlI,SAAO,IAAPA,IAAgB,QAATpD,EAAPoD,GAAS4K,eAAO,IAAAhO,OAAT,EAAPA,EAAkBuQ,aAG7B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC1B,MAAI,EAACmC,GAAI,EAAGC,GAAI,GAAIR,GAAI,GAAGzD,UAC/BC,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTR,MAAM,YACNC,KAAK,QACLQ,YAAY,YACZxO,SAAUS,GAAU,aACpBwI,MAAc,OAAPlI,SAAO,IAAPA,IAAkB,QAAXnD,EAAPmD,GAAS6K,iBAAS,IAAAhO,OAAX,EAAPA,EAAoBsQ,aAG/B7D,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,WAAS,EAACR,eAAgB,WAAYkB,GAAI,EAAGuI,GAAI,EAAEzM,UACvDC,EAAAA,EAAAA,KAACmM,EAAAA,EAAM,CACLhB,KAAK,SACLvH,SAA0B,IAAZ,OAAJhP,SAAI,IAAJA,QAAI,EAAJA,GAAMwX,SAAetX,GAC/B6W,QAAQ,YACRzL,GAAI,CACFmM,cAAe,aACfhM,gBAAiB,UACjB,SAAU,CACRA,gBAAiB,oBAEnBN,SACH,yBAYrB,C,sBCloCI0M,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sOACD,S","sources":["pages/Dashboard/Payments/CreatePaidReceipt.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n  TableBody,\r\n  TableHead,\r\n  TextField,\r\n  Paper,\r\n} from \"@mui/material\"\r\nimport { useTheme } from \"@mui/material/styles\"\r\nimport Button from \"@mui/material/Button\"\r\nimport { PrimaryButton } from \"components/Buttons\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport InputField from \"components/Input\"\r\nimport DatePicker from \"components/DatePicker\"\r\nimport { ErrorToaster } from \"components/Toaster\"\r\nimport SelectField from \"components/Select\"\r\nimport CustomerServices from \"services/Customer\"\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\"\r\nimport moment from \"moment\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useAuth } from \"context/UseContext\"\r\nimport FinanceServices from \"services/Finance\"\r\nimport SearchIcon from \"@mui/icons-material/Search\"\r\n// import { TableBody, TableHead } from \"mui-datatables\";\r\n\r\nfunction CreatePaidReceipt() {\r\n  const theme = useTheme()\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const [formChange, setFormChange] = useState(false)\r\n  const [submit, setSubmit] = useState(false)\r\n  const [excludeFromSales, setExcludeFromSales] = useState(\"no\")\r\n  const [excludeFromPurchase, setExcludeFromPurchase] = useState(\"no\")\r\n  const [total, setTotal] = useState(0)\r\n  const [subTotal, setSubTotal] = useState(0)\r\n  const [payButton, setPayButton] = useState(false)\r\n  const [rows, setRows] = useState([])\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n  const [amountError, setAmountError] = useState(\"\")\r\n  console.log(rows, \"data\")\r\n  const [items, setItems] = useState([\r\n    {\r\n      itemCode: \"\",\r\n      itemDescription: \"TASHEEL AUTO 19\",\r\n      totalCharge: 17.1,\r\n      mbNo: \"\",\r\n      applicationId: \"\",\r\n      total: 17.1,\r\n    },\r\n  ])\r\n\r\n  // const addItem = () => {\r\n  //   const newItem = {\r\n  //     itemCode: \"\",\r\n  //     itemDescription: \"\",\r\n  //     totalCharge: 0,\r\n  //     mbNo: \"\",\r\n  //     applicationId: \"\",\r\n  //     total: 0,\r\n  //   };\r\n  //   setItems([...items, newItem]);\r\n  // };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    setValue,\r\n    watch,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm()\r\n  const {\r\n    register: register1,\r\n    handleSubmit: handleSubmit1,\r\n    setValue: setValue1,\r\n    getValues: getValues1,\r\n    control,\r\n    watch: watch1,\r\n    formState: { errors: errors1 },\r\n  } = useForm({\r\n    defaultValues: {\r\n      amount: \"\",\r\n      payment: null,\r\n      bank: null,\r\n      card: null,\r\n    },\r\n  })\r\n\r\n  // Watch all form data\r\n\r\n  // Watch for changes in the fee-related fields\r\n  const govtFee = watch(\"govt_fee\", 0)\r\n  const centerFee = watch(\"center_fee\", 0)\r\n  const bankCharges = watch(\"bank_charges\", 0)\r\n  const qty = watch(\"qty\", 1)\r\n  const paymentAmount = watch1(\"amount\", 0)\r\n  const paymentMethod = watch1(\"payment\")\r\n\r\n  useEffect(() => {\r\n    const feesTotal =\r\n      (Number.parseFloat(govtFee) || 0) + (Number.parseFloat(centerFee) || 0) + (Number.parseFloat(bankCharges) || 0)\r\n    const finalTotal = feesTotal * (Number.parseFloat(qty) || 1)\r\n    setValue(\"total\", finalTotal)\r\n  }, [govtFee, centerFee, bankCharges, qty])\r\n\r\n  // Validate amount against total\r\n  useEffect(() => {\r\n    if (paymentAmount && watch1(\"total\")) {\r\n      const amount = Number.parseFloat(paymentAmount)\r\n      const total = Number.parseFloat(watch1(\"total\"))\r\n\r\n      if (amount > total) {\r\n        setAmountError(\"Amount cannot exceed total\")\r\n      } else if (amount <= 0) {\r\n        setAmountError(\"Amount must be greater than 0\")\r\n      } else {\r\n        setAmountError(\"\")\r\n        // Calculate balance\r\n        setValue1(\"balance\", (total - amount).toFixed(2))\r\n      }\r\n    }\r\n  }, [paymentAmount, watch1(\"total\")])\r\n\r\n  const addItem = (data) => {\r\n    const total = data.total\r\n    setRows((prevRows) => {\r\n      const updatedRows = [...prevRows, data]\r\n      const newSubTotal = updatedRows.reduce((sum, row) => sum + row.total, 0)\r\n      setSubTotal(newSubTotal)\r\n      return updatedRows\r\n    })\r\n    reset()\r\n    setServiceItem(\"\")\r\n  }\r\n\r\n  const allowFilesType2 = [\"image/png\", \"image/jpg\", \"image/jpeg\"]\r\n  const [guarantors, setGuarantors] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(1)\r\n\r\n  // *For Deposit Slip\r\n  const [progress, setProgress] = useState(0)\r\n  const [uploadedSize, setUploadedSize] = useState(0)\r\n  const [slipDetail, setSlipDetail] = useState([])\r\n\r\n  const [selectedDue, setSelectedDue] = useState({\r\n    id: \"Instant\",\r\n    name: \"Instant\",\r\n  })\r\n  const [passport, setPassport] = useState()\r\n  const [allocation, setAllocation] = useState(false)\r\n  const [depositError, setDepositError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [emailVerify, setEmailVerify] = useState(false)\r\n  const [isUploading, setIsUploading] = useState(false)\r\n  const [selectedBank, setSelectedBank] = useState(null)\r\n  const [loader, setLoader] = useState(false)\r\n  console.log(selectedBank, \"objobj\")\r\n\r\n  const [center, setCenter] = useState(null)\r\n  const [status, setStatus] = useState(null)\r\n  const [fieldsDisabled, setFieldsDisabled] = useState(false)\r\n\r\n  // *For Stepper Forms Data\r\n  const [stepFormData, setStepFormData] = useState()\r\n  const [step1FormData, setStep1FormData] = useState()\r\n  const [selectedType, setSelectedType] = useState(null)\r\n  const [date, setDate] = useState(null)\r\n  const [balanceType, setBalanceType] = useState(null)\r\n  const [imageURL, setImageURL] = useState(null)\r\n  const fileInputRef = useRef(null)\r\n  const [hovered, setHovered] = useState(false)\r\n  const [accounts, setAccounts] = useState([])\r\n  const [salesAccount, setSalesAccount] = useState(null)\r\n  const [inventoryAccount, setInventoryAccount] = useState(null)\r\n  const [cogsAccount, setCogsAccount] = useState(null)\r\n  const [adjustmentAccount, setAdjustmentAccount] = useState(null)\r\n  const [assemblyAccount, setAssemblyAccount] = useState(null)\r\n  const [itemType, setItemType] = useState(null)\r\n  const [unit, setUnit] = useState(null)\r\n  const [taxes, setTaxes] = useState([])\r\n  const [tax, setTax] = useState(null)\r\n  const [category, setCategory] = useState(null)\r\n  const [categories, setCategories] = useState(null)\r\n  const [governmentAccount, setGovernmnentAccount] = useState(null)\r\n  const [description, setDescription] = useState(null)\r\n  const [ownGovBank, setOwnGovBank] = useState(null)\r\n  const [services, setServices] = useState(null)\r\n  const [serviceItem, setServiceItem] = useState(null)\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null)\r\n  const [detail, setDetail] = useState(null)\r\n  const [banks, setBanks] = useState([])\r\n  const [holdState, setHoldState] = useState(true)\r\n  const [selectedMode, setSelectedMode] = useState(null)\r\n  const [cards, setCards] = useState([])\r\n  const [selectedCard, setSelectedCard] = useState(null)\r\n  const [selectedCostCenter, setSelectedCostCenter] = useState(null)\r\n  //documents array\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n  }\r\n  console.log(\"objobj\", watch1(\"bank\"))\r\n\r\n  const submitForm1 = async (formData) => {\r\n    console.log(formData, \"objobjj\")\r\n    setButtonDisabled(true)\r\n    try {\r\n      const obj = {\r\n        id: getValues1(\"invoicenumber\"),\r\n        total_amount: formData?.total,\r\n        items: rows,\r\n        // paid_amount: formData?.paid,\r\n        paid_amount: formData?.amount || formData?.total,\r\n        payment_status: formData?.amount < formData?.total ? \"Partially Paid\" : \"Paid\",\r\n        payment_mode: selectedMode?.id, // Cash, Bank, Card\r\n        account_id:\r\n          selectedMode?.id == \"Cash\"\r\n            ? 700117\r\n            : selectedMode?.id == \"Bank\"\r\n              ? selectedBank?.account_id\r\n              : selectedMode?.id == \"Card\"\r\n                ? selectedCard?.account_id\r\n                : selectedMode?.id == \"Payment Link\"\r\n                  ? 700171\r\n                  : null,\r\n        ref_id: selectedMode?.id == \"Bank\" ? selectedBank?.id : null,\r\n        remarks: formData?.remarks,\r\n        narration: formData?.narration,\r\n\r\n        charges: detail?.sale_receipt_items?.reduce((acc, item) => acc + Number(item?.center_fee || 0), 0),\r\n        govt_charges: detail?.sale_receipt_items?.reduce((acc, item) => acc + Number(item?.govt_fee || 0), 0),\r\n        bank_charges: detail?.sale_receipt_items?.reduce((acc, item) => acc + Number(item?.bank_charge || 0), 0),\r\n\r\n        bank_name: selectedMode?.id == \"Bank\" ? selectedBank?.name : \"\",\r\n        bank_id: selectedMode?.id == \"Bank\" ? selectedBank?.id : \"\",\r\n        customer_id: detail?.customer_id,\r\n        invoice_prefix: detail?.invoice_prefix,\r\n        category_id: detail?.sale_receipt_items[0]?.service?.category_id,\r\n      }\r\n\r\n      console.log(obj, \"objobj\")\r\n      if (detail?.is_paid == true) {\r\n        ErrorToaster(\"Already paid\")\r\n      } else {\r\n        const promise = CustomerServices.PayReceipt(obj)\r\n        const response = await promise\r\n        showPromiseToast(promise, \"Saving...\", \"Added Successfully\", \"Something Went Wrong\")\r\n        if (response?.responseCode === 200) {\r\n          navigate('/paid-receipts')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      setButtonDisabled(false)\r\n    }\r\n  }\r\n  // *For Get Customer Queue\r\n  const getBanks = async (page, limit, filter) => {\r\n    setLoader(true)\r\n\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await CustomerServices.getBanks(params)\r\n      setBanks(data?.banks)\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoader(false)\r\n    }\r\n  }\r\n  // *For Get Customer Queue\r\n  const getCards = async (page, limit, filter) => {\r\n    setLoader(true)\r\n\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await CustomerServices.getCards(params)\r\n      setCards(\r\n        data?.cards?.map((card) => ({\r\n          ...card,\r\n          name: card.account_name,\r\n        })),\r\n      )\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoader(false)\r\n    }\r\n  }\r\n  // *For Get Account\r\n  const getReceptionDetail = async (state) => {\r\n    setFieldsDisabled(true)\r\n    try {\r\n      let params = {\r\n        token_number: getValues1(\"token\"),\r\n      }\r\n      if (state) {\r\n        params = {\r\n          invoice_number: getValues1(\"invoicenumber\"),\r\n        }\r\n      }\r\n      const { data } = await CustomerServices.getReceiptDetail(params)\r\n      console.log(data?.receipt, \"dataaa\")\r\n      if (data?.receipt) {\r\n        setRows(data?.receipt?.sale_receipt_items)\r\n        setDetail(data?.receipt)\r\n\r\n        setValue1(\"paid\", 0)\r\n        setValue1(\"customer\", data?.receipt?.customer_name)\r\n        setValue1(\"invoice_date\", moment().toDate())\r\n        setDate(new Date(data?.receipt?.invoice_date))\r\n        setValue1(\"mobile\", data?.receipt?.customer_mobile)\r\n        setValue1(\"ref\", data?.receipt?.ref)\r\n        setValue1(\"display_customer\", data?.receipt?.customer_name)\r\n        setValue1(\"email\", data?.receipt?.customer_email)\r\n        setValue1(\"address\", data?.receipt?.customer_address)\r\n        setValue1(\"trn\", data?.receipt?.trn)\r\n        setSelectedCostCenter({ id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"cost_center\", { id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"caseno\", data?.receipt?.case_no)\r\n        setSubTotal(data?.receipt?.total_amount)\r\n\r\n        setValue1(\r\n          \"total\",\r\n          (\r\n            Number.parseFloat(data?.receipt?.total_amount) +\r\n            data?.receipt?.sale_receipt_items?.reduce((total, item) => {\r\n              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n              console.log(fee);\r\n              console.log(qty);\r\n              console.log(total);\r\n              return total + fee * qty\r\n            }, 0) *\r\n            0.05\r\n          ).toFixed(2),\r\n        )\r\n        setValue1(\r\n          \"balance\",\r\n          (\r\n            Number.parseFloat(data?.receipt?.total_amount) +\r\n            data?.receipt?.sale_receipt_items?.reduce((total, item) => {\r\n              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n              console.log(fee);\r\n              console.log(qty);\r\n              console.log(total);\r\n              return total + fee * qty\r\n              \r\n            }, 0) *\r\n            0.05\r\n          ).toFixed(2),\r\n        )\r\n        setSelectedCostCenter({ id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"cost_center\", { id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setAccounts(data?.accounts?.rows)\r\n      }\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n\r\n  const getServiceItem = async () => {\r\n    // setLoader(true)\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await CustomerServices.getServiceItem(params)\r\n\r\n      setServices(data?.rows)\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n  const handleServiceSelect = async (value) => {\r\n    console.log(value, \"idididid\")\r\n    setServiceItem(value)\r\n    // setLoader(true)\r\n    try {\r\n      const params = {\r\n        service_id: value?.id,\r\n      }\r\n\r\n      const { data } = await CustomerServices.DetailServiceItem(params)\r\n      setValue(\"item_code\", data?.service?.id)\r\n      setValue(\"govt_fee\", data?.service?.bank_service_charge)\r\n      setValue(\"center_fee\", data?.service?.center_fee)\r\n      setValue(\"bank_charges\", data?.service?.bank_service_charge)\r\n\r\n      setValue(\"qty\", 1)\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n\r\n  const getAccounts = async (page, limit, filter) => {\r\n    // setLoader(true)\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await FinanceServices.getAccounts(params)\r\n      console.log(data?.accounts?.rows)\r\n\r\n      setAccounts(data?.accounts?.rows)\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedRows = [...rows]\r\n    updatedRows[index] = {\r\n      ...updatedRows[index],\r\n      [field]: value,\r\n    }\r\n    setRows(updatedRows)\r\n  }\r\n  console.log(rows)\r\n\r\n  const getTax = async () => {\r\n    // setLoader(true)\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await FinanceServices.getTax(params)\r\n      console.log(data?.accounts?.rows)\r\n\r\n      setTaxes(data?.tax)\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n  const getCategories = async () => {\r\n    // setLoader(true)\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        limit: 1000,\r\n      }\r\n\r\n      const { data } = await CustomerServices.getCategoryList(params)\r\n\r\n      setCategories(data?.categories)\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n\r\n  // *For Get Account\r\n  const getReceiptDetail = async (state) => {\r\n    setFieldsDisabled(true)\r\n    try {\r\n      const params = {\r\n        token_number: getValues1(\"token\"),\r\n        invoice_date: date,\r\n      }\r\n\r\n      const { data } = await CustomerServices.getReceiptDetail(params)\r\n      console.log(data)\r\n      if (data?.receipt) {\r\n        setHoldState(true)\r\n\r\n        setRows(data?.receipt?.sale_receipt_items)\r\n        setDetail(data?.receipt)\r\n\r\n        setValue1(\"paid\", 0)\r\n        setValue1(\"customer\", data?.receipt?.customer_name)\r\n        setValue1(\"invoice_date\", moment().toDate())\r\n        setValue1(\"invoicenumber\", data?.receipt?.id)\r\n        setDate(new Date(data?.receipt?.invoice_date))\r\n        setValue1(\"mobile\", data?.receipt?.customer_mobile)\r\n        setValue1(\"ref\", data?.receipt?.ref)\r\n        setValue1(\"display_customer\", data?.receipt?.customer_name)\r\n        setValue1(\"email\", data?.receipt?.customer_email)\r\n        setValue1(\"address\", data?.receipt?.address)\r\n        setValue1(\"trn\", data?.receipt?.trn)\r\n        setSelectedCostCenter({ id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"cost_center\", { id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"caseno\", data?.receipt?.case_no)\r\n        setSubTotal(data?.receipt?.total_amount)\r\n        setValue1(\r\n          \"total\",\r\n          (\r\n            Number.parseFloat(data?.receipt?.total_amount) +\r\n            data?.receipt?.sale_receipt_items?.reduce((total, item) => {\r\n              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n              console.log(fee);\r\n              console.log(qty);\r\n              console.log(total);\r\n              return total + fee * qty\r\n              \r\n            }, 0) *\r\n            0.05\r\n          ).toFixed(2),\r\n        )\r\n        setValue1(\r\n          \"balance\",\r\n          (\r\n            Number.parseFloat(data?.receipt?.total_amount) +\r\n            data?.receipt?.sale_receipt_items?.reduce((total, item) => {\r\n              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n              console.log(fee);\r\n              console.log(qty);\r\n              console.log(total);\r\n              return total + fee * qty\r\n              \r\n            }, 0) *\r\n            0.05\r\n          ).toFixed(2),\r\n        )\r\n        setSelectedCostCenter({ id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setValue1(\"cost_center\", { id: data?.receipt?.cost_center, name: data?.receipt?.cost_center })\r\n        setAccounts(data?.accounts?.rows)\r\n      } else {\r\n        showErrorToast(\"Data Not Found\")\r\n      }\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    } finally {\r\n      // setLoader(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getBanks()\r\n    getCards()\r\n    getAccounts()\r\n    getTax()\r\n    getCategories()\r\n    getServiceItem()\r\n    setDate(new Date())\r\n    setSelectedCustomer({ id: \"walkin\", name: \"Walk-in Customer\" })\r\n    setValue1(\"customer\", { id: \"walkin\", name: \"Walk-in Customer\" })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: \"100%\" }}></Box>\r\n      <Box m={3} sx={{ backgroundColor: \"white\", borderRadius: \"12px\" }}>\r\n        {\r\n          <>\r\n            <Box component={\"form\"} onSubmit={handleSubmit1(submitForm1)}>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  gap: \"10px\",\r\n                  p: 3,\r\n                  alignItems: \"flex-end\",\r\n                }}\r\n              >\r\n                <Typography sx={{ fontSize: \"22px\", fontWeight: \"bold\" }}>Pay Receipt</Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ p: 3 }}>\r\n                <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                  <Grid item xs={12}>\r\n                    <Grid container gap={2} alignItems={\"center\"}>\r\n                      <Grid item xs={3}>\r\n                        <DatePicker\r\n                          label={\"Invoice Date :*\"}\r\n                          value={date}\r\n                          size={\"small\"}\r\n                          disabled={fieldsDisabled}\r\n                          error={errors1?.date?.message}\r\n                          register={register1(\"date\")}\r\n                          onChange={(date) => {\r\n                            setValue1(\"date\", date)\r\n                            setDate(new Date(date))\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={3} sm={12} xs={12} mt={1}>\r\n                        <InputField\r\n                          label=\"Invoice Number\"\r\n                          size=\"small\"\r\n                          disabled={fieldsDisabled}\r\n                          placeholder=\"Invoice Number\"\r\n                          register={register1(\"invoicenumber\")}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <IconButton onClick={() => getReceptionDetail(true)}>\r\n                                <SearchIcon sx={{ color: \"#bd9b4a\" }} />\r\n                              </IconButton>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={3} sm={12} xs={12}>\r\n                        <InputField\r\n                          label=\"Token\"\r\n                          size=\"small\"\r\n                          disabled={fieldsDisabled}\r\n                          placeholder=\"Enter Token\"\r\n                          register={register1(\"token\")}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  getReceiptDetail()\r\n                                }}\r\n                              >\r\n                                <SearchIcon sx={{ color: \"#bd9b4a\" }} />\r\n                              </IconButton>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={2} sm={12} xs={12} mt={2.5}>\r\n                        <PrimaryButton\r\n                          bgcolor={\"#bd9b4a\"}\r\n                          title=\"Clear\"\r\n                          onClick={() => {\r\n                            setFieldsDisabled(false)\r\n                            setValue1(\"token\", \"\")\r\n                            setValue1(\"invoicenumber\", \"\")\r\n                            setValue1(\"customer\", \"\")\r\n                            setValue1(\"invoice_date\", \"\")\r\n                            setValue1(\"mobile\", \"\")\r\n                            setValue1(\"ref\", \"\")\r\n                            setValue1(\"display_customer\", \"\")\r\n                            setValue1(\"email\", \"\")\r\n                            setValue1(\"address\", \"\")\r\n                            setValue1(\"trn\", \"\")\r\n                            setValue1(\"cost_center\", \"\")\r\n                            setRows([])\r\n                            setPayButton(false)\r\n                            setSubTotal(0)\r\n                          }}\r\n                          loading={loading}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  {/* <Grid\r\n                                        item\r\n                                        md={5.5}\r\n                                        sm={12}\r\n                                        xs={12}\r\n                                        sx={{\r\n                                            border: \"2px solid black\",\r\n                                            p: 2,\r\n                                            borderRadius: \"15px\",\r\n                                        }}\r\n                                    >\r\n                                        <Grid container sx={{ gap: \"5px 25px\" }}>\r\n\r\n\r\n\r\n                                            <Grid item xs={5.7} >\r\n                                                <SelectField\r\n                                                    size={'small'}\r\n                                                    label={'Customer *:'}\r\n                                                    disabled={true}\r\n                                                    options={[{ id: \"walkin\", name: \"Walk-in Customer\" }]}\r\n                                                    selected={selectedCustomer}\r\n                                                    onSelect={(value) => {\r\n                                                        setSelectedCustomer(value)\r\n\r\n\r\n                                                    }}\r\n                                                    error={errors1?.customer?.message}\r\n                                                    register={register1(\"customer\")}\r\n                                                />\r\n                                            </Grid>\r\n\r\n\r\n\r\n                                        </Grid>\r\n                                    </Grid> */}\r\n                  <Grid\r\n                    item\r\n                    md={12}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{\r\n                      border: \"2px solid black\",\r\n                      p: 2,\r\n                      borderRadius: \"15px\",\r\n                      mt: { md: 0, sm: 2, xs: 2 },\r\n                    }}\r\n                  >\r\n                    <Grid container sx={{ gap: \"5px 25px\" }}>\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <SelectField\r\n                          size={\"small\"}\r\n                          label={\"Customer *:\"}\r\n                          disabled={true}\r\n                          options={[{ id: \"walkin\", name: \"Walk-in Customer\" }]}\r\n                          selected={selectedCustomer}\r\n                          onSelect={(value) => {\r\n                            setSelectedCustomer(value)\r\n                          }}\r\n                          error={errors1?.customer?.message}\r\n                          register={register1(\"customer\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Display Customer\"\r\n                          size=\"small\"\r\n                          disabled={true}\r\n                          placeholder=\"Walk-in Customer\"\r\n                          register={register1(\"display_customer\")}\r\n                          error={errors1?.display_customer?.message}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Mobile\"\r\n                          size=\"small\"\r\n                          placeholder=\"Mobile No\"\r\n                          disabled={true}\r\n                          register={register1(\"mobile\",{\r\n                            pattern: {\r\n                              value: /^05[0-9]{8}$/,\r\n                              message: \"Please enter a valid UAE phone number (starting with 05 and 8 digits).\"\r\n                            },\r\n                          })}\r\n                          error={errors1?.mobile?.message}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Email\"\r\n                          size=\"small\"\r\n                          placeholder=\"Email\"\r\n                          disabled={true}\r\n                          register={register1(\"email\")}\r\n                          error={errors1?.email?.message}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"TRN\"\r\n                          size=\"small\"\r\n                          placeholder=\"TRN\"\r\n                          disabled={true}\r\n                          register={register1(\"trn\", {\r\n                            required: false,\r\n                          })}\r\n                        />\r\n                      </Grid>\r\n                      {/* <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Case No\"\r\n                          size=\"small\"\r\n                          placeholder=\"Case No\"\r\n                          disabled={true}\r\n                          register={register1(\"caseno\", {\r\n                            required: false\r\n                          })}\r\n\r\n                        />\r\n                      </Grid> */}\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Ref\"\r\n                          disabled={true}\r\n                          size=\"small\"\r\n                          placeholder=\"Reference\"\r\n                          register={register1(\"ref\")}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <SelectField\r\n                          label=\"Cost Center\"\r\n                          size=\"small\"\r\n                          disabled={true}\r\n                          options={[{ id: \"Al-ADHEED\", name: \"Al-ADHEED\" }]}\r\n                          selected={selectedCostCenter}\r\n                          onSelect={(value) => setSelectedCostCenter(value)}\r\n                          register={register1(\"cost_center\", {\r\n                            required: false,\r\n                          })}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item md={3.8} sm={5.5} xs={12}>\r\n                        <InputField\r\n                          label=\"Address\"\r\n                          size=\"small\"\r\n                          placeholder=\"Address\"\r\n                          multiline\r\n                          disabled={true}\r\n                          rows={2}\r\n                          register={register1(\"address\")}\r\n                          error={errors1?.address?.message}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ width: \"150px\" }}>Item Code</TableCell>\r\n                      <TableCell sx={{ width: \"400px\" }}>Service</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Qty</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Govt fee</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Center fee</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Bank Charge</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Total</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Trans Id</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>App Id</TableCell>\r\n                      <TableCell sx={{ width: \"150px\" }}>Ref Id</TableCell>\r\n\r\n                      <TableCell sx={{ width: \"150px\" }}>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows?.map((item, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{item?.id}</TableCell>\r\n                        <TableCell>{item?.service?.name}</TableCell>\r\n                        <TableCell>{item?.quantity}</TableCell>\r\n                        <TableCell>{item?.govt_fee}</TableCell>\r\n                        <TableCell>{item?.center_fee}</TableCell>\r\n                        <TableCell>{item?.bank_charge}</TableCell>\r\n                        <TableCell>{item?.total}</TableCell>\r\n\r\n                        <TableCell>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            placeholder=\"Transaction Id\"\r\n                            type=\"number\"\r\n                            value={item.transaction_id || \"\"}\r\n                            onChange={(e) => handleInputChange(index, \"transaction_id\", e.target.value)}\r\n                          />\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            placeholder=\"Application Id\"\r\n                            type=\"number\"\r\n                            disabled={true}\r\n                            value={item.application_id || \"\"}\r\n                            onChange={(e) => handleInputChange(index, \"application_id\", e.target.value)}\r\n                          />\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            placeholder=\"Ref No\"\r\n                            type=\"number\"\r\n                            disabled={true}\r\n                            value={item.ref_no || \"\"}\r\n                            onChange={(e) => handleInputChange(index, \"ref_no\", e.target.value)}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n\r\n                    <TableRow>\r\n                      <TableCell colSpan={9} align=\"right\">\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          Sub-total:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          {subTotal}\r\n                        </Typography>{\" \"}\r\n                        {/* Display the Sub-total */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n\r\n                    {/* Amount Total Row (optional, if needed for the final sum) */}\r\n\r\n                    <TableRow>\r\n                      <TableCell colSpan={9} align=\"right\">\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          Net Taxable Amount:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          {rows\r\n                            ?.reduce((total, item) => {\r\n                              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n                              const qty = Number.parseInt(item?.quantity ?? 1)\r\n                              return total + fee * qty\r\n                            }, 0)\r\n                            .toFixed(2)}\r\n                        </Typography>{\" \"}\r\n                        {/* Display the Sub-total */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell colSpan={9} align=\"right\">\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          Total Vat:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          {(\r\n                            rows?.reduce((total, item) => {\r\n                              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n                              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n                              return total + fee * qty\r\n                            }, 0) * 0.05\r\n                          ).toFixed(2)}\r\n                        </Typography>{\" \"}\r\n                        {/* Display the Sub-total */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    {/* Amount Total Row (optional, if needed for the final sum) */}\r\n                    <TableRow>\r\n                      <TableCell colSpan={9} align=\"right\">\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          Amount Total:\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h6\" sx={{ fontSize: \"15px\" }}>\r\n                          {(\r\n                            Number.parseFloat(subTotal) +\r\n                            rows?.reduce((total, item) => {\r\n                              const fee = Number.parseFloat(item?.center_fee ?? 0)\r\n                              const qty = Number.parseFloat(item?.quantity ?? 1)\r\n                              return total + fee * qty\r\n                            }, 0) *\r\n                            0.05\r\n                          ).toFixed(2)}\r\n                        </Typography>{\" \"}\r\n                        {/* This can be the same as Sub-total */}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell colSpan={10} align=\"right\">\r\n                        <Grid container gap={2} justifyContent={\"center\"}>\r\n                          <Button\r\n                            onClick={() => setPayButton(true)}\r\n                            disabled={rows?.length == 0}\r\n                            variant=\"contained\"\r\n                            sx={{\r\n                              textTransform: \"capitalize\",\r\n                              backgroundColor: \"#bd9b4a\",\r\n                              width: \"200px\",\r\n                              \":hover\": {\r\n                                backgroundColor: \"rgb(189 155 74)\",\r\n                              },\r\n                            }}\r\n                          >\r\n                            Pay\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => setPayButton(false)}\r\n                            variant=\"contained\"\r\n                            sx={{\r\n                              textTransform: \"capitalize\",\r\n                              backgroundColor: \"#bd9b4a\",\r\n                              width: \"200px\",\r\n                              \":hover\": {\r\n                                backgroundColor: \"rgb(189 155 74)\",\r\n                              },\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              {payButton && (\r\n                <Grid container mt={2} spacing={2}>\r\n                  <Grid item md={3} sm={12} xs={12}>\r\n                    <InputField\r\n                      label=\"Total Amount\"\r\n                      size=\"small\"\r\n                      disabled={true}\r\n                      placeholder=\"Total Amount\"\r\n                      register={register1(\"total\", {\r\n                        required: \"please enter total .\",\r\n                      })}\r\n                      error={errors1?.total?.message}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={3} sm={12} xs={12}>\r\n                    <InputField\r\n                      label=\"Paid Amount\"\r\n                      value={0}\r\n                      disabled={true}\r\n                      size=\"small\"\r\n                      placeholder=\"Enter amount\"\r\n\r\n                      register={register1(\"amount\", {\r\n                        required: false,\r\n\r\n                      })}\r\n                      error={errors1?.amount?.message || amountError}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={3} sm={12} xs={12}>\r\n                    <InputField\r\n                      label=\"Balance Amount\"\r\n                      size=\"small\"\r\n                      disabled={true}\r\n                      placeholder=\"Balance Amount\"\r\n                      register={register1(\"balance\", {\r\n                        required: \"please enter balance .\",\r\n                      })}\r\n                      error={errors1?.balance?.message}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={3} sm={12} xs={12}>\r\n                    <SelectField\r\n                      label=\"Payment Mode\"\r\n                      size=\"small\"\r\n                      options={[\r\n                        { id: \"Cash\", name: \"Cash\" },\r\n                        { id: \"Bank\", name: \"Bank\" },\r\n                        { id: \"Card\", name: \"Card\" },\r\n                        { id: \"Payment Link\", name: \"Payment Link\" },\r\n                      ]}\r\n                      selected={watch1(\"payment\")}\r\n                      onSelect={(value) => {\r\n                        setValue1(\"payment\", value)\r\n                        setSelectedMode(value)\r\n                      }}\r\n                      register={register1(\"payment\", {\r\n                        required: \"Please select payment mode\",\r\n                      })}\r\n                      error={errors1?.payment?.message}\r\n                    />\r\n                  </Grid>\r\n                  {selectedMode?.id == \"Bank\" && (\r\n                    <Grid item md={3} sm={12} xs={12}>\r\n                      <SelectField\r\n                        label=\"Banks\"\r\n                        size=\"small\"\r\n                        options={banks}\r\n                        selected={selectedBank}\r\n                        onSelect={(value) => {\r\n                          setSelectedBank(value)\r\n                        }}\r\n                        register={register1(\"bank\", {\r\n                          required: \"Please select a bank\",\r\n                        })}\r\n                        error={errors1?.bank?.message}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {selectedMode?.id == \"Card\" && (\r\n                    <Grid item md={3} sm={12} xs={12}>\r\n                      <SelectField\r\n                        label=\"Card\"\r\n                        size=\"small\"\r\n                        options={cards}\r\n                        selected={selectedCard}\r\n                        onSelect={(value) => {\r\n                          setSelectedCard(value)\r\n                        }}\r\n                        register={register1(\"card\", {\r\n                          required: \"Please select a card\",\r\n                        })}\r\n                        error={errors1?.card?.message}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {selectedMode?.id == \"Card\" && <Grid item md={3} sm={12} xs={12}>\r\n                    <InputField\r\n                      label=\"Authorization Code\"\r\n                      size=\"small\"\r\n                      placeholder=\"Authorization Code\"\r\n                      register={register1(\"remarks\", {\r\n                        required: \"Please enter code\",\r\n                      })}\r\n                      error={errors1?.remarks?.message}\r\n                    />\r\n                  </Grid>}\r\n                  <Grid item md={3} sm={12} xs={12}>\r\n                    <InputField\r\n                      label=\"Narration\"\r\n                      size=\"small\"\r\n                      placeholder=\"Narration\"\r\n                      register={register1(\"narration\")}\r\n                      error={errors1?.narration?.message}\r\n                    />\r\n                  </Grid>\r\n                  <Grid container justifyContent={\"flex-end\"} mt={2} pr={2}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={rows?.length == 0 || buttonDisabled}\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        textTransform: \"capitalize\",\r\n                        backgroundColor: \"#bd9b4a\",\r\n                        \":hover\": {\r\n                          backgroundColor: \"rgb(189 155 74)\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n          </>\r\n        }\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreatePaidReceipt\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["_errors1$date","_errors1$customer","_errors1$display_cust","_errors1$mobile","_errors1$email","_errors1$address","_errors1$total","_errors1$amount","_errors1$balance","_errors1$payment","_errors1$bank","_errors1$card","_errors1$remarks","_errors1$narration","useTheme","user","useAuth","navigate","useNavigate","formChange","setFormChange","useState","submit","setSubmit","excludeFromSales","setExcludeFromSales","excludeFromPurchase","setExcludeFromPurchase","total","setTotal","subTotal","setSubTotal","payButton","setPayButton","rows","setRows","buttonDisabled","setButtonDisabled","amountError","setAmountError","console","log","items","setItems","itemCode","itemDescription","totalCharge","mbNo","applicationId","register","handleSubmit","getValues","setValue","watch","reset","formState","errors","useForm","register1","handleSubmit1","setValue1","getValues1","control","watch1","errors1","defaultValues","amount","payment","bank","card","govtFee","centerFee","bankCharges","qty","paymentAmount","useEffect","finalTotal","Number","parseFloat","toFixed","guarantors","setGuarantors","activeStep","setActiveStep","React","progress","setProgress","uploadedSize","setUploadedSize","slipDetail","setSlipDetail","selectedDue","setSelectedDue","id","name","passport","setPassport","allocation","setAllocation","depositError","setDepositError","loading","setLoading","emailVerify","setEmailVerify","isUploading","setIsUploading","selectedBank","setSelectedBank","loader","setLoader","center","setCenter","status","setStatus","fieldsDisabled","setFieldsDisabled","stepFormData","setStepFormData","step1FormData","setStep1FormData","selectedType","setSelectedType","date","setDate","balanceType","setBalanceType","imageURL","setImageURL","hovered","setHovered","useRef","accounts","setAccounts","salesAccount","setSalesAccount","inventoryAccount","setInventoryAccount","cogsAccount","setCogsAccount","adjustmentAccount","setAdjustmentAccount","assemblyAccount","setAssemblyAccount","itemType","setItemType","unit","setUnit","taxes","setTaxes","tax","setTax","category","setCategory","categories","setCategories","governmentAccount","setGovernmnentAccount","description","setDescription","ownGovBank","setOwnGovBank","services","setServices","serviceItem","setServiceItem","selectedCustomer","setSelectedCustomer","detail","setDetail","banks","setBanks","holdState","setHoldState","selectedMode","setSelectedMode","cards","setCards","selectedCard","setSelectedCard","selectedCostCenter","setSelectedCostCenter","handleInputChange","index","field","value","updatedRows","async","params","page","limit","data","CustomerServices","getBanks","error","showErrorToast","_data$cards","getCards","map","account_name","_data$accounts2","_data$accounts3","FinanceServices","getAccounts","ErrorToaster","_data$accounts4","getTax","getCategoryList","getCategories","getServiceItem","Date","_jsxs","_Fragment","children","_jsx","Box","sx","width","m","backgroundColor","borderRadius","component","onSubmit","formData","_detail$sale_receipt_","_detail$sale_receipt_2","_detail$sale_receipt_3","_detail$sale_receipt_4","_detail$sale_receipt_5","obj","total_amount","paid_amount","payment_status","payment_mode","account_id","ref_id","remarks","narration","charges","sale_receipt_items","reduce","acc","item","center_fee","govt_charges","govt_fee","bank_charges","bank_charge","bank_name","bank_id","customer_id","invoice_prefix","category_id","service","is_paid","promise","PayReceipt","response","showPromiseToast","responseCode","display","justifyContent","gap","p","alignItems","Typography","fontSize","fontWeight","Grid","container","xs","DatePicker","label","size","disabled","message","onChange","md","sm","mt","InputField","placeholder","InputProps","endAdornment","IconButton","onClick","token_number","state","invoice_number","getReceiptDetail","_data$receipt","_data$receipt2","_data$receipt3","_data$receipt4","_data$receipt5","_data$receipt6","_data$receipt7","_data$receipt8","_data$receipt9","_data$receipt10","_data$receipt11","_data$receipt12","_data$receipt13","_data$receipt14","_data$receipt15","_data$receipt16","_data$receipt17","_data$receipt17$sale_","_data$receipt18","_data$receipt19","_data$receipt19$sale_","_data$receipt20","_data$receipt21","_data$receipt22","_data$receipt23","_data$accounts","receipt","customer_name","moment","toDate","invoice_date","customer_mobile","ref","customer_email","customer_address","trn","cost_center","case_no","_item$center_fee","_item$quantity","fee","quantity","_item$center_fee2","_item$quantity2","getReceptionDetail","SearchIcon","color","_data$receipt24","_data$receipt25","_data$receipt26","_data$receipt27","_data$receipt28","_data$receipt29","_data$receipt30","_data$receipt31","_data$receipt32","_data$receipt33","_data$receipt34","_data$receipt35","_data$receipt36","_data$receipt37","_data$receipt38","_data$receipt39","_data$receipt40","_data$receipt41","_data$receipt41$sale_","_data$receipt42","_data$receipt43","_data$receipt43$sale_","_data$receipt44","_data$receipt45","_data$receipt46","_data$receipt47","_data$accounts5","address","_item$center_fee3","_item$quantity3","_item$center_fee4","_item$quantity4","PrimaryButton","bgcolor","title","border","SelectField","options","selected","onSelect","customer","display_customer","pattern","mobile","email","required","multiline","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","_item$service","TextField","type","transaction_id","e","target","application_id","ref_no","colSpan","align","variant","_item$center_fee5","_item$quantity5","parseInt","_item$center_fee6","_item$quantity6","_item$center_fee7","_item$quantity7","Button","length","textTransform","spacing","balance","pr","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}