{"version":3,"file":"static/js/2511.6755c8f2.chunk.js","mappings":"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","sources":["pages/Dashboard/Commission/CommissionList.js"],"sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, tableCellClasses, IconButton, CircularProgress, Chip, Grid, InputLabel,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    ListItemText,\r\n    Tooltip,\r\n    Checkbox,\r\n    InputAdornment,\r\n} from '@mui/material';\r\nimport { AllocateIcon, CheckIcon, EyeIcon, FontFamily, Images, MessageIcon, PendingIcon, RequestBuyerIdIcon } from 'assets';\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Colors from 'assets/Style/Colors';\r\nimport { CircleLoading } from 'components/Loaders';\r\nimport { ErrorToaster, SuccessToaster } from 'components/Toaster';\r\nimport FinanceStatusDialog from 'components/Dialog/FinanceStatusDialog';\r\nimport AllocateStatusDialog from 'components/Dialog/AllocateStatusDialog';\r\nimport AllocateDialog from 'components/Dialog/AllocateDialog';\r\nimport CustomerServices from 'services/Customer';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Pagination from 'components/Pagination';\r\nimport { Debounce, encryptData, formatPermissionData, handleExportWithComponent } from 'utils';\r\nimport InputField from 'components/Input';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPermission } from 'redux/slices/navigationDataSlice';\r\nimport SimpleDialog from 'components/Dialog/SimpleDialog';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport SelectField from 'components/Select';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { PDFExport } from '@progress/kendo-react-pdf';\r\nimport moment from 'moment';\r\nimport CommissionServices from 'services/Commission';\r\nimport LabelCustomInput from 'components/Input/LabelCustomInput';\r\nimport { showErrorToast } from 'components/NewToaster';\r\nimport { adjustSectionValue } from '@mui/x-date-pickers/internals/hooks/useField/useField.utils';\r\n\r\n// *For Table Style\r\nconst Row = styled(TableRow)(({ theme }) => ({\r\n    border: 0,\r\n\r\n}));\r\n\r\nconst Cell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        fontSize: 14,\r\n        fontFamily: 'Public Sans',\r\n        border: '1px solid #EEEEEE',\r\n        padding: '15px',\r\n        textAlign: 'left',\r\n        whiteSpace: 'nowrap',\r\n        color: '#434343',\r\n        paddingRight: '50px',\r\n        background: 'transparent',\r\n        fontWeight: 'bold'\r\n\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n        fontFamily: 'Public Sans',\r\n\r\n        textWrap: 'nowrap',\r\n        padding: '5px !important',\r\n        paddingLeft: '15px !important',\r\n        '.MuiBox-root': {\r\n            display: 'flex',\r\n            gap: '6px',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            '.MuiBox-root': {\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        'svg': {\r\n            width: 'auto',\r\n            height: '24px',\r\n        },\r\n        '.MuiTypography-root': {\r\n            textTransform: 'capitalize',\r\n            fontFamily: FontFamily.NunitoRegular,\r\n            textWrap: 'nowrap',\r\n        },\r\n        '.MuiButtonBase-root': {\r\n            padding: '8px',\r\n            width: '28px',\r\n            height: '28px',\r\n        }\r\n    },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n    loaderWrap: {\r\n        display: 'flex',\r\n        height: 100,\r\n        '& svg': {\r\n            width: '40px !important',\r\n            height: '40px !important'\r\n        }\r\n    }\r\n})\r\n\r\nfunction CommissionList() {\r\n    const { register, handleSubmit, getValues, setValue,formState: { errors } } = useForm();\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const contentRef = useRef(null);\r\n    \r\n\r\n    const tableHead = [{ name: 'SR No.', key: '' }, { name: 'Agent Name ', key: 'name' }, { name: 'Date Added', key: 'created_at' }, { name: 'Commission on Visa', key: 'commission_visa' }, { name: 'Commission on Monthly Revenue', key: 'commission_monthly' }, { name: 'Allocated Customers', key: 'customerCount' }, { name: 'Actions', key: '' }]\r\n\r\n\r\n\r\n    \r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [sort, setSort] = useState('asc')\r\n    \r\n\r\n    // *For Customer Queue\r\n    const [customerQueue, setCustomerQueue] = useState([]);\r\n\r\n\r\n\r\n    // *For setPermissions\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [pageLimit, setPageLimit] = useState(50);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const [itemAmount, setItemAmount] = useState()\r\n\r\n    // *For Filters\r\n    const [filters, setFilters] = useState({});\r\n\r\n    // *For Permissions\r\n    const [permissions, setPermissions] = useState();\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // *For Get Customer Queue\r\n    const getAgentList = async (page, limit, filter) => {\r\n        // setLoader(true)\r\n        try {\r\n            const Page = page ? page : currentPage\r\n            const Limit = limit ? limit : pageLimit\r\n            const Filter = filter ?  { ...filters, ...filter } : null;\r\n            setCurrentPage(Page)\r\n            setPageLimit(Limit)\r\n            setFilters(Filter)\r\n            let params = {\r\n                page: Page,\r\n                limit: Limit,\r\n            }\r\n            params = { ...params, ...Filter }\r\n\r\n            const { data } = await CommissionServices.getAgents(params)\r\n            setCustomerQueue(data?.rows)\r\n            setTotalCount(data?.count)\r\n            setPermissions(formatPermissionData(data?.permissions))\r\n            setPermissions(formatPermissionData(data?.permissions))\r\n            data?.permissions.forEach(e => {\r\n              if (e?.route && e?.identifier && e?.permitted) {\r\n                dispatch(addPermission(e?.route));\r\n              }\r\n            })\r\n\r\n        } catch (error) {\r\n            showErrorToast(error)\r\n        } finally {\r\n            // setLoader(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // *For Handle Filter\r\n    const handleFilter = () => {\r\n        let data={\r\n            search:getValues('search')\r\n        }\r\n        Debounce(() => getAgentList(1, '', data));\r\n    }\r\n\r\n    const handleSort = (key) => {\r\n        let data = {\r\n            sort_by: key,\r\n            sort_order: sort\r\n        }\r\n        Debounce(() => getAgentList(1, '', data));\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getAgentList()\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ p: 3 }}>\r\n\r\n\r\n\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                <Typography sx={{ fontSize: '24px', fontWeight: 'bold' }}>Commission Management</Typography>\r\n                {permissions?.create && <PrimaryButton\r\n                   bgcolor={'#bd9b4a'}\r\n                    title=\"Create Agent\"\r\n                    onClick={() =>{ navigate('/create-agent'); localStorage.setItem(\"currentUrl\", '/create-agent')}}\r\n                    loading={loading}\r\n                />}\r\n\r\n\r\n            </Box>\r\n\r\n            {/* Filters */}\r\n            <Box >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6} >\r\n                        <LabelCustomInput type={'text'} bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'Search'} placeholder={'Search'}   register={register(\"search\")} />\r\n                    </Grid>\r\n                    {/* <Grid item xs={3} >\r\n                        <LabelCustomInput type={'text'} bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'By Customers'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <LabelCustomInput bgcolor={'#FAFAFA'} color={Colors.primary} border={'3px solid #FAFAFA'} StartLabel={'By Commission'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid>\r\n                    <Grid item xs={3} >\r\n                        <LabelCustomInput bgcolor={'#FAFAFA'} color={Colors.primary} border={'2px solid #FAFAFA'} StartLabel={'By Date'} placeholder={'Enter Name'}   register={register(\"payroll\")} />\r\n                    </Grid> */}\r\n                    <Grid item xs={6} display={'flex'} justifyContent={'flex-end'} gap={2} >\r\n                    <PrimaryButton\r\n                    bgcolor={\"#0076bf\"}\r\n                    textcolor={Colors.white}\r\n                    // border={`1px solid ${Colors.primary}`}\r\n                    title=\"Reset\"\r\n                    onClick={() => { ;setValue('search','');getAgentList(1,'',null)}}\r\n                    loading={loading}\r\n                />\r\n                    <PrimaryButton\r\n                   bgcolor={'#bd9b4a'}\r\n                    title=\"Search\"\r\n                    onClick={() => handleFilter()}\r\n                    loading={loading}\r\n                />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item md={11}>\r\n                    {customerQueue && <Box>\r\n\r\n                        <Grid container mb={2} >\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        {(\r\n                            customerQueue && (\r\n                                <Fragment>\r\n                                    <PDFExport ref={contentRef} landscape={true} paperSize=\"A4\" margin={5} fileName='Import Customers' >\r\n\r\n                                        <TableContainer\r\n                                            component={Paper}\r\n                                            sx={{\r\n                                                maxHeight: 'calc(100vh - 200px)', mt: 5, backgroundColor: 'transparent', boxShadow: 'none !important', borderRadius: '0px !important'\r\n\r\n                                            }}\r\n\r\n                                        >\r\n                                            <Table stickyHeader sx={{ minWidth: 500 }}>\r\n                                                <TableHead>\r\n\r\n                                                    <Row>\r\n                                                        {tableHead.map((cell, index) => (\r\n                                                            <Cell style={{ textAlign: cell?.name == 'SR No.' ? 'center' : 'left', paddingRight: cell?.name == 'SR No.' ? '15px' : '50px' }} className=\"pdf-table\"\r\n                                                                key={index}\r\n\r\n                                                            >\r\n                                                                <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                                                                    {cell?.name} {cell?.name != 'SR No.' && cell?.name != 'Actions' && <>&nbsp;<span style={{ height: '20px', cursor: 'pointer' }}><Box component={'img'} onClick={() => { setSort(sort == 'asc' ? 'desc' : 'asc'); handleSort(cell?.key) }} src={Images.sortIcon} width={'18px'}></Box></span></>}\r\n                                                                </Box>\r\n                                                            </Cell>\r\n                                                        ))}\r\n                                                    </Row>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {customerQueue.map((item, index) => {\r\n\r\n                                                        return (\r\n                                                            <Row\r\n                                                                key={index}\r\n                                                                sx={{\r\n                                                                    border: '1px solid #EEEEEE !important',\r\n                                                                }}\r\n                                                            >\r\n\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {item?.id}\r\n                                                                </Cell>\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {item?.name}\r\n                                                                </Cell>\r\n                                                               \r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {moment(item?.created_at).format(\"MM-DD-YYYY\")}\r\n                                                                </Cell>\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {item?.commission_visa}\r\n                                                                </Cell>\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {item?.commission_monthly ?? \"-\"}\r\n                                                                </Cell>\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    {item?.customerCount ?? \"-\"}\r\n\r\n                                                                    {/* {item?.name ?? \"-\"} */}\r\n                                                                </Cell>\r\n\r\n                                                                <Cell style={{ textAlign: 'left' }} className=\"pdf-table\">\r\n                                                                    <Box>\r\n                                                                        {permissions?.details && <Box component={'img'} src={Images.detailIcon} onClick={()=> {navigate(`/agent-detail/${item?.id}`); localStorage.setItem(\"currentUrl\", '/agent-detail')}} width={'35px'}></Box>}\r\n                                                                        {permissions?.edit && <Box component={'img'} sx={{cursor:\"pointer\"}} onClick={()=> {navigate(`/update-agent/${item?.id}`); localStorage.setItem(\"currentUrl\", '/update-agent')}} src={Images.editIcon} width={'35px'}></Box>}\r\n                                                                        {/* <Box component={'img'} src={Images.deleteIcon} width={'35px'}></Box> */}\r\n                                                                    </Box>\r\n                                                                </Cell>\r\n\r\n\r\n\r\n                                                            </Row>\r\n\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                    </PDFExport>\r\n                                    {/* ========== Pagination ========== */}\r\n                                    <Pagination\r\n                                        currentPage={currentPage}\r\n                                        pageSize={pageLimit}\r\n                                        onPageSizeChange={(size) => getAgentList(1, size.target.value,filters)}\r\n                                        tableCount={customerQueue?.length}\r\n                                        totalCount={totalCount}\r\n                                        onPageChange={(page) => getAgentList(page, \"\",filters)}\r\n                                    />\r\n\r\n                                </Fragment>\r\n                            )\r\n                        )}\r\n\r\n\r\n                        {loader && <CircleLoading />}\r\n\r\n\r\n                    </Box>}\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n            </Box>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default CommissionList;"],"names":["Row","styled","TableRow","_ref","theme","border","Cell","TableCell","_ref2","tableCellClasses","head","fontSize","fontFamily","padding","textAlign","whiteSpace","color","paddingRight","background","fontWeight","body","textWrap","paddingLeft","display","gap","alignItems","justifyContent","cursor","width","height","textTransform","FontFamily","NunitoRegular","useStyles","makeStyles","loaderWrap","register","handleSubmit","getValues","setValue","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","contentRef","useRef","loader","setLoader","useState","sort","setSort","customerQueue","setCustomerQueue","totalCount","setTotalCount","pageLimit","setPageLimit","currentPage","setCurrentPage","itemAmount","setItemAmount","filters","setFilters","permissions","setPermissions","loading","setLoading","getAgentList","async","page","limit","filter","Page","Limit","Filter","params","data","CommissionServices","getAgents","rows","count","formatPermissionData","forEach","e","route","identifier","permitted","addPermission","error","showErrorToast","useEffect","_jsxs","Box","sx","p","children","mb","_jsx","Typography","create","PrimaryButton","bgcolor","title","onClick","localStorage","setItem","Grid","container","spacing","item","xs","LabelCustomInput","type","Colors","primary","StartLabel","placeholder","textcolor","white","handleFilter","search","Debounce","md","Fragment","PDFExport","ref","landscape","paperSize","margin","fileName","TableContainer","component","Paper","maxHeight","mt","backgroundColor","boxShadow","borderRadius","Table","stickyHeader","minWidth","TableHead","name","key","map","cell","index","style","className","_Fragment","sort_by","sort_order","handleSort","src","Images","sortIcon","TableBody","_item$commission_mont","_item$customerCount","id","moment","created_at","format","commission_visa","commission_monthly","customerCount","details","detailIcon","edit","editIcon","Pagination","pageSize","onPageSizeChange","size","target","value","tableCount","length","onPageChange","CircleLoading"],"sourceRoot":""}