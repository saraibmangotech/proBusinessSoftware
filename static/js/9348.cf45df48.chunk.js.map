{"version":3,"file":"static/js/9348.cf45df48.chunk.js","mappings":"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","sources":["components/Dialog/ThankyouDialog.js","pages/Auth/Login/index.js"],"sourcesContent":["import { CancelOutlined } from '@mui/icons-material';\r\nimport { Box, Dialog, IconButton, Typography } from '@mui/material';\r\nimport { FontFamily, Timer } from 'assets';\r\nimport Colors from 'assets/Style/Colors';\r\n\r\nfunction ThankyouDialog({ open, onClose, message1, message2 }) {\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      sx={{ '& .MuiDialog-paper': { width: '25%', height: \"auto\", borderRadius: 2, py: { xs: 2, md: 4 }, px: { xs: 3, md: 6 } } }}\r\n    >\r\n      <IconButton onClick={() => onClose()} sx={{ position: 'absolute', right: 13, top: 13 }}>\r\n        <CancelOutlined />\r\n      </IconButton>\r\n      <Box sx={{ textAlign: 'center' }}>\r\n        <Timer />\r\n        <Typography variant=\"h3\" sx={{ color: Colors.charcoalGrey, fontFamily: FontFamily.NunitoRegular, mt: 1, mb: 1.5 }}>\r\n          {message1}\r\n        </Typography>\r\n        <Typography variant=\"h6\" sx={{ color: Colors.smokeyGrey, fontFamily: FontFamily.NunitoRegular }}>\r\n          {message2}\r\n        </Typography>\r\n      </Box>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ThankyouDialog","import React, { useCallback, useState } from 'react';\r\nimport { Box, Grid, IconButton, InputAdornment, Typography, Checkbox } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Colors from 'assets/Style/Colors';\r\nimport { Images } from 'assets';\r\nimport { useAuth } from 'context/UseContext';\r\nimport { PrimaryButton } from 'components/Buttons';\r\nimport InputField from 'components/Input';\r\nimport { addChildRoutes, emailRegex, getPermissionsRoutes } from 'utils/index';\r\nimport AuthServices from 'services/Auth';\r\nimport Storage from 'utils/Storage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNavigation } from 'redux/slices/navigationDataSlice';\r\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\r\nimport { ErrorToaster, SuccessToaster } from 'components/Toaster';\r\nimport SystemServices from 'services/System';\r\nimport ThankyouDialog from 'components/Dialog/ThankyouDialog';\r\nimport { Fragment } from 'react';\r\nimport { encryptData } from 'utils/index';\r\nimport { useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst useStyle = makeStyles({\r\n  wrapper: {\r\n    borderRadius: '16px',\r\n    boxShadow: ' 0px 8px 32px 0px #00000040',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '900px',\r\n    margin: '60px auto'\r\n  },\r\n  box: {\r\n    background: 'linear-gradient(to bottom, #0c6135, #147836, #268e32, #3fa528, #5bbc0f)',\r\n    borderTopLeftRadius: '16px',\r\n    borderBottomLeftRadius: '16px',\r\n  },\r\n  otpBox: {\r\n    paddingLeft: 30,\r\n    paddingRight: 30,\r\n    borderTopRightRadius: '16px',\r\n    borderBottomRightRadius: '16px',\r\n  },\r\n})\r\n\r\nfunction Login() {\r\n\r\n  const classes = useStyle();\r\n  const { userLogin } = useAuth();\r\n  const { setStorageItem } = Storage();\r\n  const dispatch = useDispatch();\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n  const [permission, setPermission] = useState(false)\r\n\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [inputError, setInputError] = useState(false);\r\n\r\n  // *For Dialog Box\r\n  const [thankyouDialog, setThankyouDialog] = useState(false);\r\n\r\n  // *Create an event handler so you can call the verification on button click event or form submit\r\n  const handleReCaptchaVerify = useCallback(async () => {\r\n    if (!executeRecaptcha) {\r\n      console.log('Execute reCaptcha not yet available');\r\n      return false\r\n    }\r\n\r\n    const token = await executeRecaptcha('login');\r\n    let obj = {\r\n      token: token\r\n    }\r\n    const { data } = await SystemServices.reCaptchaVerify(obj)\r\n    if (data?.success) {\r\n      return data?.success\r\n    } else {\r\n      ErrorToaster('Captcha verification failed!')\r\n    }\r\n\r\n  }, [executeRecaptcha]);\r\n\r\n  const getPermission = () => {\r\n    Notification.requestPermission().then((permission) => {\r\n      if (permission === 'granted') {\r\n        console.log('Notification permission granted.');\r\n        localStorage.setItem('Permission', true)\r\n        setPermission(true)\r\n      }\r\n      else {\r\n        localStorage.setItem('Permission', false)\r\n        setPermission(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  // *For getWebTokens\r\n  const getWebTokens = async () => {\r\n\r\n\r\n    try {\r\n\r\n\r\n      const { data } = await SystemServices.getWebTokens();\r\n\r\n\r\n\r\n      localStorage.setItem('financeToken', data?.financeToken)\r\n      localStorage.setItem('vccToken', data?.vccToken)\r\n      localStorage.setItem('operationsToken', data?.operationsToken)\r\n      localStorage.setItem('searchToken', data?.searchToken)\r\n\r\n\r\n    } catch (error) {\r\n      ErrorToaster(error);\r\n    }\r\n  };\r\n\r\n\r\n  // *For Get Session ID\r\n  const generateSessionId = async () => {\r\n    try {\r\n      const { data } = await SystemServices.generateSessionID()\r\n      setStorageItem('sessionId', data.sessionid)\r\n      const savedSecSession = Cookies.get('secsession');\r\n      Cookies.set('testCookie', savedSecSession);\r\n    } catch (error) {\r\n      ErrorToaster(error)\r\n    }\r\n  }\r\n\r\n  // *For Login\r\n  const login = async (formData) => {\r\n    setLoading(true);\r\n    try {\r\n      let obj = {\r\n        email: formData.email,\r\n        password: encryptData(formData.password),\r\n        fcm_token: localStorage.getItem('fcmToken')\r\n      }\r\n      if (localStorage.getItem('Permission') == 'true') {\r\n        const response = await handleReCaptchaVerify()\r\n        if (response) {\r\n          const result = await AuthServices.login(obj)\r\n          \r\n          if (result?.responseCode === 200) {\r\n            getWebTokens()\r\n          }\r\n          if (result?.responseCode === 206) {\r\n            SuccessToaster(result?.message)\r\n\r\n            const otpField = {\r\n              emailField: result?.data?.email,\r\n              phoneField: result?.data?.phone,\r\n            }\r\n            navigate('/verify-otp', { state: { ...obj, screen: 'login', ...otpField } })\r\n          } else {\r\n            if (result?.data?.password_change) {\r\n              navigate('/new-password', { state: { token: 'abcd' } })\r\n              return\r\n            }\r\n            if (result?.data?.customer_type === 'export') {\r\n              setThankyouDialog(true)\r\n            } else {\r\n              let obj = result?.data\r\n              obj.token = encryptData('noToken')\r\n              obj.fcm_token = localStorage.getItem('fcmToken')\r\n\r\n              userLogin(obj)\r\n\r\n              setStorageItem('journey', result?.data?.journey)\r\n              dispatch(addNavigation(addChildRoutes(result?.data?.modules)))\r\n              dispatch(setPermission(getPermissionsRoutes(result?.data?.modules)))\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        Notification.requestPermission().then((permission) => {\r\n          if (permission === 'granted') {\r\n            // Save the permission in localStorage\r\n            localStorage.setItem('Permission', true);\r\n\r\n            // Notifications are allowed, proceed with showing notifications\r\n\r\n          }\r\n          else {\r\n            localStorage.setItem('Permission', false);\r\n          }\r\n        });\r\n        ErrorToaster('Please Enable Notifications Permission')\r\n      }\r\n    } catch (error) {\r\n      setInputError(true)\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPermission()\r\n    generateSessionId()\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box >\r\n        {/* ========== Thank You Dialog  ========== */}\r\n        <ThankyouDialog\r\n          open={thankyouDialog}\r\n          onClose={() => { setThankyouDialog(false); navigate('/') }}\r\n          message1={'Thank you'}\r\n          message2={'Please proceed with Galaxy Customer Service to start the export procedure.'}\r\n        />\r\n\r\n        <Box className={classes.wrapper}>\r\n          <Box className={classes.box} sx={{ py: 7, px: 5 }}>\r\n            <Box\r\n              component={'img'}\r\n              src={Images.loginBanner}\r\n              sx={{ height: '280px' }}\r\n            />\r\n            <Box sx={{ textAlign: 'center', mt: 3, mb: 2 }}>\r\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                If you’re a Galaxy Customer, Download App from\r\n              </Typography>\r\n              <Link\r\n                to=\"https://play.google.com/store/apps/details?id=com.galaxyworldwideshipping&pcampaignid=web_share\"\r\n                aria-label=\"play store\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  loading=\"lazy\"\r\n                  src={Images.googlePlay}\r\n                  alt={\"play store\"}\r\n                  sx={{ width: \"130px\", mr: 1 }}\r\n                />\r\n              </Link>\r\n              <Link\r\n                to=\"https://apps.apple.com/gb/app/gww-shipping/id1592809842\"\r\n                aria-label=\"app store\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  loading=\"lazy\"\r\n                  src={Images.appStore}\r\n                  alt={\"app store\"}\r\n                  sx={{ width: \"130px\" }}\r\n                />\r\n              </Link>\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.otpBox} >\r\n            <Typography variant=\"h4\" sx={{ color: Colors.primary, textAlign: 'center' }}>\r\n              Employee Login Portal\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(login)} sx={{ mt: 2 }}>\r\n              <Grid container spacing={1} alignItems={\"center\"}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <InputField\r\n                    size={\"small\"}\r\n                    label={'Email/Employee ID'}\r\n                    type={'text'}\r\n                    placeholder={'Email/Employee ID'}\r\n                    error={errors?.email?.message || inputError}\r\n                    register={register(\"email\", {\r\n                      required: 'Please enter your email/employee id.',\r\n                    \r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <InputField\r\n                    size={\"small\"}\r\n                    label={'Password'}\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder={'Password'}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton edge=\"end\" onClick={() => setShowPassword(!showPassword)}                            >\r\n                            {showPassword ? <Visibility color=\"primary\" /> : <VisibilityOff color=\"primary\" />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    error={errors?.password?.message ? errors?.password?.message : inputError && 'You have entered an invalid email or password.'}\r\n                    register={register(\"password\", {\r\n                      required: 'Please enter the password.',\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} sm={6}  sx={{ textAlign: 'left' }}>\r\n                  <Checkbox />\r\n                  <Typography\r\n                    component={\"span\"}\r\n                    variant=\"body2\"\r\n                    sx={{ color: Colors.black }}\r\n                  >\r\n                    Remember me\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} sx={{ textAlign: 'right' }}>\r\n                  <Typography component={Link} to=\"/forget-password\" variant=\"body2\" sx={{ color: Colors.black }}>\r\n                    Forget Password?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} sx={{ mt: 2, textAlign: 'center' }}>\r\n                  <PrimaryButton\r\n                    fullWidth\r\n                    title=\"Sign In\"\r\n                    type='submit'\r\n                    loading={loading}\r\n                  />\r\n                  <Typography variant=\"body2\" sx={{ mt: 2, color: Colors.black + '99' }}>\r\n                    Don't have an account?&nbsp;\r\n                    <Typography component={'span'} variant=\"body2\" onClick={() => navigate('/register')} sx={{ color: Colors.black, textDecoration: 'underline', cursor: 'pointer' }}>\r\n                      Sign Up\r\n                    </Typography>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Login;"],"names":["_ref","open","onClose","message1","message2","_jsxs","Dialog","sx","width","height","borderRadius","py","xs","md","px","children","_jsx","IconButton","onClick","position","right","top","CancelOutlined","Box","textAlign","Timer","Typography","variant","color","Colors","charcoalGrey","fontFamily","FontFamily","NunitoRegular","mt","mb","smokeyGrey","useStyle","makeStyles","wrapper","boxShadow","display","alignItems","margin","box","background","borderTopLeftRadius","borderBottomLeftRadius","otpBox","paddingLeft","paddingRight","borderTopRightRadius","borderBottomRightRadius","_errors$email","_errors$password","_errors$password2","classes","userLogin","useAuth","setStorageItem","Storage","dispatch","useDispatch","executeRecaptcha","useGoogleReCaptcha","permission","setPermission","useState","navigate","useNavigate","register","handleSubmit","formState","errors","useForm","loading","setLoading","showPassword","setShowPassword","inputError","setInputError","thankyouDialog","setThankyouDialog","handleReCaptchaVerify","useCallback","async","console","log","obj","token","data","SystemServices","reCaptchaVerify","success","ErrorToaster","useEffect","Notification","requestPermission","then","localStorage","setItem","generateSessionID","sessionid","savedSecSession","Cookies","get","set","error","generateSessionId","Fragment","ThankyouDialog","className","component","src","Images","loginBanner","Link","to","target","rel","googlePlay","alt","mr","appStore","primary","onSubmit","email","formData","password","encryptData","fcm_token","getItem","result","AuthServices","login","responseCode","getWebTokens","financeToken","vccToken","operationsToken","searchToken","_result$data","_result$data2","SuccessToaster","message","otpField","emailField","phoneField","phone","state","screen","_result$data3","_result$data4","password_change","customer_type","_result$data5","_result$data6","_result$data7","journey","addNavigation","addChildRoutes","modules","getPermissionsRoutes","Grid","container","spacing","item","sm","InputField","size","label","type","placeholder","required","InputProps","endAdornment","InputAdornment","edge","Visibility","VisibilityOff","Checkbox","black","PrimaryButton","fullWidth","title","textDecoration","cursor"],"sourceRoot":""}