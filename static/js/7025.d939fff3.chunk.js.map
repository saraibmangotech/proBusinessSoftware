{"version":3,"file":"static/js/7025.d939fff3.chunk.js","mappings":"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","sources":["pages/Dashboard/RoleManagement/UpdateRole.js","services/Role/routes.js","services/Role/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { PrimaryButton } from \"components/Buttons\";\r\nimport Colors from \"assets/Style/Colors\";\r\nimport { FontFamily } from \"assets\";\r\nimport { ErrorToaster, SuccessToaster } from \"components/Toaster\";\r\nimport InputField from \"components/Input\";\r\nimport RoleServices from \"services/Role\";\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\";\r\nimport SystemServices from \"services/System\";\r\n\r\nfunction UpdateRole() {\r\n\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation()\r\n  console.log(state);\r\n  const { register, handleSubmit,setValue, formState: { errors }, control } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // *For Create Role\r\n  const UpdateRole = async (formData) => {\r\n    setLoading(true)\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        name: formData?.roleName,\r\n        role_id:state?.id\r\n      }\r\n\r\n\r\n      console.log(obj);\r\n      const promise = SystemServices.UpdateRole(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving ...',\r\n        'Success',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        navigate('/role-list')\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setValue('roleName',state?.name)\r\n   \r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <Box sx={{ p: 2, borderRadius: 3, }}>\r\n\r\n      <Box component=\"form\" onSubmit={handleSubmit(UpdateRole)} >\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n          <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >CREATE ROLE</Typography>\r\n          <Box sx={{ display: 'flex', gap: '10px' }}>\r\n            <PrimaryButton\r\n             bgcolor={'#bd9b4a'}\r\n              title=\"Update\"\r\n              type={'submit'}\r\n\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n        <Grid container spacing={0} p={3} >\r\n\r\n          <Grid container spacing={1} item xs={12} sm={6}>\r\n\r\n            <InputField\r\n              label={\"Role Name :*\"}\r\n              size={'small'}\r\n              placeholder={\"Role Name\"}\r\n              error={errors?.roleName?.message}\r\n              register={register(\"roleName\", {\r\n                required:\r\n                  \"Please enter your role name.\"\r\n\r\n              })}\r\n            />\r\n\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UpdateRole;","const routes = {\r\n  createRole: 'roles/add',\r\n  getRoles: 'roles',\r\n  updateRole: 'roles/update',\r\n  deleteRole: 'roles/delete',\r\n  getRolesPermissions: 'permissions',\r\n  updateRolesPermissions: 'permissions/update',\r\n  getSubRolesPermissions:'permissions/subUser'\r\n};\r\n\r\nexport default routes","import { post, get, patch, deleted } from 'services';\r\nimport routes from './routes';\r\n\r\nconst RoleServices = {\r\n  createRole: async (obj) => {\r\n    const data = await post(routes.createRole, obj);\r\n    return data;\r\n  },\r\n  getRoles: async (params) => {\r\n    const data = await get(routes.getRoles, params);\r\n    return data;\r\n  },\r\n  updateRole: async (obj) => {\r\n    const data = await patch(routes.updateRole, obj);\r\n    return data;\r\n  },\r\n  deleteRole: async (params) => {\r\n    const data = await deleted(routes.deleteRole, params);\r\n    return data;\r\n  },\r\n  getRolesPermissions: async (params) => {\r\n    const data = await get(routes.getRolesPermissions, params);\r\n    return data;\r\n  },\r\n  getSubRolesPermissions: async (params) => {\r\n    const data = await get(routes.getSubRolesPermissions, params);\r\n    return data;\r\n  },\r\n  updateRolesPermissions: async (obj) => {\r\n    const data = await post(routes.updateRolesPermissions, obj);\r\n    return data;\r\n  },\r\n}\r\n\r\nexport default RoleServices"],"names":["_errors$roleName","navigate","useNavigate","state","useLocation","console","log","register","handleSubmit","setValue","formState","errors","control","useForm","loading","setLoading","useState","useEffect","name","_jsx","Box","sx","p","borderRadius","children","_jsxs","component","onSubmit","async","formData","obj","roleName","role_id","id","promise","SystemServices","UpdateRole","showPromiseToast","response","responseCode","error","showErrorToast","display","justifyContent","gap","alignItems","Typography","fontSize","fontWeight","PrimaryButton","bgcolor","title","type","Grid","container","spacing","item","xs","sm","InputField","label","size","placeholder","message","required","createRole","getRoles","updateRole","deleteRole","getRolesPermissions","updateRolesPermissions","getSubRolesPermissions","post","routes","get","params","patch","deleted"],"sourceRoot":""}