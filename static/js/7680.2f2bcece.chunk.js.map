{"version":3,"file":"static/js/7680.2f2bcece.chunk.js","mappings":"iSA6FA,QAjFA,WAAuB,IAADA,EAEpB,MAAMC,GAAWC,EAAAA,EAAAA,OAEX,SAAEC,EAAQ,aAAEC,EAAcC,WAAW,OAAEC,GAAQ,QAAEC,IAAYC,EAAAA,EAAAA,OAC5DC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAkCvC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,EAAGC,aAAc,GAAIC,UAEjCC,EAAAA,EAAAA,MAACL,EAAAA,EAAG,CAACM,UAAU,OAAOC,SAAUhB,GAlCjBiB,UACjBX,GAAW,GACXY,QAAQC,IAAIC,GACZ,IACE,IAAIC,EAAM,CACRC,KAAc,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUG,UAIlBL,QAAQC,IAAIE,GACN,MAAMG,EAAUC,EAAAA,EAAaC,WAAWL,IAExCM,EAAAA,EAAAA,IACIH,EACA,aACA,UACA,wBAEJ,MAAMI,QAAiBJ,EACQ,OAAnB,OAARI,QAAQ,IAARA,OAAQ,EAARA,EAAUC,eACVhC,EAAS,aAIrB,CAAE,MAAOiC,IACPC,EAAAA,EAAAA,IAAeD,EACjB,CAAC,QACCxB,GAAW,EACb,KAM2DO,SAAA,EACvDC,EAAAA,EAAAA,MAACL,EAAAA,EAAG,CAACC,GAAI,CAAEsB,QAAS,OAAQC,eAAgB,gBAAiBC,IAAK,OAAQC,WAAY,YAAatB,SAAA,EACjGL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAAC1B,GAAI,CAAE2B,SAAU,OAAQC,WAAY,QAASzB,SAAE,iBAC3DL,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEsB,QAAS,OAAQE,IAAK,QAASrB,UACxCL,EAAAA,EAAAA,KAAC+B,EAAAA,GAAa,CACbC,QAAS,UACRC,MAAM,SACNC,KAAM,iBAOZlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGlC,EAAG,EAAEE,UAE/BL,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnC,UAE7CL,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CACTC,MAAO,eACPC,KAAM,QACNC,YAAa,YACbtB,MAAa,OAAN5B,QAAM,IAANA,GAAgB,QAAVN,EAANM,EAAQqB,gBAAQ,IAAA3B,OAAV,EAANA,EAAkByD,QACzBtD,SAAUA,EAAS,WAAY,CAC7BuD,SACE,2CAYlB,C,kDC3FA,MAUA,EAVe,CACb5B,WAAY,YACZ6B,SAAU,QACVC,WAAY,eACZC,WAAY,eACZC,oBAAqB,cACrBC,uBAAwB,qBACxBC,uBAAuB,uBC2BzB,EA/BqB,CACnBlC,WAAYT,eACS4C,EAAAA,EAAAA,IAAKC,EAAOpC,WAAYL,GAG7CkC,SAAUtC,eACW8C,EAAAA,EAAAA,IAAID,EAAOP,SAAUS,GAG1CR,WAAYvC,eACSgD,EAAAA,EAAAA,IAAMH,EAAON,WAAYnC,GAG9CoC,WAAYxC,eACSiD,EAAAA,EAAAA,IAAQJ,EAAOL,WAAYO,GAGhDN,oBAAqBzC,eACA8C,EAAAA,EAAAA,IAAID,EAAOJ,oBAAqBM,GAGrDJ,uBAAwB3C,eACH8C,EAAAA,EAAAA,IAAID,EAAOF,uBAAwBI,GAGxDL,uBAAwB1C,eACH4C,EAAAA,EAAAA,IAAKC,EAAOH,uBAAwBtC,G","sources":["pages/Dashboard/RoleManagement/CreateRole.js","services/Role/routes.js","services/Role/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PrimaryButton } from \"components/Buttons\";\r\nimport Colors from \"assets/Style/Colors\";\r\nimport { FontFamily } from \"assets\";\r\nimport { ErrorToaster, SuccessToaster } from \"components/Toaster\";\r\nimport InputField from \"components/Input\";\r\nimport RoleServices from \"services/Role\";\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\";\r\n\r\nfunction CreateRole() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { register, handleSubmit, formState: { errors }, control } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // *For Create Role\r\n  const createRole = async (formData) => {\r\n    setLoading(true)\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        name: formData?.roleName,\r\n      }\r\n\r\n\r\n      console.log(obj);\r\n            const promise = RoleServices.createRole(obj);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                'Saving ...',\r\n                'Success',\r\n                'Something Went Wrong'\r\n            );\r\n            const response = await promise;\r\n            if (response?.responseCode === 200) {\r\n                navigate('/role-list')\r\n            }\r\n\r\n      \r\n    } catch (error) {\r\n      showErrorToast(error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 2, borderRadius: 3,}}>\r\n\r\n      <Box component=\"form\" onSubmit={handleSubmit(createRole)} >\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n          <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >CREATE ROLE</Typography>\r\n          <Box sx={{ display: 'flex', gap: '10px' }}>\r\n            <PrimaryButton\r\n             bgcolor={'#bd9b4a'}\r\n              title=\"Create\"\r\n              type={'submit'}\r\n\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n        <Grid container spacing={0} p={3} >\r\n\r\n          <Grid container spacing={1} item xs={12} sm={6}>\r\n\r\n            <InputField\r\n              label={\"Role Name :*\"}\r\n              size={'small'}\r\n              placeholder={\"Role Name\"}\r\n              error={errors?.roleName?.message}\r\n              register={register(\"roleName\", {\r\n                required:\r\n                  \"Please enter your role name.\"\r\n\r\n              })}\r\n            />\r\n\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateRole;","const routes = {\r\n  createRole: 'roles/add',\r\n  getRoles: 'roles',\r\n  updateRole: 'roles/update',\r\n  deleteRole: 'roles/delete',\r\n  getRolesPermissions: 'permissions',\r\n  updateRolesPermissions: 'permissions/update',\r\n  getSubRolesPermissions:'permissions/subUser'\r\n};\r\n\r\nexport default routes","import { post, get, patch, deleted } from 'services';\r\nimport routes from './routes';\r\n\r\nconst RoleServices = {\r\n  createRole: async (obj) => {\r\n    const data = await post(routes.createRole, obj);\r\n    return data;\r\n  },\r\n  getRoles: async (params) => {\r\n    const data = await get(routes.getRoles, params);\r\n    return data;\r\n  },\r\n  updateRole: async (obj) => {\r\n    const data = await patch(routes.updateRole, obj);\r\n    return data;\r\n  },\r\n  deleteRole: async (params) => {\r\n    const data = await deleted(routes.deleteRole, params);\r\n    return data;\r\n  },\r\n  getRolesPermissions: async (params) => {\r\n    const data = await get(routes.getRolesPermissions, params);\r\n    return data;\r\n  },\r\n  getSubRolesPermissions: async (params) => {\r\n    const data = await get(routes.getSubRolesPermissions, params);\r\n    return data;\r\n  },\r\n  updateRolesPermissions: async (obj) => {\r\n    const data = await post(routes.updateRolesPermissions, obj);\r\n    return data;\r\n  },\r\n}\r\n\r\nexport default RoleServices"],"names":["_errors$roleName","navigate","useNavigate","register","handleSubmit","formState","errors","control","useForm","loading","setLoading","useState","_jsx","Box","sx","p","borderRadius","children","_jsxs","component","onSubmit","async","console","log","formData","obj","name","roleName","promise","RoleServices","createRole","showPromiseToast","response","responseCode","error","showErrorToast","display","justifyContent","gap","alignItems","Typography","fontSize","fontWeight","PrimaryButton","bgcolor","title","type","Grid","container","spacing","item","xs","sm","InputField","label","size","placeholder","message","required","getRoles","updateRole","deleteRole","getRolesPermissions","updateRolesPermissions","getSubRolesPermissions","post","routes","get","params","patch","deleted"],"sourceRoot":""}