{"version":3,"file":"static/js/6544.bd9621f8.chunk.js","mappings":"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","sources":["pages/Dashboard/SubRoleManagement/CreateRole.js","services/Role/routes.js","services/Role/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid, InputAdornment, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PrimaryButton } from \"components/Buttons\";\r\nimport Colors from \"assets/Style/Colors\";\r\nimport { FontFamily } from \"assets\";\r\nimport { ErrorToaster, SuccessToaster } from \"components/Toaster\";\r\nimport InputField from \"components/Input\";\r\nimport RoleServices from \"services/Role\";\r\nimport { showErrorToast, showPromiseToast } from \"components/NewToaster\";\r\nimport { useAuth } from \"context/UseContext\";\r\n\r\nfunction CreateRole() {\r\n\r\n  const navigate = useNavigate();\r\n  const { user, userLogout } = useAuth();\r\n\r\n  const { register, handleSubmit, formState: { errors }, control } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // *For Create Role\r\n  const createRole = async (formData) => {\r\n    setLoading(true)\r\n    console.log(formData);\r\n    try {\r\n      let obj = {\r\n        name: user?.ref_id+\"-\"+formData?.roleName,\r\n        customer_id: user?.customer_id\r\n      }\r\n\r\n\r\n      console.log(obj);\r\n      const promise = RoleServices.createRole(obj);\r\n\r\n      showPromiseToast(\r\n        promise,\r\n        'Saving ...',\r\n        'Success',\r\n        'Something Went Wrong'\r\n      );\r\n      const response = await promise;\r\n      if (response?.responseCode === 200) {\r\n        navigate('/sub-role-list')\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Box sx={{ p: 2, borderRadius: 3, }}>\r\n\r\n      <Box component=\"form\" onSubmit={handleSubmit(createRole)} >\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '10px', alignItems: 'flex-end' }}>\r\n          <Typography sx={{ fontSize: \"22px\", fontWeight: 'bold' }} >CREATE SUB ROLE</Typography>\r\n          <Box sx={{ display: 'flex', gap: '10px' }}>\r\n            <PrimaryButton\r\n             bgcolor={'#bd9b4a'}\r\n              title=\"Create\"\r\n              type={'submit'}\r\n\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n        <Grid container spacing={0} p={3} >\r\n\r\n          <Grid container spacing={1} item xs={12} sm={6}>\r\n\r\n\r\n            <InputField\r\n              label={\"Role Name :*\"}\r\n              size=\"small\"\r\n              placeholder=\"Role Name\"\r\n              error={errors?.roleName?.message}\r\n              register={register(\"roleName\", {\r\n                required: \"Please enter your role name.\"\r\n              })}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">{user?.ref_id}-</InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateRole;","const routes = {\r\n  createRole: 'roles/add',\r\n  getRoles: 'roles',\r\n  updateRole: 'roles/update',\r\n  deleteRole: 'roles/delete',\r\n  getRolesPermissions: 'permissions',\r\n  updateRolesPermissions: 'permissions/update',\r\n  getSubRolesPermissions:'permissions/subUser'\r\n};\r\n\r\nexport default routes","import { post, get, patch, deleted } from 'services';\r\nimport routes from './routes';\r\n\r\nconst RoleServices = {\r\n  createRole: async (obj) => {\r\n    const data = await post(routes.createRole, obj);\r\n    return data;\r\n  },\r\n  getRoles: async (params) => {\r\n    const data = await get(routes.getRoles, params);\r\n    return data;\r\n  },\r\n  updateRole: async (obj) => {\r\n    const data = await patch(routes.updateRole, obj);\r\n    return data;\r\n  },\r\n  deleteRole: async (params) => {\r\n    const data = await deleted(routes.deleteRole, params);\r\n    return data;\r\n  },\r\n  getRolesPermissions: async (params) => {\r\n    const data = await get(routes.getRolesPermissions, params);\r\n    return data;\r\n  },\r\n  getSubRolesPermissions: async (params) => {\r\n    const data = await get(routes.getSubRolesPermissions, params);\r\n    return data;\r\n  },\r\n  updateRolesPermissions: async (obj) => {\r\n    const data = await post(routes.updateRolesPermissions, obj);\r\n    return data;\r\n  },\r\n}\r\n\r\nexport default RoleServices"],"names":["_errors$roleName","navigate","useNavigate","user","userLogout","useAuth","register","handleSubmit","formState","errors","control","useForm","loading","setLoading","useState","useEffect","_jsx","Box","sx","p","borderRadius","children","_jsxs","component","onSubmit","async","console","log","formData","obj","name","ref_id","roleName","customer_id","promise","RoleServices","createRole","showPromiseToast","response","responseCode","error","display","justifyContent","gap","alignItems","Typography","fontSize","fontWeight","PrimaryButton","bgcolor","title","type","Grid","container","spacing","item","xs","sm","InputField","label","size","placeholder","message","required","InputProps","startAdornment","InputAdornment","position","getRoles","updateRole","deleteRole","getRolesPermissions","updateRolesPermissions","getSubRolesPermissions","post","routes","get","params","patch","deleted"],"sourceRoot":""}